// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AppRunnerGroupSettings app runner group settings
//
// swagger:model app.RunnerGroupSettings
type AppRunnerGroupSettings struct {

	// aws cloudformation stack type
	AwsCloudformationStackType string `json:"aws_cloudformation_stack_type,omitempty"`

	// aws runner specifics runner-v2
	AwsInstanceType string `json:"aws_instance_type,omitempty"`

	// aws tags
	AwsTags map[string]string `json:"aws_tags,omitempty"`

	// container image tag
	ContainerImageTag string `json:"container_image_tag,omitempty"`

	// configuration for deploying the runner
	ContainerImageURL string `json:"container_image_url,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// created by id
	CreatedByID string `json:"created_by_id,omitempty"`

	// enable logging
	EnableLogging bool `json:"enable_logging,omitempty"`

	// enable metrics
	EnableMetrics bool `json:"enable_metrics,omitempty"`

	// enable sentry
	EnableSentry bool `json:"enable_sentry,omitempty"`

	// the job loop groups the runner should poll for
	Groups []string `json:"groups"`

	// Various settings for the runner to handle internally
	HeartBeatTimeout int64 `json:"heart_beat_timeout,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// local aws iam role arn
	LocalAwsIamRoleArn string `json:"local_aws_iam_role_arn,omitempty"`

	// logging level
	LoggingLevel string `json:"logging_level,omitempty"`

	// Metadata is used as both log and metric tags/attributes in the runner when emitting data
	Metadata map[string]string `json:"metadata,omitempty"`

	// org runner specifics
	OrgAwsIamRoleArn string `json:"org_aws_iam_role_arn,omitempty"`

	// org id
	OrgID string `json:"org_id,omitempty"`

	// org k8s service account name
	OrgK8sServiceAccountName string `json:"org_k8s_service_account_name,omitempty"`

	// otel collector config
	OtelCollectorConfig string `json:"otel_collector_config,omitempty"`

	// platform variable for use in the runner
	Platform string `json:"platform,omitempty"`

	// runner api url
	RunnerAPIURL string `json:"runner_api_url,omitempty"`

	// runner group id
	RunnerGroupID string `json:"runner_group_id,omitempty"`

	// configuration for managing the runner server side
	SandboxMode bool `json:"sandbox_mode,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this app runner group settings
func (m *AppRunnerGroupSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this app runner group settings based on context it is used
func (m *AppRunnerGroupSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AppRunnerGroupSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppRunnerGroupSettings) UnmarshalBinary(b []byte) error {
	var res AppRunnerGroupSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
