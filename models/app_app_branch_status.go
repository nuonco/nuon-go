// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppAppBranchStatus app app branch status
//
// swagger:model app.AppBranchStatus
type AppAppBranchStatus string

func NewAppAppBranchStatus(value AppAppBranchStatus) *AppAppBranchStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppAppBranchStatus.
func (m AppAppBranchStatus) Pointer() *AppAppBranchStatus {
	return &m
}

const (

	// AppAppBranchStatusActive captures enum value "active"
	AppAppBranchStatusActive AppAppBranchStatus = "active"

	// AppAppBranchStatusDeleted captures enum value "deleted"
	AppAppBranchStatusDeleted AppAppBranchStatus = "deleted"
)

// for schema
var appAppBranchStatusEnum []interface{}

func init() {
	var res []AppAppBranchStatus
	if err := json.Unmarshal([]byte(`["active","deleted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appAppBranchStatusEnum = append(appAppBranchStatusEnum, v)
	}
}

func (m AppAppBranchStatus) validateAppAppBranchStatusEnum(path, location string, value AppAppBranchStatus) error {
	if err := validate.EnumCase(path, location, value, appAppBranchStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app app branch status
func (m AppAppBranchStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppAppBranchStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app app branch status based on context it is used
func (m AppAppBranchStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
