// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppWorkflowStepResponseType app workflow step response type
//
// swagger:model app.WorkflowStepResponseType
type AppWorkflowStepResponseType string

func NewAppWorkflowStepResponseType(value AppWorkflowStepResponseType) *AppWorkflowStepResponseType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppWorkflowStepResponseType.
func (m AppWorkflowStepResponseType) Pointer() *AppWorkflowStepResponseType {
	return &m
}

const (

	// AppWorkflowStepResponseTypeDeny captures enum value "deny"
	AppWorkflowStepResponseTypeDeny AppWorkflowStepResponseType = "deny"

	// AppWorkflowStepResponseTypeApprove captures enum value "approve"
	AppWorkflowStepResponseTypeApprove AppWorkflowStepResponseType = "approve"

	// AppWorkflowStepResponseTypeSkip captures enum value "skip"
	AppWorkflowStepResponseTypeSkip AppWorkflowStepResponseType = "skip"

	// AppWorkflowStepResponseTypeRetry captures enum value "retry"
	AppWorkflowStepResponseTypeRetry AppWorkflowStepResponseType = "retry"

	// AppWorkflowStepResponseTypeAutoDashApprove captures enum value "auto-approve"
	AppWorkflowStepResponseTypeAutoDashApprove AppWorkflowStepResponseType = "auto-approve"
)

// for schema
var appWorkflowStepResponseTypeEnum []interface{}

func init() {
	var res []AppWorkflowStepResponseType
	if err := json.Unmarshal([]byte(`["deny","approve","skip","retry","auto-approve"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appWorkflowStepResponseTypeEnum = append(appWorkflowStepResponseTypeEnum, v)
	}
}

func (m AppWorkflowStepResponseType) validateAppWorkflowStepResponseTypeEnum(path, location string, value AppWorkflowStepResponseType) error {
	if err := validate.EnumCase(path, location, value, appWorkflowStepResponseTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app workflow step response type
func (m AppWorkflowStepResponseType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppWorkflowStepResponseTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app workflow step response type based on context it is used
func (m AppWorkflowStepResponseType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
