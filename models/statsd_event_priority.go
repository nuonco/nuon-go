// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StatsdEventPriority statsd event priority
//
// swagger:model statsd.EventPriority
type StatsdEventPriority string

func NewStatsdEventPriority(value StatsdEventPriority) *StatsdEventPriority {
	return &value
}

// Pointer returns a pointer to a freshly-allocated StatsdEventPriority.
func (m StatsdEventPriority) Pointer() *StatsdEventPriority {
	return &m
}

const (

	// StatsdEventPriorityNormal captures enum value "normal"
	StatsdEventPriorityNormal StatsdEventPriority = "normal"

	// StatsdEventPriorityLow captures enum value "low"
	StatsdEventPriorityLow StatsdEventPriority = "low"
)

// for schema
var statsdEventPriorityEnum []interface{}

func init() {
	var res []StatsdEventPriority
	if err := json.Unmarshal([]byte(`["normal","low"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		statsdEventPriorityEnum = append(statsdEventPriorityEnum, v)
	}
}

func (m StatsdEventPriority) validateStatsdEventPriorityEnum(path, location string, value StatsdEventPriority) error {
	if err := validate.EnumCase(path, location, value, statsdEventPriorityEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this statsd event priority
func (m StatsdEventPriority) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStatsdEventPriorityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this statsd event priority based on context it is used
func (m StatsdEventPriority) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
