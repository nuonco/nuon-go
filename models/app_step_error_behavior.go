// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppStepErrorBehavior app step error behavior
//
// swagger:model app.StepErrorBehavior
type AppStepErrorBehavior string

func NewAppStepErrorBehavior(value AppStepErrorBehavior) *AppStepErrorBehavior {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppStepErrorBehavior.
func (m AppStepErrorBehavior) Pointer() *AppStepErrorBehavior {
	return &m
}

const (

	// AppStepErrorBehaviorAbort captures enum value "abort"
	AppStepErrorBehaviorAbort AppStepErrorBehavior = "abort"

	// AppStepErrorBehaviorContinue captures enum value "continue"
	AppStepErrorBehaviorContinue AppStepErrorBehavior = "continue"
)

// for schema
var appStepErrorBehaviorEnum []interface{}

func init() {
	var res []AppStepErrorBehavior
	if err := json.Unmarshal([]byte(`["abort","continue"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appStepErrorBehaviorEnum = append(appStepErrorBehaviorEnum, v)
	}
}

func (m AppStepErrorBehavior) validateAppStepErrorBehaviorEnum(path, location string, value AppStepErrorBehavior) error {
	if err := validate.EnumCase(path, location, value, appStepErrorBehaviorEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app step error behavior
func (m AppStepErrorBehavior) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppStepErrorBehaviorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app step error behavior based on context it is used
func (m AppStepErrorBehavior) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
