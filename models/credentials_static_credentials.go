// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CredentialsStaticCredentials credentials static credentials
//
// swagger:model credentials.StaticCredentials
type CredentialsStaticCredentials struct {

	// access key id
	// Required: true
	AccessKeyID *string `json:"access_key_id"`

	// secret access key
	// Required: true
	SecretAccessKey *string `json:"secret_access_key"`

	// session token
	// Required: true
	SessionToken *string `json:"session_token"`
}

// Validate validates this credentials static credentials
func (m *CredentialsStaticCredentials) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessKeyID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecretAccessKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSessionToken(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CredentialsStaticCredentials) validateAccessKeyID(formats strfmt.Registry) error {

	if err := validate.Required("access_key_id", "body", m.AccessKeyID); err != nil {
		return err
	}

	return nil
}

func (m *CredentialsStaticCredentials) validateSecretAccessKey(formats strfmt.Registry) error {

	if err := validate.Required("secret_access_key", "body", m.SecretAccessKey); err != nil {
		return err
	}

	return nil
}

func (m *CredentialsStaticCredentials) validateSessionToken(formats strfmt.Registry) error {

	if err := validate.Required("session_token", "body", m.SessionToken); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this credentials static credentials based on context it is used
func (m *CredentialsStaticCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CredentialsStaticCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialsStaticCredentials) UnmarshalBinary(b []byte) error {
	var res CredentialsStaticCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
