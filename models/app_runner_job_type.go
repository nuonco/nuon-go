// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppRunnerJobType app runner job type
//
// swagger:model app.RunnerJobType
type AppRunnerJobType string

func NewAppRunnerJobType(value AppRunnerJobType) *AppRunnerJobType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppRunnerJobType.
func (m AppRunnerJobType) Pointer() *AppRunnerJobType {
	return &m
}

const (

	// AppRunnerJobTypeHealthDashCheck captures enum value "health-check"
	AppRunnerJobTypeHealthDashCheck AppRunnerJobType = "health-check"

	// AppRunnerJobTypeDockerDashBuild captures enum value "docker-build"
	AppRunnerJobTypeDockerDashBuild AppRunnerJobType = "docker-build"

	// AppRunnerJobTypeContainerDashImageDashBuild captures enum value "container-image-build"
	AppRunnerJobTypeContainerDashImageDashBuild AppRunnerJobType = "container-image-build"

	// AppRunnerJobTypeTerraformDashModuleDashBuild captures enum value "terraform-module-build"
	AppRunnerJobTypeTerraformDashModuleDashBuild AppRunnerJobType = "terraform-module-build"

	// AppRunnerJobTypeHelmDashChartDashBuild captures enum value "helm-chart-build"
	AppRunnerJobTypeHelmDashChartDashBuild AppRunnerJobType = "helm-chart-build"

	// AppRunnerJobTypeNoopDashBuild captures enum value "noop-build"
	AppRunnerJobTypeNoopDashBuild AppRunnerJobType = "noop-build"

	// AppRunnerJobTypeAppDashConfigDashSync captures enum value "app-config-sync"
	AppRunnerJobTypeAppDashConfigDashSync AppRunnerJobType = "app-config-sync"

	// AppRunnerJobTypeOciDashSync captures enum value "oci-sync"
	AppRunnerJobTypeOciDashSync AppRunnerJobType = "oci-sync"

	// AppRunnerJobTypeNoopDashSync captures enum value "noop-sync"
	AppRunnerJobTypeNoopDashSync AppRunnerJobType = "noop-sync"

	// AppRunnerJobTypeTerraformDashDeploy captures enum value "terraform-deploy"
	AppRunnerJobTypeTerraformDashDeploy AppRunnerJobType = "terraform-deploy"

	// AppRunnerJobTypeHelmDashChartDashDeploy captures enum value "helm-chart-deploy"
	AppRunnerJobTypeHelmDashChartDashDeploy AppRunnerJobType = "helm-chart-deploy"

	// AppRunnerJobTypeJobDashDeploy captures enum value "job-deploy"
	AppRunnerJobTypeJobDashDeploy AppRunnerJobType = "job-deploy"

	// AppRunnerJobTypeNoopDashDeploy captures enum value "noop-deploy"
	AppRunnerJobTypeNoopDashDeploy AppRunnerJobType = "noop-deploy"

	// AppRunnerJobTypeShutDashDown captures enum value "shut-down"
	AppRunnerJobTypeShutDashDown AppRunnerJobType = "shut-down"

	// AppRunnerJobTypeUpdateDashVersion captures enum value "update-version"
	AppRunnerJobTypeUpdateDashVersion AppRunnerJobType = "update-version"

	// AppRunnerJobTypeNoop captures enum value "noop"
	AppRunnerJobTypeNoop AppRunnerJobType = "noop"

	// AppRunnerJobTypeMngDashVMDashShutDashDown captures enum value "mng-vm-shut-down"
	AppRunnerJobTypeMngDashVMDashShutDashDown AppRunnerJobType = "mng-vm-shut-down"

	// AppRunnerJobTypeMngDashShutDashDown captures enum value "mng-shut-down"
	AppRunnerJobTypeMngDashShutDashDown AppRunnerJobType = "mng-shut-down"

	// AppRunnerJobTypeMngDashRunnerDashUpdateDashVersion captures enum value "mng-runner-update-version"
	AppRunnerJobTypeMngDashRunnerDashUpdateDashVersion AppRunnerJobType = "mng-runner-update-version"

	// AppRunnerJobTypeMngDashRunnerDashRestart captures enum value "mng-runner-restart"
	AppRunnerJobTypeMngDashRunnerDashRestart AppRunnerJobType = "mng-runner-restart"

	// AppRunnerJobTypeSandboxDashTerraform captures enum value "sandbox-terraform"
	AppRunnerJobTypeSandboxDashTerraform AppRunnerJobType = "sandbox-terraform"

	// AppRunnerJobTypeSandboxDashTerraformDashPlan captures enum value "sandbox-terraform-plan"
	AppRunnerJobTypeSandboxDashTerraformDashPlan AppRunnerJobType = "sandbox-terraform-plan"

	// AppRunnerJobTypeSandboxDashSyncDashSecrets captures enum value "sandbox-sync-secrets"
	AppRunnerJobTypeSandboxDashSyncDashSecrets AppRunnerJobType = "sandbox-sync-secrets"

	// AppRunnerJobTypeRunnerDashHelm captures enum value "runner-helm"
	AppRunnerJobTypeRunnerDashHelm AppRunnerJobType = "runner-helm"

	// AppRunnerJobTypeRunnerDashTerraform captures enum value "runner-terraform"
	AppRunnerJobTypeRunnerDashTerraform AppRunnerJobType = "runner-terraform"

	// AppRunnerJobTypeRunnerDashLocal captures enum value "runner-local"
	AppRunnerJobTypeRunnerDashLocal AppRunnerJobType = "runner-local"

	// AppRunnerJobTypeActionsDashWorkflow captures enum value "actions-workflow"
	AppRunnerJobTypeActionsDashWorkflow AppRunnerJobType = "actions-workflow"
)

// for schema
var appRunnerJobTypeEnum []interface{}

func init() {
	var res []AppRunnerJobType
	if err := json.Unmarshal([]byte(`["health-check","docker-build","container-image-build","terraform-module-build","helm-chart-build","noop-build","app-config-sync","oci-sync","noop-sync","terraform-deploy","helm-chart-deploy","job-deploy","noop-deploy","shut-down","update-version","noop","mng-vm-shut-down","mng-shut-down","mng-runner-update-version","mng-runner-restart","sandbox-terraform","sandbox-terraform-plan","sandbox-sync-secrets","runner-helm","runner-terraform","runner-local","actions-workflow"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appRunnerJobTypeEnum = append(appRunnerJobTypeEnum, v)
	}
}

func (m AppRunnerJobType) validateAppRunnerJobTypeEnum(path, location string, value AppRunnerJobType) error {
	if err := validate.EnumCase(path, location, value, appRunnerJobTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app runner job type
func (m AppRunnerJobType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppRunnerJobTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app runner job type based on context it is used
func (m AppRunnerJobType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
