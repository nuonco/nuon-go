// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppInstallWorkflowStepExecutionType app install workflow step execution type
//
// swagger:model app.InstallWorkflowStepExecutionType
type AppInstallWorkflowStepExecutionType string

func NewAppInstallWorkflowStepExecutionType(value AppInstallWorkflowStepExecutionType) *AppInstallWorkflowStepExecutionType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppInstallWorkflowStepExecutionType.
func (m AppInstallWorkflowStepExecutionType) Pointer() *AppInstallWorkflowStepExecutionType {
	return &m
}

const (

	// AppInstallWorkflowStepExecutionTypeSystem captures enum value "system"
	AppInstallWorkflowStepExecutionTypeSystem AppInstallWorkflowStepExecutionType = "system"

	// AppInstallWorkflowStepExecutionTypeUser captures enum value "user"
	AppInstallWorkflowStepExecutionTypeUser AppInstallWorkflowStepExecutionType = "user"

	// AppInstallWorkflowStepExecutionTypeApproval captures enum value "approval"
	AppInstallWorkflowStepExecutionTypeApproval AppInstallWorkflowStepExecutionType = "approval"
)

// for schema
var appInstallWorkflowStepExecutionTypeEnum []interface{}

func init() {
	var res []AppInstallWorkflowStepExecutionType
	if err := json.Unmarshal([]byte(`["system","user","approval"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appInstallWorkflowStepExecutionTypeEnum = append(appInstallWorkflowStepExecutionTypeEnum, v)
	}
}

func (m AppInstallWorkflowStepExecutionType) validateAppInstallWorkflowStepExecutionTypeEnum(path, location string, value AppInstallWorkflowStepExecutionType) error {
	if err := validate.EnumCase(path, location, value, appInstallWorkflowStepExecutionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app install workflow step execution type
func (m AppInstallWorkflowStepExecutionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppInstallWorkflowStepExecutionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app install workflow step execution type based on context it is used
func (m AppInstallWorkflowStepExecutionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
