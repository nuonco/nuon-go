// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AppAppInstallerMetadata app app installer metadata
//
// swagger:model app.AppInstallerMetadata
type AppAppInstallerMetadata struct {

	// app installer id
	AppInstallerID string `json:"app_installer_id,omitempty"`

	// community url
	CommunityURL string `json:"community_url,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// created by id
	CreatedByID string `json:"created_by_id,omitempty"`

	// demo url
	DemoURL string `json:"demo_url,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// documentation url
	DocumentationURL string `json:"documentation_url,omitempty"`

	// github url
	GithubURL string `json:"github_url,omitempty"`

	// homepage url
	HomepageURL string `json:"homepage_url,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// logo url
	LogoURL string `json:"logo_url,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// post install markdown
	PostInstallMarkdown string `json:"post_install_markdown,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this app app installer metadata
func (m *AppAppInstallerMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this app app installer metadata based on context it is used
func (m *AppAppInstallerMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AppAppInstallerMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppAppInstallerMetadata) UnmarshalBinary(b []byte) error {
	var res AppAppInstallerMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
