// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AppStatus app status
//
// swagger:model app.Status
type AppStatus struct {

	// Blockers are the statuses that must resolve before this one can proceed. Only populated for 'blocked'-type states
	// TODO WE CAN'T HAVE THIS, FAR TOO EXPENSIVE TO COMPUTE IN GENERAL
	Blockers []interface{} `json:"blockers"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// Errs are the errors associated with the status. Only populated for 'error'-type states
	Errs []interface{} `json:"errs"`

	// name
	Name string `json:"name,omitempty"`

	// The primary state type string - uniform across all object types
	State string `json:"state,omitempty"`

	// A subtype string, specific to the main State, but may vary across object types
	Substate string `json:"substate,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this app status
func (m *AppStatus) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this app status based on context it is used
func (m *AppStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AppStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppStatus) UnmarshalBinary(b []byte) error {
	var res AppStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
