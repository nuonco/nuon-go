// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AppAzureStackOutputs app azure stack outputs
//
// swagger:model app.AzureStackOutputs
type AppAzureStackOutputs struct {

	// network id
	NetworkID string `json:"network_id,omitempty"`

	// network name
	NetworkName string `json:"network_name,omitempty"`

	// private subnet ids
	PrivateSubnetIds []string `json:"private_subnet_ids"`

	// private subnet names
	PrivateSubnetNames []string `json:"private_subnet_names"`

	// public subnet ids
	PublicSubnetIds []string `json:"public_subnet_ids"`

	// public subnet names
	PublicSubnetNames []string `json:"public_subnet_names"`

	// resource group id
	ResourceGroupID string `json:"resource_group_id,omitempty"`

	// resource group location
	ResourceGroupLocation string `json:"resource_group_location,omitempty"`

	// resource group name
	ResourceGroupName string `json:"resource_group_name,omitempty"`

	// subscription id
	SubscriptionID string `json:"subscription_id,omitempty"`

	// subscription tenant id
	SubscriptionTenantID string `json:"subscription_tenant_id,omitempty"`
}

// Validate validates this app azure stack outputs
func (m *AppAzureStackOutputs) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this app azure stack outputs based on context it is used
func (m *AppAzureStackOutputs) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AppAzureStackOutputs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppAzureStackOutputs) UnmarshalBinary(b []byte) error {
	var res AppAzureStackOutputs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
