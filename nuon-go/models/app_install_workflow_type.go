// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppInstallWorkflowType app install workflow type
//
// swagger:model app.InstallWorkflowType
type AppInstallWorkflowType string

func NewAppInstallWorkflowType(value AppInstallWorkflowType) *AppInstallWorkflowType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppInstallWorkflowType.
func (m AppInstallWorkflowType) Pointer() *AppInstallWorkflowType {
	return &m
}

const (

	// AppInstallWorkflowTypeProvision captures enum value "provision"
	AppInstallWorkflowTypeProvision AppInstallWorkflowType = "provision"

	// AppInstallWorkflowTypeDeprovision captures enum value "deprovision"
	AppInstallWorkflowTypeDeprovision AppInstallWorkflowType = "deprovision"

	// AppInstallWorkflowTypeManualDeploy captures enum value "manual_deploy"
	AppInstallWorkflowTypeManualDeploy AppInstallWorkflowType = "manual_deploy"

	// AppInstallWorkflowTypeInputUpdate captures enum value "input_update"
	AppInstallWorkflowTypeInputUpdate AppInstallWorkflowType = "input_update"

	// AppInstallWorkflowTypeDeployComponents captures enum value "deploy_components"
	AppInstallWorkflowTypeDeployComponents AppInstallWorkflowType = "deploy_components"

	// AppInstallWorkflowTypeTeardownComponents captures enum value "teardown_components"
	AppInstallWorkflowTypeTeardownComponents AppInstallWorkflowType = "teardown_components"

	// AppInstallWorkflowTypeReprovisionSandbox captures enum value "reprovision_sandbox"
	AppInstallWorkflowTypeReprovisionSandbox AppInstallWorkflowType = "reprovision_sandbox"

	// AppInstallWorkflowTypeReprovision captures enum value "reprovision"
	AppInstallWorkflowTypeReprovision AppInstallWorkflowType = "reprovision"
)

// for schema
var appInstallWorkflowTypeEnum []interface{}

func init() {
	var res []AppInstallWorkflowType
	if err := json.Unmarshal([]byte(`["provision","deprovision","manual_deploy","input_update","deploy_components","teardown_components","reprovision_sandbox","reprovision"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appInstallWorkflowTypeEnum = append(appInstallWorkflowTypeEnum, v)
	}
}

func (m AppInstallWorkflowType) validateAppInstallWorkflowTypeEnum(path, location string, value AppInstallWorkflowType) error {
	if err := validate.EnumCase(path, location, value, appInstallWorkflowTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app install workflow type
func (m AppInstallWorkflowType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppInstallWorkflowTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app install workflow type based on context it is used
func (m AppInstallWorkflowType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
