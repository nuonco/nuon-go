// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppAWSIAMRoleType app a w s i a m role type
//
// swagger:model app.AWSIAMRoleType
type AppAWSIAMRoleType string

func NewAppAWSIAMRoleType(value AppAWSIAMRoleType) *AppAWSIAMRoleType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppAWSIAMRoleType.
func (m AppAWSIAMRoleType) Pointer() *AppAWSIAMRoleType {
	return &m
}

const (

	// AppAWSIAMRoleTypeRunnerProvision captures enum value "runner_provision"
	AppAWSIAMRoleTypeRunnerProvision AppAWSIAMRoleType = "runner_provision"

	// AppAWSIAMRoleTypeRunnerDeprovision captures enum value "runner_deprovision"
	AppAWSIAMRoleTypeRunnerDeprovision AppAWSIAMRoleType = "runner_deprovision"

	// AppAWSIAMRoleTypeRunnerMaintenance captures enum value "runner_maintenance"
	AppAWSIAMRoleTypeRunnerMaintenance AppAWSIAMRoleType = "runner_maintenance"

	// AppAWSIAMRoleTypeBreakglass captures enum value "breakglass"
	AppAWSIAMRoleTypeBreakglass AppAWSIAMRoleType = "breakglass"

	// AppAWSIAMRoleTypeRunnerBreakglass captures enum value "runner_breakglass"
	AppAWSIAMRoleTypeRunnerBreakglass AppAWSIAMRoleType = "runner_breakglass"
)

// for schema
var appAWSIAMRoleTypeEnum []interface{}

func init() {
	var res []AppAWSIAMRoleType
	if err := json.Unmarshal([]byte(`["runner_provision","runner_deprovision","runner_maintenance","breakglass","runner_breakglass"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appAWSIAMRoleTypeEnum = append(appAWSIAMRoleTypeEnum, v)
	}
}

func (m AppAWSIAMRoleType) validateAppAWSIAMRoleTypeEnum(path, location string, value AppAWSIAMRoleType) error {
	if err := validate.EnumCase(path, location, value, appAWSIAMRoleTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app a w s i a m role type
func (m AppAWSIAMRoleType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppAWSIAMRoleTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app a w s i a m role type based on context it is used
func (m AppAWSIAMRoleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
