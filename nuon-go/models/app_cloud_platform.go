// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppCloudPlatform app cloud platform
//
// swagger:model app.CloudPlatform
type AppCloudPlatform string

func NewAppCloudPlatform(value AppCloudPlatform) *AppCloudPlatform {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppCloudPlatform.
func (m AppCloudPlatform) Pointer() *AppCloudPlatform {
	return &m
}

const (

	// AppCloudPlatformAws captures enum value "aws"
	AppCloudPlatformAws AppCloudPlatform = "aws"

	// AppCloudPlatformAzure captures enum value "azure"
	AppCloudPlatformAzure AppCloudPlatform = "azure"

	// AppCloudPlatformUnknown captures enum value "unknown"
	AppCloudPlatformUnknown AppCloudPlatform = "unknown"
)

// for schema
var appCloudPlatformEnum []interface{}

func init() {
	var res []AppCloudPlatform
	if err := json.Unmarshal([]byte(`["aws","azure","unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appCloudPlatformEnum = append(appCloudPlatformEnum, v)
	}
}

func (m AppCloudPlatform) validateAppCloudPlatformEnum(path, location string, value AppCloudPlatform) error {
	if err := validate.EnumCase(path, location, value, appCloudPlatformEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app cloud platform
func (m AppCloudPlatform) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppCloudPlatformEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app cloud platform based on context it is used
func (m AppCloudPlatform) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
