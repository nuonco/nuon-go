// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppOrgInviteStatus app org invite status
//
// swagger:model app.OrgInviteStatus
type AppOrgInviteStatus string

func NewAppOrgInviteStatus(value AppOrgInviteStatus) *AppOrgInviteStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppOrgInviteStatus.
func (m AppOrgInviteStatus) Pointer() *AppOrgInviteStatus {
	return &m
}

const (

	// AppOrgInviteStatusPending captures enum value "pending"
	AppOrgInviteStatusPending AppOrgInviteStatus = "pending"

	// AppOrgInviteStatusAccepted captures enum value "accepted"
	AppOrgInviteStatusAccepted AppOrgInviteStatus = "accepted"
)

// for schema
var appOrgInviteStatusEnum []interface{}

func init() {
	var res []AppOrgInviteStatus
	if err := json.Unmarshal([]byte(`["pending","accepted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appOrgInviteStatusEnum = append(appOrgInviteStatusEnum, v)
	}
}

func (m AppOrgInviteStatus) validateAppOrgInviteStatusEnum(path, location string, value AppOrgInviteStatus) error {
	if err := validate.EnumCase(path, location, value, appOrgInviteStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app org invite status
func (m AppOrgInviteStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppOrgInviteStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app org invite status based on context it is used
func (m AppOrgInviteStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
