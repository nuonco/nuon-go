// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ServiceAppConfigTemplateType service app config template type
//
// swagger:model service.AppConfigTemplateType
type ServiceAppConfigTemplateType string

func NewServiceAppConfigTemplateType(value ServiceAppConfigTemplateType) *ServiceAppConfigTemplateType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ServiceAppConfigTemplateType.
func (m ServiceAppConfigTemplateType) Pointer() *ServiceAppConfigTemplateType {
	return &m
}

const (

	// ServiceAppConfigTemplateTypeAwsDashEcs captures enum value "aws-ecs"
	ServiceAppConfigTemplateTypeAwsDashEcs ServiceAppConfigTemplateType = "aws-ecs"

	// ServiceAppConfigTemplateTypeAwsDashEcsDashByovpc captures enum value "aws-ecs-byovpc"
	ServiceAppConfigTemplateTypeAwsDashEcsDashByovpc ServiceAppConfigTemplateType = "aws-ecs-byovpc"

	// ServiceAppConfigTemplateTypeAwsDashEks captures enum value "aws-eks"
	ServiceAppConfigTemplateTypeAwsDashEks ServiceAppConfigTemplateType = "aws-eks"

	// ServiceAppConfigTemplateTypeAwsDashEksDashByovpc captures enum value "aws-eks-byovpc"
	ServiceAppConfigTemplateTypeAwsDashEksDashByovpc ServiceAppConfigTemplateType = "aws-eks-byovpc"

	// ServiceAppConfigTemplateTypeAzureDashAks captures enum value "azure-aks"
	ServiceAppConfigTemplateTypeAzureDashAks ServiceAppConfigTemplateType = "azure-aks"

	// ServiceAppConfigTemplateTypeFlat captures enum value "flat"
	ServiceAppConfigTemplateTypeFlat ServiceAppConfigTemplateType = "flat"

	// ServiceAppConfigTemplateTypeTopDashLevel captures enum value "top-level"
	ServiceAppConfigTemplateTypeTopDashLevel ServiceAppConfigTemplateType = "top-level"

	// ServiceAppConfigTemplateTypeInstaller captures enum value "installer"
	ServiceAppConfigTemplateTypeInstaller ServiceAppConfigTemplateType = "installer"

	// ServiceAppConfigTemplateTypeRunner captures enum value "runner"
	ServiceAppConfigTemplateTypeRunner ServiceAppConfigTemplateType = "runner"

	// ServiceAppConfigTemplateTypeSandbox captures enum value "sandbox"
	ServiceAppConfigTemplateTypeSandbox ServiceAppConfigTemplateType = "sandbox"

	// ServiceAppConfigTemplateTypeInputs captures enum value "inputs"
	ServiceAppConfigTemplateTypeInputs ServiceAppConfigTemplateType = "inputs"

	// ServiceAppConfigTemplateTypeTerraform captures enum value "terraform"
	ServiceAppConfigTemplateTypeTerraform ServiceAppConfigTemplateType = "terraform"

	// ServiceAppConfigTemplateTypeTerraformInfra captures enum value "terraformInfra"
	ServiceAppConfigTemplateTypeTerraformInfra ServiceAppConfigTemplateType = "terraformInfra"

	// ServiceAppConfigTemplateTypeHelm captures enum value "helm"
	ServiceAppConfigTemplateTypeHelm ServiceAppConfigTemplateType = "helm"

	// ServiceAppConfigTemplateTypeDockerDashBuild captures enum value "docker-build"
	ServiceAppConfigTemplateTypeDockerDashBuild ServiceAppConfigTemplateType = "docker-build"

	// ServiceAppConfigTemplateTypeJob captures enum value "job"
	ServiceAppConfigTemplateTypeJob ServiceAppConfigTemplateType = "job"

	// ServiceAppConfigTemplateTypeContainerDashImage captures enum value "container-image"
	ServiceAppConfigTemplateTypeContainerDashImage ServiceAppConfigTemplateType = "container-image"

	// ServiceAppConfigTemplateTypeEcrDashContainerDashImage captures enum value "ecr-container-image"
	ServiceAppConfigTemplateTypeEcrDashContainerDashImage ServiceAppConfigTemplateType = "ecr-container-image"
)

// for schema
var serviceAppConfigTemplateTypeEnum []interface{}

func init() {
	var res []ServiceAppConfigTemplateType
	if err := json.Unmarshal([]byte(`["aws-ecs","aws-ecs-byovpc","aws-eks","aws-eks-byovpc","azure-aks","flat","top-level","installer","runner","sandbox","inputs","terraform","terraformInfra","helm","docker-build","job","container-image","ecr-container-image"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		serviceAppConfigTemplateTypeEnum = append(serviceAppConfigTemplateTypeEnum, v)
	}
}

func (m ServiceAppConfigTemplateType) validateServiceAppConfigTemplateTypeEnum(path, location string, value ServiceAppConfigTemplateType) error {
	if err := validate.EnumCase(path, location, value, serviceAppConfigTemplateTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this service app config template type
func (m ServiceAppConfigTemplateType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateServiceAppConfigTemplateTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this service app config template type based on context it is used
func (m ServiceAppConfigTemplateType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
