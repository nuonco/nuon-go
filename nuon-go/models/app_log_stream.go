// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AppLogStream app log stream
//
// swagger:model app.LogStream
type AppLogStream struct {

	// attrs
	Attrs map[string]string `json:"attrs,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// created by id
	CreatedByID string `json:"created_by_id,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// open
	Open bool `json:"open,omitempty"`

	// org id
	OrgID string `json:"org_id,omitempty"`

	// owner id
	OwnerID string `json:"owner_id,omitempty"`

	// owner type
	OwnerType string `json:"owner_type,omitempty"`

	// runner api url
	RunnerAPIURL string `json:"runner_api_url,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// write token
	WriteToken string `json:"write_token,omitempty"`
}

// Validate validates this app log stream
func (m *AppLogStream) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this app log stream based on context it is used
func (m *AppLogStream) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AppLogStream) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppLogStream) UnmarshalBinary(b []byte) error {
	var res AppLogStream
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
