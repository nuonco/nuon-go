// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppAppConfigFmt app app config fmt
//
// swagger:model app.AppConfigFmt
type AppAppConfigFmt string

func NewAppAppConfigFmt(value AppAppConfigFmt) *AppAppConfigFmt {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppAppConfigFmt.
func (m AppAppConfigFmt) Pointer() *AppAppConfigFmt {
	return &m
}

const (

	// AppAppConfigFmtJSON captures enum value "json"
	AppAppConfigFmtJSON AppAppConfigFmt = "json"

	// AppAppConfigFmtToml captures enum value "toml"
	AppAppConfigFmtToml AppAppConfigFmt = "toml"

	// AppAppConfigFmtYaml captures enum value "yaml"
	AppAppConfigFmtYaml AppAppConfigFmt = "yaml"
)

// for schema
var appAppConfigFmtEnum []interface{}

func init() {
	var res []AppAppConfigFmt
	if err := json.Unmarshal([]byte(`["json","toml","yaml"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appAppConfigFmtEnum = append(appAppConfigFmtEnum, v)
	}
}

func (m AppAppConfigFmt) validateAppAppConfigFmtEnum(path, location string, value AppAppConfigFmt) error {
	if err := validate.EnumCase(path, location, value, appAppConfigFmtEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app app config fmt
func (m AppAppConfigFmt) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppAppConfigFmtEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app app config fmt based on context it is used
func (m AppAppConfigFmt) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
