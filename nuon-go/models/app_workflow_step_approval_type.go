// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppWorkflowStepApprovalType app workflow step approval type
//
// swagger:model app.WorkflowStepApprovalType
type AppWorkflowStepApprovalType string

func NewAppWorkflowStepApprovalType(value AppWorkflowStepApprovalType) *AppWorkflowStepApprovalType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppWorkflowStepApprovalType.
func (m AppWorkflowStepApprovalType) Pointer() *AppWorkflowStepApprovalType {
	return &m
}

const (

	// AppWorkflowStepApprovalTypeNoop captures enum value "noop"
	AppWorkflowStepApprovalTypeNoop AppWorkflowStepApprovalType = "noop"

	// AppWorkflowStepApprovalTypeApproveDashAll captures enum value "approve-all"
	AppWorkflowStepApprovalTypeApproveDashAll AppWorkflowStepApprovalType = "approve-all"

	// AppWorkflowStepApprovalTypeTerraformPlan captures enum value "terraform_plan"
	AppWorkflowStepApprovalTypeTerraformPlan AppWorkflowStepApprovalType = "terraform_plan"

	// AppWorkflowStepApprovalTypeHelmApproval captures enum value "helm_approval"
	AppWorkflowStepApprovalTypeHelmApproval AppWorkflowStepApprovalType = "helm_approval"
)

// for schema
var appWorkflowStepApprovalTypeEnum []interface{}

func init() {
	var res []AppWorkflowStepApprovalType
	if err := json.Unmarshal([]byte(`["noop","approve-all","terraform_plan","helm_approval"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appWorkflowStepApprovalTypeEnum = append(appWorkflowStepApprovalTypeEnum, v)
	}
}

func (m AppWorkflowStepApprovalType) validateAppWorkflowStepApprovalTypeEnum(path, location string, value AppWorkflowStepApprovalType) error {
	if err := validate.EnumCase(path, location, value, appWorkflowStepApprovalTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app workflow step approval type
func (m AppWorkflowStepApprovalType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppWorkflowStepApprovalTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app workflow step approval type based on context it is used
func (m AppWorkflowStepApprovalType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
