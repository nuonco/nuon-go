// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppInstallWorkflowStepApprovalType app install workflow step approval type
//
// swagger:model app.InstallWorkflowStepApprovalType
type AppInstallWorkflowStepApprovalType string

func NewAppInstallWorkflowStepApprovalType(value AppInstallWorkflowStepApprovalType) *AppInstallWorkflowStepApprovalType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppInstallWorkflowStepApprovalType.
func (m AppInstallWorkflowStepApprovalType) Pointer() *AppInstallWorkflowStepApprovalType {
	return &m
}

const (

	// AppInstallWorkflowStepApprovalTypeNoop captures enum value "noop"
	AppInstallWorkflowStepApprovalTypeNoop AppInstallWorkflowStepApprovalType = "noop"

	// AppInstallWorkflowStepApprovalTypeTerraformPlan captures enum value "terraform_plan"
	AppInstallWorkflowStepApprovalTypeTerraformPlan AppInstallWorkflowStepApprovalType = "terraform_plan"

	// AppInstallWorkflowStepApprovalTypeHelmApproval captures enum value "helm_approval"
	AppInstallWorkflowStepApprovalTypeHelmApproval AppInstallWorkflowStepApprovalType = "helm_approval"

	// AppInstallWorkflowStepApprovalTypeImageApproval captures enum value "image_approval"
	AppInstallWorkflowStepApprovalTypeImageApproval AppInstallWorkflowStepApprovalType = "image_approval"
)

// for schema
var appInstallWorkflowStepApprovalTypeEnum []interface{}

func init() {
	var res []AppInstallWorkflowStepApprovalType
	if err := json.Unmarshal([]byte(`["noop","terraform_plan","helm_approval","image_approval"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appInstallWorkflowStepApprovalTypeEnum = append(appInstallWorkflowStepApprovalTypeEnum, v)
	}
}

func (m AppInstallWorkflowStepApprovalType) validateAppInstallWorkflowStepApprovalTypeEnum(path, location string, value AppInstallWorkflowStepApprovalType) error {
	if err := validate.EnumCase(path, location, value, appInstallWorkflowStepApprovalTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app install workflow step approval type
func (m AppInstallWorkflowStepApprovalType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppInstallWorkflowStepApprovalTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app install workflow step approval type based on context it is used
func (m AppInstallWorkflowStepApprovalType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
