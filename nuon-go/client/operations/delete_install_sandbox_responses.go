// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteInstallSandboxReader is a Reader for the DeleteInstallSandbox structure.
type DeleteInstallSandboxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteInstallSandboxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteInstallSandboxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteInstallSandboxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteInstallSandboxUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteInstallSandboxForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteInstallSandboxNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteInstallSandboxInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/installs/{install_id}/sandbox] DeleteInstallSandbox", response, response.Code())
	}
}

// NewDeleteInstallSandboxOK creates a DeleteInstallSandboxOK with default headers values
func NewDeleteInstallSandboxOK() *DeleteInstallSandboxOK {
	return &DeleteInstallSandboxOK{}
}

/*
DeleteInstallSandboxOK describes a response with status code 200, with default header values.

OK
*/
type DeleteInstallSandboxOK struct {
	Payload bool
}

// IsSuccess returns true when this delete install sandbox o k response has a 2xx status code
func (o *DeleteInstallSandboxOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete install sandbox o k response has a 3xx status code
func (o *DeleteInstallSandboxOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install sandbox o k response has a 4xx status code
func (o *DeleteInstallSandboxOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete install sandbox o k response has a 5xx status code
func (o *DeleteInstallSandboxOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install sandbox o k response a status code equal to that given
func (o *DeleteInstallSandboxOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete install sandbox o k response
func (o *DeleteInstallSandboxOK) Code() int {
	return 200
}

func (o *DeleteInstallSandboxOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxOK %s", 200, payload)
}

func (o *DeleteInstallSandboxOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxOK %s", 200, payload)
}

func (o *DeleteInstallSandboxOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteInstallSandboxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallSandboxBadRequest creates a DeleteInstallSandboxBadRequest with default headers values
func NewDeleteInstallSandboxBadRequest() *DeleteInstallSandboxBadRequest {
	return &DeleteInstallSandboxBadRequest{}
}

/*
DeleteInstallSandboxBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteInstallSandboxBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install sandbox bad request response has a 2xx status code
func (o *DeleteInstallSandboxBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install sandbox bad request response has a 3xx status code
func (o *DeleteInstallSandboxBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install sandbox bad request response has a 4xx status code
func (o *DeleteInstallSandboxBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install sandbox bad request response has a 5xx status code
func (o *DeleteInstallSandboxBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install sandbox bad request response a status code equal to that given
func (o *DeleteInstallSandboxBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete install sandbox bad request response
func (o *DeleteInstallSandboxBadRequest) Code() int {
	return 400
}

func (o *DeleteInstallSandboxBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxBadRequest %s", 400, payload)
}

func (o *DeleteInstallSandboxBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxBadRequest %s", 400, payload)
}

func (o *DeleteInstallSandboxBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallSandboxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallSandboxUnauthorized creates a DeleteInstallSandboxUnauthorized with default headers values
func NewDeleteInstallSandboxUnauthorized() *DeleteInstallSandboxUnauthorized {
	return &DeleteInstallSandboxUnauthorized{}
}

/*
DeleteInstallSandboxUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteInstallSandboxUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install sandbox unauthorized response has a 2xx status code
func (o *DeleteInstallSandboxUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install sandbox unauthorized response has a 3xx status code
func (o *DeleteInstallSandboxUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install sandbox unauthorized response has a 4xx status code
func (o *DeleteInstallSandboxUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install sandbox unauthorized response has a 5xx status code
func (o *DeleteInstallSandboxUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install sandbox unauthorized response a status code equal to that given
func (o *DeleteInstallSandboxUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete install sandbox unauthorized response
func (o *DeleteInstallSandboxUnauthorized) Code() int {
	return 401
}

func (o *DeleteInstallSandboxUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxUnauthorized %s", 401, payload)
}

func (o *DeleteInstallSandboxUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxUnauthorized %s", 401, payload)
}

func (o *DeleteInstallSandboxUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallSandboxUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallSandboxForbidden creates a DeleteInstallSandboxForbidden with default headers values
func NewDeleteInstallSandboxForbidden() *DeleteInstallSandboxForbidden {
	return &DeleteInstallSandboxForbidden{}
}

/*
DeleteInstallSandboxForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteInstallSandboxForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install sandbox forbidden response has a 2xx status code
func (o *DeleteInstallSandboxForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install sandbox forbidden response has a 3xx status code
func (o *DeleteInstallSandboxForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install sandbox forbidden response has a 4xx status code
func (o *DeleteInstallSandboxForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install sandbox forbidden response has a 5xx status code
func (o *DeleteInstallSandboxForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install sandbox forbidden response a status code equal to that given
func (o *DeleteInstallSandboxForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete install sandbox forbidden response
func (o *DeleteInstallSandboxForbidden) Code() int {
	return 403
}

func (o *DeleteInstallSandboxForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxForbidden %s", 403, payload)
}

func (o *DeleteInstallSandboxForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxForbidden %s", 403, payload)
}

func (o *DeleteInstallSandboxForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallSandboxForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallSandboxNotFound creates a DeleteInstallSandboxNotFound with default headers values
func NewDeleteInstallSandboxNotFound() *DeleteInstallSandboxNotFound {
	return &DeleteInstallSandboxNotFound{}
}

/*
DeleteInstallSandboxNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteInstallSandboxNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install sandbox not found response has a 2xx status code
func (o *DeleteInstallSandboxNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install sandbox not found response has a 3xx status code
func (o *DeleteInstallSandboxNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install sandbox not found response has a 4xx status code
func (o *DeleteInstallSandboxNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install sandbox not found response has a 5xx status code
func (o *DeleteInstallSandboxNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install sandbox not found response a status code equal to that given
func (o *DeleteInstallSandboxNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete install sandbox not found response
func (o *DeleteInstallSandboxNotFound) Code() int {
	return 404
}

func (o *DeleteInstallSandboxNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxNotFound %s", 404, payload)
}

func (o *DeleteInstallSandboxNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxNotFound %s", 404, payload)
}

func (o *DeleteInstallSandboxNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallSandboxNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallSandboxInternalServerError creates a DeleteInstallSandboxInternalServerError with default headers values
func NewDeleteInstallSandboxInternalServerError() *DeleteInstallSandboxInternalServerError {
	return &DeleteInstallSandboxInternalServerError{}
}

/*
DeleteInstallSandboxInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteInstallSandboxInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install sandbox internal server error response has a 2xx status code
func (o *DeleteInstallSandboxInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install sandbox internal server error response has a 3xx status code
func (o *DeleteInstallSandboxInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install sandbox internal server error response has a 4xx status code
func (o *DeleteInstallSandboxInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete install sandbox internal server error response has a 5xx status code
func (o *DeleteInstallSandboxInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete install sandbox internal server error response a status code equal to that given
func (o *DeleteInstallSandboxInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete install sandbox internal server error response
func (o *DeleteInstallSandboxInternalServerError) Code() int {
	return 500
}

func (o *DeleteInstallSandboxInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxInternalServerError %s", 500, payload)
}

func (o *DeleteInstallSandboxInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/sandbox][%d] deleteInstallSandboxInternalServerError %s", 500, payload)
}

func (o *DeleteInstallSandboxInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallSandboxInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
