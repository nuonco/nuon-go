// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PostV1VcsConnectionCallbackReader is a Reader for the PostV1VcsConnectionCallback structure.
type PostV1VcsConnectionCallbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1VcsConnectionCallbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1VcsConnectionCallbackCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1VcsConnectionCallbackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1VcsConnectionCallbackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostV1VcsConnectionCallbackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostV1VcsConnectionCallbackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1VcsConnectionCallbackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/vcs/connection-callback] PostV1VcsConnectionCallback", response, response.Code())
	}
}

// NewPostV1VcsConnectionCallbackCreated creates a PostV1VcsConnectionCallbackCreated with default headers values
func NewPostV1VcsConnectionCallbackCreated() *PostV1VcsConnectionCallbackCreated {
	return &PostV1VcsConnectionCallbackCreated{}
}

/*
PostV1VcsConnectionCallbackCreated describes a response with status code 201, with default header values.

Created
*/
type PostV1VcsConnectionCallbackCreated struct {
	Payload *models.AppVCSConnection
}

// IsSuccess returns true when this post v1 vcs connection callback created response has a 2xx status code
func (o *PostV1VcsConnectionCallbackCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 vcs connection callback created response has a 3xx status code
func (o *PostV1VcsConnectionCallbackCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 vcs connection callback created response has a 4xx status code
func (o *PostV1VcsConnectionCallbackCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 vcs connection callback created response has a 5xx status code
func (o *PostV1VcsConnectionCallbackCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 vcs connection callback created response a status code equal to that given
func (o *PostV1VcsConnectionCallbackCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 vcs connection callback created response
func (o *PostV1VcsConnectionCallbackCreated) Code() int {
	return 201
}

func (o *PostV1VcsConnectionCallbackCreated) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackCreated  %+v", 201, o.Payload)
}

func (o *PostV1VcsConnectionCallbackCreated) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackCreated  %+v", 201, o.Payload)
}

func (o *PostV1VcsConnectionCallbackCreated) GetPayload() *models.AppVCSConnection {
	return o.Payload
}

func (o *PostV1VcsConnectionCallbackCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppVCSConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VcsConnectionCallbackBadRequest creates a PostV1VcsConnectionCallbackBadRequest with default headers values
func NewPostV1VcsConnectionCallbackBadRequest() *PostV1VcsConnectionCallbackBadRequest {
	return &PostV1VcsConnectionCallbackBadRequest{}
}

/*
PostV1VcsConnectionCallbackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1VcsConnectionCallbackBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 vcs connection callback bad request response has a 2xx status code
func (o *PostV1VcsConnectionCallbackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 vcs connection callback bad request response has a 3xx status code
func (o *PostV1VcsConnectionCallbackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 vcs connection callback bad request response has a 4xx status code
func (o *PostV1VcsConnectionCallbackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 vcs connection callback bad request response has a 5xx status code
func (o *PostV1VcsConnectionCallbackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 vcs connection callback bad request response a status code equal to that given
func (o *PostV1VcsConnectionCallbackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 vcs connection callback bad request response
func (o *PostV1VcsConnectionCallbackBadRequest) Code() int {
	return 400
}

func (o *PostV1VcsConnectionCallbackBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1VcsConnectionCallbackBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1VcsConnectionCallbackBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1VcsConnectionCallbackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VcsConnectionCallbackUnauthorized creates a PostV1VcsConnectionCallbackUnauthorized with default headers values
func NewPostV1VcsConnectionCallbackUnauthorized() *PostV1VcsConnectionCallbackUnauthorized {
	return &PostV1VcsConnectionCallbackUnauthorized{}
}

/*
PostV1VcsConnectionCallbackUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1VcsConnectionCallbackUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 vcs connection callback unauthorized response has a 2xx status code
func (o *PostV1VcsConnectionCallbackUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 vcs connection callback unauthorized response has a 3xx status code
func (o *PostV1VcsConnectionCallbackUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 vcs connection callback unauthorized response has a 4xx status code
func (o *PostV1VcsConnectionCallbackUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 vcs connection callback unauthorized response has a 5xx status code
func (o *PostV1VcsConnectionCallbackUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 vcs connection callback unauthorized response a status code equal to that given
func (o *PostV1VcsConnectionCallbackUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 vcs connection callback unauthorized response
func (o *PostV1VcsConnectionCallbackUnauthorized) Code() int {
	return 401
}

func (o *PostV1VcsConnectionCallbackUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1VcsConnectionCallbackUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1VcsConnectionCallbackUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1VcsConnectionCallbackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VcsConnectionCallbackForbidden creates a PostV1VcsConnectionCallbackForbidden with default headers values
func NewPostV1VcsConnectionCallbackForbidden() *PostV1VcsConnectionCallbackForbidden {
	return &PostV1VcsConnectionCallbackForbidden{}
}

/*
PostV1VcsConnectionCallbackForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostV1VcsConnectionCallbackForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 vcs connection callback forbidden response has a 2xx status code
func (o *PostV1VcsConnectionCallbackForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 vcs connection callback forbidden response has a 3xx status code
func (o *PostV1VcsConnectionCallbackForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 vcs connection callback forbidden response has a 4xx status code
func (o *PostV1VcsConnectionCallbackForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 vcs connection callback forbidden response has a 5xx status code
func (o *PostV1VcsConnectionCallbackForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 vcs connection callback forbidden response a status code equal to that given
func (o *PostV1VcsConnectionCallbackForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post v1 vcs connection callback forbidden response
func (o *PostV1VcsConnectionCallbackForbidden) Code() int {
	return 403
}

func (o *PostV1VcsConnectionCallbackForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackForbidden  %+v", 403, o.Payload)
}

func (o *PostV1VcsConnectionCallbackForbidden) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackForbidden  %+v", 403, o.Payload)
}

func (o *PostV1VcsConnectionCallbackForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1VcsConnectionCallbackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VcsConnectionCallbackNotFound creates a PostV1VcsConnectionCallbackNotFound with default headers values
func NewPostV1VcsConnectionCallbackNotFound() *PostV1VcsConnectionCallbackNotFound {
	return &PostV1VcsConnectionCallbackNotFound{}
}

/*
PostV1VcsConnectionCallbackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostV1VcsConnectionCallbackNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 vcs connection callback not found response has a 2xx status code
func (o *PostV1VcsConnectionCallbackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 vcs connection callback not found response has a 3xx status code
func (o *PostV1VcsConnectionCallbackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 vcs connection callback not found response has a 4xx status code
func (o *PostV1VcsConnectionCallbackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 vcs connection callback not found response has a 5xx status code
func (o *PostV1VcsConnectionCallbackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 vcs connection callback not found response a status code equal to that given
func (o *PostV1VcsConnectionCallbackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 vcs connection callback not found response
func (o *PostV1VcsConnectionCallbackNotFound) Code() int {
	return 404
}

func (o *PostV1VcsConnectionCallbackNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackNotFound  %+v", 404, o.Payload)
}

func (o *PostV1VcsConnectionCallbackNotFound) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackNotFound  %+v", 404, o.Payload)
}

func (o *PostV1VcsConnectionCallbackNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1VcsConnectionCallbackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1VcsConnectionCallbackInternalServerError creates a PostV1VcsConnectionCallbackInternalServerError with default headers values
func NewPostV1VcsConnectionCallbackInternalServerError() *PostV1VcsConnectionCallbackInternalServerError {
	return &PostV1VcsConnectionCallbackInternalServerError{}
}

/*
PostV1VcsConnectionCallbackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1VcsConnectionCallbackInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 vcs connection callback internal server error response has a 2xx status code
func (o *PostV1VcsConnectionCallbackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 vcs connection callback internal server error response has a 3xx status code
func (o *PostV1VcsConnectionCallbackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 vcs connection callback internal server error response has a 4xx status code
func (o *PostV1VcsConnectionCallbackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 vcs connection callback internal server error response has a 5xx status code
func (o *PostV1VcsConnectionCallbackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 vcs connection callback internal server error response a status code equal to that given
func (o *PostV1VcsConnectionCallbackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 vcs connection callback internal server error response
func (o *PostV1VcsConnectionCallbackInternalServerError) Code() int {
	return 500
}

func (o *PostV1VcsConnectionCallbackInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1VcsConnectionCallbackInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connection-callback][%d] postV1VcsConnectionCallbackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1VcsConnectionCallbackInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1VcsConnectionCallbackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
