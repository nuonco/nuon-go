// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetRunnerJobExecutionReader is a Reader for the GetRunnerJobExecution structure.
type GetRunnerJobExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerJobExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerJobExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerJobExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerJobExecutionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerJobExecutionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerJobExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerJobExecutionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}] GetRunnerJobExecution", response, response.Code())
	}
}

// NewGetRunnerJobExecutionOK creates a GetRunnerJobExecutionOK with default headers values
func NewGetRunnerJobExecutionOK() *GetRunnerJobExecutionOK {
	return &GetRunnerJobExecutionOK{}
}

/*
GetRunnerJobExecutionOK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerJobExecutionOK struct {
	Payload *models.AppRunnerJobExecution
}

// IsSuccess returns true when this get runner job execution o k response has a 2xx status code
func (o *GetRunnerJobExecutionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner job execution o k response has a 3xx status code
func (o *GetRunnerJobExecutionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job execution o k response has a 4xx status code
func (o *GetRunnerJobExecutionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner job execution o k response has a 5xx status code
func (o *GetRunnerJobExecutionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job execution o k response a status code equal to that given
func (o *GetRunnerJobExecutionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner job execution o k response
func (o *GetRunnerJobExecutionOK) Code() int {
	return 200
}

func (o *GetRunnerJobExecutionOK) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionOK  %+v", 200, o.Payload)
}

func (o *GetRunnerJobExecutionOK) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionOK  %+v", 200, o.Payload)
}

func (o *GetRunnerJobExecutionOK) GetPayload() *models.AppRunnerJobExecution {
	return o.Payload
}

func (o *GetRunnerJobExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppRunnerJobExecution)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobExecutionBadRequest creates a GetRunnerJobExecutionBadRequest with default headers values
func NewGetRunnerJobExecutionBadRequest() *GetRunnerJobExecutionBadRequest {
	return &GetRunnerJobExecutionBadRequest{}
}

/*
GetRunnerJobExecutionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerJobExecutionBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job execution bad request response has a 2xx status code
func (o *GetRunnerJobExecutionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job execution bad request response has a 3xx status code
func (o *GetRunnerJobExecutionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job execution bad request response has a 4xx status code
func (o *GetRunnerJobExecutionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job execution bad request response has a 5xx status code
func (o *GetRunnerJobExecutionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job execution bad request response a status code equal to that given
func (o *GetRunnerJobExecutionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner job execution bad request response
func (o *GetRunnerJobExecutionBadRequest) Code() int {
	return 400
}

func (o *GetRunnerJobExecutionBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerJobExecutionBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerJobExecutionBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobExecutionUnauthorized creates a GetRunnerJobExecutionUnauthorized with default headers values
func NewGetRunnerJobExecutionUnauthorized() *GetRunnerJobExecutionUnauthorized {
	return &GetRunnerJobExecutionUnauthorized{}
}

/*
GetRunnerJobExecutionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerJobExecutionUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job execution unauthorized response has a 2xx status code
func (o *GetRunnerJobExecutionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job execution unauthorized response has a 3xx status code
func (o *GetRunnerJobExecutionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job execution unauthorized response has a 4xx status code
func (o *GetRunnerJobExecutionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job execution unauthorized response has a 5xx status code
func (o *GetRunnerJobExecutionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job execution unauthorized response a status code equal to that given
func (o *GetRunnerJobExecutionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner job execution unauthorized response
func (o *GetRunnerJobExecutionUnauthorized) Code() int {
	return 401
}

func (o *GetRunnerJobExecutionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerJobExecutionUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerJobExecutionUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobExecutionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobExecutionForbidden creates a GetRunnerJobExecutionForbidden with default headers values
func NewGetRunnerJobExecutionForbidden() *GetRunnerJobExecutionForbidden {
	return &GetRunnerJobExecutionForbidden{}
}

/*
GetRunnerJobExecutionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerJobExecutionForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job execution forbidden response has a 2xx status code
func (o *GetRunnerJobExecutionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job execution forbidden response has a 3xx status code
func (o *GetRunnerJobExecutionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job execution forbidden response has a 4xx status code
func (o *GetRunnerJobExecutionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job execution forbidden response has a 5xx status code
func (o *GetRunnerJobExecutionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job execution forbidden response a status code equal to that given
func (o *GetRunnerJobExecutionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner job execution forbidden response
func (o *GetRunnerJobExecutionForbidden) Code() int {
	return 403
}

func (o *GetRunnerJobExecutionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerJobExecutionForbidden) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerJobExecutionForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobExecutionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobExecutionNotFound creates a GetRunnerJobExecutionNotFound with default headers values
func NewGetRunnerJobExecutionNotFound() *GetRunnerJobExecutionNotFound {
	return &GetRunnerJobExecutionNotFound{}
}

/*
GetRunnerJobExecutionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerJobExecutionNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job execution not found response has a 2xx status code
func (o *GetRunnerJobExecutionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job execution not found response has a 3xx status code
func (o *GetRunnerJobExecutionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job execution not found response has a 4xx status code
func (o *GetRunnerJobExecutionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job execution not found response has a 5xx status code
func (o *GetRunnerJobExecutionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job execution not found response a status code equal to that given
func (o *GetRunnerJobExecutionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner job execution not found response
func (o *GetRunnerJobExecutionNotFound) Code() int {
	return 404
}

func (o *GetRunnerJobExecutionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerJobExecutionNotFound) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerJobExecutionNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobExecutionInternalServerError creates a GetRunnerJobExecutionInternalServerError with default headers values
func NewGetRunnerJobExecutionInternalServerError() *GetRunnerJobExecutionInternalServerError {
	return &GetRunnerJobExecutionInternalServerError{}
}

/*
GetRunnerJobExecutionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerJobExecutionInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job execution internal server error response has a 2xx status code
func (o *GetRunnerJobExecutionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job execution internal server error response has a 3xx status code
func (o *GetRunnerJobExecutionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job execution internal server error response has a 4xx status code
func (o *GetRunnerJobExecutionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner job execution internal server error response has a 5xx status code
func (o *GetRunnerJobExecutionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner job execution internal server error response a status code equal to that given
func (o *GetRunnerJobExecutionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner job execution internal server error response
func (o *GetRunnerJobExecutionInternalServerError) Code() int {
	return 500
}

func (o *GetRunnerJobExecutionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerJobExecutionInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/executions/{runner_job_execution_id}][%d] getRunnerJobExecutionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerJobExecutionInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobExecutionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
