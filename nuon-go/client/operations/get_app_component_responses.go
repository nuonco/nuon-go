// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppComponentReader is a Reader for the GetAppComponent structure.
type GetAppComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppComponentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppComponentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppComponentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppComponentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppComponentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/component/{component_name_or_id}] GetAppComponent", response, response.Code())
	}
}

// NewGetAppComponentOK creates a GetAppComponentOK with default headers values
func NewGetAppComponentOK() *GetAppComponentOK {
	return &GetAppComponentOK{}
}

/*
GetAppComponentOK describes a response with status code 200, with default header values.

OK
*/
type GetAppComponentOK struct {
	Payload *models.AppComponent
}

// IsSuccess returns true when this get app component o k response has a 2xx status code
func (o *GetAppComponentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app component o k response has a 3xx status code
func (o *GetAppComponentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app component o k response has a 4xx status code
func (o *GetAppComponentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app component o k response has a 5xx status code
func (o *GetAppComponentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app component o k response a status code equal to that given
func (o *GetAppComponentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app component o k response
func (o *GetAppComponentOK) Code() int {
	return 200
}

func (o *GetAppComponentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentOK %s", 200, payload)
}

func (o *GetAppComponentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentOK %s", 200, payload)
}

func (o *GetAppComponentOK) GetPayload() *models.AppComponent {
	return o.Payload
}

func (o *GetAppComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppComponent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppComponentBadRequest creates a GetAppComponentBadRequest with default headers values
func NewGetAppComponentBadRequest() *GetAppComponentBadRequest {
	return &GetAppComponentBadRequest{}
}

/*
GetAppComponentBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppComponentBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app component bad request response has a 2xx status code
func (o *GetAppComponentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app component bad request response has a 3xx status code
func (o *GetAppComponentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app component bad request response has a 4xx status code
func (o *GetAppComponentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app component bad request response has a 5xx status code
func (o *GetAppComponentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app component bad request response a status code equal to that given
func (o *GetAppComponentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app component bad request response
func (o *GetAppComponentBadRequest) Code() int {
	return 400
}

func (o *GetAppComponentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentBadRequest %s", 400, payload)
}

func (o *GetAppComponentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentBadRequest %s", 400, payload)
}

func (o *GetAppComponentBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppComponentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppComponentUnauthorized creates a GetAppComponentUnauthorized with default headers values
func NewGetAppComponentUnauthorized() *GetAppComponentUnauthorized {
	return &GetAppComponentUnauthorized{}
}

/*
GetAppComponentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppComponentUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app component unauthorized response has a 2xx status code
func (o *GetAppComponentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app component unauthorized response has a 3xx status code
func (o *GetAppComponentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app component unauthorized response has a 4xx status code
func (o *GetAppComponentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app component unauthorized response has a 5xx status code
func (o *GetAppComponentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app component unauthorized response a status code equal to that given
func (o *GetAppComponentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app component unauthorized response
func (o *GetAppComponentUnauthorized) Code() int {
	return 401
}

func (o *GetAppComponentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentUnauthorized %s", 401, payload)
}

func (o *GetAppComponentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentUnauthorized %s", 401, payload)
}

func (o *GetAppComponentUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppComponentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppComponentForbidden creates a GetAppComponentForbidden with default headers values
func NewGetAppComponentForbidden() *GetAppComponentForbidden {
	return &GetAppComponentForbidden{}
}

/*
GetAppComponentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppComponentForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app component forbidden response has a 2xx status code
func (o *GetAppComponentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app component forbidden response has a 3xx status code
func (o *GetAppComponentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app component forbidden response has a 4xx status code
func (o *GetAppComponentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app component forbidden response has a 5xx status code
func (o *GetAppComponentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app component forbidden response a status code equal to that given
func (o *GetAppComponentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app component forbidden response
func (o *GetAppComponentForbidden) Code() int {
	return 403
}

func (o *GetAppComponentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentForbidden %s", 403, payload)
}

func (o *GetAppComponentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentForbidden %s", 403, payload)
}

func (o *GetAppComponentForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppComponentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppComponentNotFound creates a GetAppComponentNotFound with default headers values
func NewGetAppComponentNotFound() *GetAppComponentNotFound {
	return &GetAppComponentNotFound{}
}

/*
GetAppComponentNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppComponentNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app component not found response has a 2xx status code
func (o *GetAppComponentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app component not found response has a 3xx status code
func (o *GetAppComponentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app component not found response has a 4xx status code
func (o *GetAppComponentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app component not found response has a 5xx status code
func (o *GetAppComponentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app component not found response a status code equal to that given
func (o *GetAppComponentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app component not found response
func (o *GetAppComponentNotFound) Code() int {
	return 404
}

func (o *GetAppComponentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentNotFound %s", 404, payload)
}

func (o *GetAppComponentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentNotFound %s", 404, payload)
}

func (o *GetAppComponentNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppComponentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppComponentInternalServerError creates a GetAppComponentInternalServerError with default headers values
func NewGetAppComponentInternalServerError() *GetAppComponentInternalServerError {
	return &GetAppComponentInternalServerError{}
}

/*
GetAppComponentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppComponentInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app component internal server error response has a 2xx status code
func (o *GetAppComponentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app component internal server error response has a 3xx status code
func (o *GetAppComponentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app component internal server error response has a 4xx status code
func (o *GetAppComponentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app component internal server error response has a 5xx status code
func (o *GetAppComponentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app component internal server error response a status code equal to that given
func (o *GetAppComponentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app component internal server error response
func (o *GetAppComponentInternalServerError) Code() int {
	return 500
}

func (o *GetAppComponentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentInternalServerError %s", 500, payload)
}

func (o *GetAppComponentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/component/{component_name_or_id}][%d] getAppComponentInternalServerError %s", 500, payload)
}

func (o *GetAppComponentInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppComponentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
