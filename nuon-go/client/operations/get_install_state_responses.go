// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallStateReader is a Reader for the GetInstallState structure.
type GetInstallStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/state] GetInstallState", response, response.Code())
	}
}

// NewGetInstallStateOK creates a GetInstallStateOK with default headers values
func NewGetInstallStateOK() *GetInstallStateOK {
	return &GetInstallStateOK{}
}

/*
GetInstallStateOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallStateOK struct {
	Payload *models.StateInstallState
}

// IsSuccess returns true when this get install state o k response has a 2xx status code
func (o *GetInstallStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install state o k response has a 3xx status code
func (o *GetInstallStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install state o k response has a 4xx status code
func (o *GetInstallStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install state o k response has a 5xx status code
func (o *GetInstallStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install state o k response a status code equal to that given
func (o *GetInstallStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install state o k response
func (o *GetInstallStateOK) Code() int {
	return 200
}

func (o *GetInstallStateOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateOK  %+v", 200, o.Payload)
}

func (o *GetInstallStateOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateOK  %+v", 200, o.Payload)
}

func (o *GetInstallStateOK) GetPayload() *models.StateInstallState {
	return o.Payload
}

func (o *GetInstallStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StateInstallState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStateBadRequest creates a GetInstallStateBadRequest with default headers values
func NewGetInstallStateBadRequest() *GetInstallStateBadRequest {
	return &GetInstallStateBadRequest{}
}

/*
GetInstallStateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallStateBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install state bad request response has a 2xx status code
func (o *GetInstallStateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install state bad request response has a 3xx status code
func (o *GetInstallStateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install state bad request response has a 4xx status code
func (o *GetInstallStateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install state bad request response has a 5xx status code
func (o *GetInstallStateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install state bad request response a status code equal to that given
func (o *GetInstallStateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install state bad request response
func (o *GetInstallStateBadRequest) Code() int {
	return 400
}

func (o *GetInstallStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallStateBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallStateBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStateUnauthorized creates a GetInstallStateUnauthorized with default headers values
func NewGetInstallStateUnauthorized() *GetInstallStateUnauthorized {
	return &GetInstallStateUnauthorized{}
}

/*
GetInstallStateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallStateUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install state unauthorized response has a 2xx status code
func (o *GetInstallStateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install state unauthorized response has a 3xx status code
func (o *GetInstallStateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install state unauthorized response has a 4xx status code
func (o *GetInstallStateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install state unauthorized response has a 5xx status code
func (o *GetInstallStateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install state unauthorized response a status code equal to that given
func (o *GetInstallStateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install state unauthorized response
func (o *GetInstallStateUnauthorized) Code() int {
	return 401
}

func (o *GetInstallStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallStateUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallStateUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStateForbidden creates a GetInstallStateForbidden with default headers values
func NewGetInstallStateForbidden() *GetInstallStateForbidden {
	return &GetInstallStateForbidden{}
}

/*
GetInstallStateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallStateForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install state forbidden response has a 2xx status code
func (o *GetInstallStateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install state forbidden response has a 3xx status code
func (o *GetInstallStateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install state forbidden response has a 4xx status code
func (o *GetInstallStateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install state forbidden response has a 5xx status code
func (o *GetInstallStateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install state forbidden response a status code equal to that given
func (o *GetInstallStateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install state forbidden response
func (o *GetInstallStateForbidden) Code() int {
	return 403
}

func (o *GetInstallStateForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallStateForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallStateForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStateNotFound creates a GetInstallStateNotFound with default headers values
func NewGetInstallStateNotFound() *GetInstallStateNotFound {
	return &GetInstallStateNotFound{}
}

/*
GetInstallStateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallStateNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install state not found response has a 2xx status code
func (o *GetInstallStateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install state not found response has a 3xx status code
func (o *GetInstallStateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install state not found response has a 4xx status code
func (o *GetInstallStateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install state not found response has a 5xx status code
func (o *GetInstallStateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install state not found response a status code equal to that given
func (o *GetInstallStateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install state not found response
func (o *GetInstallStateNotFound) Code() int {
	return 404
}

func (o *GetInstallStateNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallStateNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallStateNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStateInternalServerError creates a GetInstallStateInternalServerError with default headers values
func NewGetInstallStateInternalServerError() *GetInstallStateInternalServerError {
	return &GetInstallStateInternalServerError{}
}

/*
GetInstallStateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallStateInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install state internal server error response has a 2xx status code
func (o *GetInstallStateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install state internal server error response has a 3xx status code
func (o *GetInstallStateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install state internal server error response has a 4xx status code
func (o *GetInstallStateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install state internal server error response has a 5xx status code
func (o *GetInstallStateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install state internal server error response a status code equal to that given
func (o *GetInstallStateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install state internal server error response
func (o *GetInstallStateInternalServerError) Code() int {
	return 500
}

func (o *GetInstallStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallStateInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/state][%d] getInstallStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallStateInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
