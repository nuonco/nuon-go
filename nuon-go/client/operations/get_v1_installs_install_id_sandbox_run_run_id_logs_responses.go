// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallsInstallIDSandboxRunRunIDLogsReader is a Reader for the GetV1InstallsInstallIDSandboxRunRunIDLogs structure.
type GetV1InstallsInstallIDSandboxRunRunIDLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallsInstallIDSandboxRunRunIDLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallsInstallIDSandboxRunRunIDLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallsInstallIDSandboxRunRunIDLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs] GetV1InstallsInstallIDSandboxRunRunIDLogs", response, response.Code())
	}
}

// NewGetV1InstallsInstallIDSandboxRunRunIDLogsOK creates a GetV1InstallsInstallIDSandboxRunRunIDLogsOK with default headers values
func NewGetV1InstallsInstallIDSandboxRunRunIDLogsOK() *GetV1InstallsInstallIDSandboxRunRunIDLogsOK {
	return &GetV1InstallsInstallIDSandboxRunRunIDLogsOK{}
}

/*
GetV1InstallsInstallIDSandboxRunRunIDLogsOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallsInstallIDSandboxRunRunIDLogsOK struct {
	Payload []interface{}
}

// IsSuccess returns true when this get v1 installs install Id sandbox run run Id logs o k response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installs install Id sandbox run run Id logs o k response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox run run Id logs o k response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id sandbox run run Id logs o k response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox run run Id logs o k response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installs install Id sandbox run run Id logs o k response
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) Code() int {
	return 200
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) GetPayload() []interface{} {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest creates a GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest with default headers values
func NewGetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest() *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest {
	return &GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest{}
}

/*
GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox run run Id logs bad request response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox run run Id logs bad request response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox run run Id logs bad request response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox run run Id logs bad request response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox run run Id logs bad request response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installs install Id sandbox run run Id logs bad request response
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized creates a GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized with default headers values
func NewGetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized() *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized {
	return &GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized{}
}

/*
GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox run run Id logs unauthorized response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox run run Id logs unauthorized response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox run run Id logs unauthorized response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox run run Id logs unauthorized response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox run run Id logs unauthorized response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installs install Id sandbox run run Id logs unauthorized response
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunRunIDLogsForbidden creates a GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden with default headers values
func NewGetV1InstallsInstallIDSandboxRunRunIDLogsForbidden() *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden {
	return &GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden{}
}

/*
GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox run run Id logs forbidden response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox run run Id logs forbidden response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox run run Id logs forbidden response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox run run Id logs forbidden response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox run run Id logs forbidden response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installs install Id sandbox run run Id logs forbidden response
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) Code() int {
	return 403
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunRunIDLogsNotFound creates a GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound with default headers values
func NewGetV1InstallsInstallIDSandboxRunRunIDLogsNotFound() *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound {
	return &GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound{}
}

/*
GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox run run Id logs not found response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox run run Id logs not found response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox run run Id logs not found response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox run run Id logs not found response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox run run Id logs not found response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installs install Id sandbox run run Id logs not found response
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) Code() int {
	return 404
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError creates a GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError with default headers values
func NewGetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError() *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError {
	return &GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError{}
}

/*
GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox run run Id logs internal server error response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox run run Id logs internal server error response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox run run Id logs internal server error response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id sandbox run run Id logs internal server error response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installs install Id sandbox run run Id logs internal server error response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installs install Id sandbox run run Id logs internal server error response
func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getV1InstallsInstallIdSandboxRunRunIdLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunRunIDLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
