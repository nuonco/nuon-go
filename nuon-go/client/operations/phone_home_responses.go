// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PhoneHomeReader is a Reader for the PhoneHome structure.
type PhoneHomeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PhoneHomeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPhoneHomeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPhoneHomeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPhoneHomeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPhoneHomeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPhoneHomeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPhoneHomeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}] PhoneHome", response, response.Code())
	}
}

// NewPhoneHomeCreated creates a PhoneHomeCreated with default headers values
func NewPhoneHomeCreated() *PhoneHomeCreated {
	return &PhoneHomeCreated{}
}

/*
PhoneHomeCreated describes a response with status code 201, with default header values.

Created
*/
type PhoneHomeCreated struct {
	Payload string
}

// IsSuccess returns true when this phone home created response has a 2xx status code
func (o *PhoneHomeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this phone home created response has a 3xx status code
func (o *PhoneHomeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this phone home created response has a 4xx status code
func (o *PhoneHomeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this phone home created response has a 5xx status code
func (o *PhoneHomeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this phone home created response a status code equal to that given
func (o *PhoneHomeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the phone home created response
func (o *PhoneHomeCreated) Code() int {
	return 201
}

func (o *PhoneHomeCreated) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeCreated  %+v", 201, o.Payload)
}

func (o *PhoneHomeCreated) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeCreated  %+v", 201, o.Payload)
}

func (o *PhoneHomeCreated) GetPayload() string {
	return o.Payload
}

func (o *PhoneHomeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPhoneHomeBadRequest creates a PhoneHomeBadRequest with default headers values
func NewPhoneHomeBadRequest() *PhoneHomeBadRequest {
	return &PhoneHomeBadRequest{}
}

/*
PhoneHomeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PhoneHomeBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this phone home bad request response has a 2xx status code
func (o *PhoneHomeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this phone home bad request response has a 3xx status code
func (o *PhoneHomeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this phone home bad request response has a 4xx status code
func (o *PhoneHomeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this phone home bad request response has a 5xx status code
func (o *PhoneHomeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this phone home bad request response a status code equal to that given
func (o *PhoneHomeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the phone home bad request response
func (o *PhoneHomeBadRequest) Code() int {
	return 400
}

func (o *PhoneHomeBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeBadRequest  %+v", 400, o.Payload)
}

func (o *PhoneHomeBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeBadRequest  %+v", 400, o.Payload)
}

func (o *PhoneHomeBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PhoneHomeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPhoneHomeUnauthorized creates a PhoneHomeUnauthorized with default headers values
func NewPhoneHomeUnauthorized() *PhoneHomeUnauthorized {
	return &PhoneHomeUnauthorized{}
}

/*
PhoneHomeUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PhoneHomeUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this phone home unauthorized response has a 2xx status code
func (o *PhoneHomeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this phone home unauthorized response has a 3xx status code
func (o *PhoneHomeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this phone home unauthorized response has a 4xx status code
func (o *PhoneHomeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this phone home unauthorized response has a 5xx status code
func (o *PhoneHomeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this phone home unauthorized response a status code equal to that given
func (o *PhoneHomeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the phone home unauthorized response
func (o *PhoneHomeUnauthorized) Code() int {
	return 401
}

func (o *PhoneHomeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeUnauthorized  %+v", 401, o.Payload)
}

func (o *PhoneHomeUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeUnauthorized  %+v", 401, o.Payload)
}

func (o *PhoneHomeUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PhoneHomeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPhoneHomeForbidden creates a PhoneHomeForbidden with default headers values
func NewPhoneHomeForbidden() *PhoneHomeForbidden {
	return &PhoneHomeForbidden{}
}

/*
PhoneHomeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PhoneHomeForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this phone home forbidden response has a 2xx status code
func (o *PhoneHomeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this phone home forbidden response has a 3xx status code
func (o *PhoneHomeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this phone home forbidden response has a 4xx status code
func (o *PhoneHomeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this phone home forbidden response has a 5xx status code
func (o *PhoneHomeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this phone home forbidden response a status code equal to that given
func (o *PhoneHomeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the phone home forbidden response
func (o *PhoneHomeForbidden) Code() int {
	return 403
}

func (o *PhoneHomeForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeForbidden  %+v", 403, o.Payload)
}

func (o *PhoneHomeForbidden) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeForbidden  %+v", 403, o.Payload)
}

func (o *PhoneHomeForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PhoneHomeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPhoneHomeNotFound creates a PhoneHomeNotFound with default headers values
func NewPhoneHomeNotFound() *PhoneHomeNotFound {
	return &PhoneHomeNotFound{}
}

/*
PhoneHomeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PhoneHomeNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this phone home not found response has a 2xx status code
func (o *PhoneHomeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this phone home not found response has a 3xx status code
func (o *PhoneHomeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this phone home not found response has a 4xx status code
func (o *PhoneHomeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this phone home not found response has a 5xx status code
func (o *PhoneHomeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this phone home not found response a status code equal to that given
func (o *PhoneHomeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the phone home not found response
func (o *PhoneHomeNotFound) Code() int {
	return 404
}

func (o *PhoneHomeNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeNotFound  %+v", 404, o.Payload)
}

func (o *PhoneHomeNotFound) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeNotFound  %+v", 404, o.Payload)
}

func (o *PhoneHomeNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PhoneHomeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPhoneHomeInternalServerError creates a PhoneHomeInternalServerError with default headers values
func NewPhoneHomeInternalServerError() *PhoneHomeInternalServerError {
	return &PhoneHomeInternalServerError{}
}

/*
PhoneHomeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PhoneHomeInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this phone home internal server error response has a 2xx status code
func (o *PhoneHomeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this phone home internal server error response has a 3xx status code
func (o *PhoneHomeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this phone home internal server error response has a 4xx status code
func (o *PhoneHomeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this phone home internal server error response has a 5xx status code
func (o *PhoneHomeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this phone home internal server error response a status code equal to that given
func (o *PhoneHomeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the phone home internal server error response
func (o *PhoneHomeInternalServerError) Code() int {
	return 500
}

func (o *PhoneHomeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeInternalServerError  %+v", 500, o.Payload)
}

func (o *PhoneHomeInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/phone-home/{phone_home_id}][%d] phoneHomeInternalServerError  %+v", 500, o.Payload)
}

func (o *PhoneHomeInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PhoneHomeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
