// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateVCSConnectionBranchReader is a Reader for the CreateVCSConnectionBranch structure.
type CreateVCSConnectionBranchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVCSConnectionBranchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateVCSConnectionBranchCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateVCSConnectionBranchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateVCSConnectionBranchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateVCSConnectionBranchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateVCSConnectionBranchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateVCSConnectionBranchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/vcs/connections/{connection_id}/branches] CreateVCSConnectionBranch", response, response.Code())
	}
}

// NewCreateVCSConnectionBranchCreated creates a CreateVCSConnectionBranchCreated with default headers values
func NewCreateVCSConnectionBranchCreated() *CreateVCSConnectionBranchCreated {
	return &CreateVCSConnectionBranchCreated{}
}

/*
CreateVCSConnectionBranchCreated describes a response with status code 201, with default header values.

Created
*/
type CreateVCSConnectionBranchCreated struct {
	Payload *models.AppVCSConnectionBranch
}

// IsSuccess returns true when this create v c s connection branch created response has a 2xx status code
func (o *CreateVCSConnectionBranchCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create v c s connection branch created response has a 3xx status code
func (o *CreateVCSConnectionBranchCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v c s connection branch created response has a 4xx status code
func (o *CreateVCSConnectionBranchCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create v c s connection branch created response has a 5xx status code
func (o *CreateVCSConnectionBranchCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create v c s connection branch created response a status code equal to that given
func (o *CreateVCSConnectionBranchCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create v c s connection branch created response
func (o *CreateVCSConnectionBranchCreated) Code() int {
	return 201
}

func (o *CreateVCSConnectionBranchCreated) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchCreated  %+v", 201, o.Payload)
}

func (o *CreateVCSConnectionBranchCreated) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchCreated  %+v", 201, o.Payload)
}

func (o *CreateVCSConnectionBranchCreated) GetPayload() *models.AppVCSConnectionBranch {
	return o.Payload
}

func (o *CreateVCSConnectionBranchCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppVCSConnectionBranch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVCSConnectionBranchBadRequest creates a CreateVCSConnectionBranchBadRequest with default headers values
func NewCreateVCSConnectionBranchBadRequest() *CreateVCSConnectionBranchBadRequest {
	return &CreateVCSConnectionBranchBadRequest{}
}

/*
CreateVCSConnectionBranchBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateVCSConnectionBranchBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create v c s connection branch bad request response has a 2xx status code
func (o *CreateVCSConnectionBranchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v c s connection branch bad request response has a 3xx status code
func (o *CreateVCSConnectionBranchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v c s connection branch bad request response has a 4xx status code
func (o *CreateVCSConnectionBranchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v c s connection branch bad request response has a 5xx status code
func (o *CreateVCSConnectionBranchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create v c s connection branch bad request response a status code equal to that given
func (o *CreateVCSConnectionBranchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create v c s connection branch bad request response
func (o *CreateVCSConnectionBranchBadRequest) Code() int {
	return 400
}

func (o *CreateVCSConnectionBranchBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchBadRequest  %+v", 400, o.Payload)
}

func (o *CreateVCSConnectionBranchBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchBadRequest  %+v", 400, o.Payload)
}

func (o *CreateVCSConnectionBranchBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateVCSConnectionBranchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVCSConnectionBranchUnauthorized creates a CreateVCSConnectionBranchUnauthorized with default headers values
func NewCreateVCSConnectionBranchUnauthorized() *CreateVCSConnectionBranchUnauthorized {
	return &CreateVCSConnectionBranchUnauthorized{}
}

/*
CreateVCSConnectionBranchUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateVCSConnectionBranchUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create v c s connection branch unauthorized response has a 2xx status code
func (o *CreateVCSConnectionBranchUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v c s connection branch unauthorized response has a 3xx status code
func (o *CreateVCSConnectionBranchUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v c s connection branch unauthorized response has a 4xx status code
func (o *CreateVCSConnectionBranchUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v c s connection branch unauthorized response has a 5xx status code
func (o *CreateVCSConnectionBranchUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create v c s connection branch unauthorized response a status code equal to that given
func (o *CreateVCSConnectionBranchUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create v c s connection branch unauthorized response
func (o *CreateVCSConnectionBranchUnauthorized) Code() int {
	return 401
}

func (o *CreateVCSConnectionBranchUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateVCSConnectionBranchUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateVCSConnectionBranchUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateVCSConnectionBranchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVCSConnectionBranchForbidden creates a CreateVCSConnectionBranchForbidden with default headers values
func NewCreateVCSConnectionBranchForbidden() *CreateVCSConnectionBranchForbidden {
	return &CreateVCSConnectionBranchForbidden{}
}

/*
CreateVCSConnectionBranchForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateVCSConnectionBranchForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create v c s connection branch forbidden response has a 2xx status code
func (o *CreateVCSConnectionBranchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v c s connection branch forbidden response has a 3xx status code
func (o *CreateVCSConnectionBranchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v c s connection branch forbidden response has a 4xx status code
func (o *CreateVCSConnectionBranchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v c s connection branch forbidden response has a 5xx status code
func (o *CreateVCSConnectionBranchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create v c s connection branch forbidden response a status code equal to that given
func (o *CreateVCSConnectionBranchForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create v c s connection branch forbidden response
func (o *CreateVCSConnectionBranchForbidden) Code() int {
	return 403
}

func (o *CreateVCSConnectionBranchForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchForbidden  %+v", 403, o.Payload)
}

func (o *CreateVCSConnectionBranchForbidden) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchForbidden  %+v", 403, o.Payload)
}

func (o *CreateVCSConnectionBranchForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateVCSConnectionBranchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVCSConnectionBranchNotFound creates a CreateVCSConnectionBranchNotFound with default headers values
func NewCreateVCSConnectionBranchNotFound() *CreateVCSConnectionBranchNotFound {
	return &CreateVCSConnectionBranchNotFound{}
}

/*
CreateVCSConnectionBranchNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateVCSConnectionBranchNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create v c s connection branch not found response has a 2xx status code
func (o *CreateVCSConnectionBranchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v c s connection branch not found response has a 3xx status code
func (o *CreateVCSConnectionBranchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v c s connection branch not found response has a 4xx status code
func (o *CreateVCSConnectionBranchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create v c s connection branch not found response has a 5xx status code
func (o *CreateVCSConnectionBranchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create v c s connection branch not found response a status code equal to that given
func (o *CreateVCSConnectionBranchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create v c s connection branch not found response
func (o *CreateVCSConnectionBranchNotFound) Code() int {
	return 404
}

func (o *CreateVCSConnectionBranchNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchNotFound  %+v", 404, o.Payload)
}

func (o *CreateVCSConnectionBranchNotFound) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchNotFound  %+v", 404, o.Payload)
}

func (o *CreateVCSConnectionBranchNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateVCSConnectionBranchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVCSConnectionBranchInternalServerError creates a CreateVCSConnectionBranchInternalServerError with default headers values
func NewCreateVCSConnectionBranchInternalServerError() *CreateVCSConnectionBranchInternalServerError {
	return &CreateVCSConnectionBranchInternalServerError{}
}

/*
CreateVCSConnectionBranchInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateVCSConnectionBranchInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create v c s connection branch internal server error response has a 2xx status code
func (o *CreateVCSConnectionBranchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create v c s connection branch internal server error response has a 3xx status code
func (o *CreateVCSConnectionBranchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create v c s connection branch internal server error response has a 4xx status code
func (o *CreateVCSConnectionBranchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create v c s connection branch internal server error response has a 5xx status code
func (o *CreateVCSConnectionBranchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create v c s connection branch internal server error response a status code equal to that given
func (o *CreateVCSConnectionBranchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create v c s connection branch internal server error response
func (o *CreateVCSConnectionBranchInternalServerError) Code() int {
	return 500
}

func (o *CreateVCSConnectionBranchInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateVCSConnectionBranchInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/vcs/connections/{connection_id}/branches][%d] createVCSConnectionBranchInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateVCSConnectionBranchInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateVCSConnectionBranchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
