// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetOrgAcountsReader is a Reader for the GetOrgAcounts structure.
type GetOrgAcountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgAcountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgAcountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgAcountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgAcountsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgAcountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgAcountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgAcountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/orgs/current/accounts] GetOrgAcounts", response, response.Code())
	}
}

// NewGetOrgAcountsOK creates a GetOrgAcountsOK with default headers values
func NewGetOrgAcountsOK() *GetOrgAcountsOK {
	return &GetOrgAcountsOK{}
}

/*
GetOrgAcountsOK describes a response with status code 200, with default header values.

OK
*/
type GetOrgAcountsOK struct {
	Payload *models.AppOrg
}

// IsSuccess returns true when this get org acounts o k response has a 2xx status code
func (o *GetOrgAcountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get org acounts o k response has a 3xx status code
func (o *GetOrgAcountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org acounts o k response has a 4xx status code
func (o *GetOrgAcountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org acounts o k response has a 5xx status code
func (o *GetOrgAcountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get org acounts o k response a status code equal to that given
func (o *GetOrgAcountsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get org acounts o k response
func (o *GetOrgAcountsOK) Code() int {
	return 200
}

func (o *GetOrgAcountsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsOK %s", 200, payload)
}

func (o *GetOrgAcountsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsOK %s", 200, payload)
}

func (o *GetOrgAcountsOK) GetPayload() *models.AppOrg {
	return o.Payload
}

func (o *GetOrgAcountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppOrg)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgAcountsBadRequest creates a GetOrgAcountsBadRequest with default headers values
func NewGetOrgAcountsBadRequest() *GetOrgAcountsBadRequest {
	return &GetOrgAcountsBadRequest{}
}

/*
GetOrgAcountsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOrgAcountsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org acounts bad request response has a 2xx status code
func (o *GetOrgAcountsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org acounts bad request response has a 3xx status code
func (o *GetOrgAcountsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org acounts bad request response has a 4xx status code
func (o *GetOrgAcountsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org acounts bad request response has a 5xx status code
func (o *GetOrgAcountsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get org acounts bad request response a status code equal to that given
func (o *GetOrgAcountsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get org acounts bad request response
func (o *GetOrgAcountsBadRequest) Code() int {
	return 400
}

func (o *GetOrgAcountsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsBadRequest %s", 400, payload)
}

func (o *GetOrgAcountsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsBadRequest %s", 400, payload)
}

func (o *GetOrgAcountsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgAcountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgAcountsUnauthorized creates a GetOrgAcountsUnauthorized with default headers values
func NewGetOrgAcountsUnauthorized() *GetOrgAcountsUnauthorized {
	return &GetOrgAcountsUnauthorized{}
}

/*
GetOrgAcountsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrgAcountsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org acounts unauthorized response has a 2xx status code
func (o *GetOrgAcountsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org acounts unauthorized response has a 3xx status code
func (o *GetOrgAcountsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org acounts unauthorized response has a 4xx status code
func (o *GetOrgAcountsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org acounts unauthorized response has a 5xx status code
func (o *GetOrgAcountsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get org acounts unauthorized response a status code equal to that given
func (o *GetOrgAcountsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get org acounts unauthorized response
func (o *GetOrgAcountsUnauthorized) Code() int {
	return 401
}

func (o *GetOrgAcountsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsUnauthorized %s", 401, payload)
}

func (o *GetOrgAcountsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsUnauthorized %s", 401, payload)
}

func (o *GetOrgAcountsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgAcountsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgAcountsForbidden creates a GetOrgAcountsForbidden with default headers values
func NewGetOrgAcountsForbidden() *GetOrgAcountsForbidden {
	return &GetOrgAcountsForbidden{}
}

/*
GetOrgAcountsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrgAcountsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org acounts forbidden response has a 2xx status code
func (o *GetOrgAcountsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org acounts forbidden response has a 3xx status code
func (o *GetOrgAcountsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org acounts forbidden response has a 4xx status code
func (o *GetOrgAcountsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org acounts forbidden response has a 5xx status code
func (o *GetOrgAcountsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get org acounts forbidden response a status code equal to that given
func (o *GetOrgAcountsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get org acounts forbidden response
func (o *GetOrgAcountsForbidden) Code() int {
	return 403
}

func (o *GetOrgAcountsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsForbidden %s", 403, payload)
}

func (o *GetOrgAcountsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsForbidden %s", 403, payload)
}

func (o *GetOrgAcountsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgAcountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgAcountsNotFound creates a GetOrgAcountsNotFound with default headers values
func NewGetOrgAcountsNotFound() *GetOrgAcountsNotFound {
	return &GetOrgAcountsNotFound{}
}

/*
GetOrgAcountsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrgAcountsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org acounts not found response has a 2xx status code
func (o *GetOrgAcountsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org acounts not found response has a 3xx status code
func (o *GetOrgAcountsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org acounts not found response has a 4xx status code
func (o *GetOrgAcountsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org acounts not found response has a 5xx status code
func (o *GetOrgAcountsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get org acounts not found response a status code equal to that given
func (o *GetOrgAcountsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get org acounts not found response
func (o *GetOrgAcountsNotFound) Code() int {
	return 404
}

func (o *GetOrgAcountsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsNotFound %s", 404, payload)
}

func (o *GetOrgAcountsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsNotFound %s", 404, payload)
}

func (o *GetOrgAcountsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgAcountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgAcountsInternalServerError creates a GetOrgAcountsInternalServerError with default headers values
func NewGetOrgAcountsInternalServerError() *GetOrgAcountsInternalServerError {
	return &GetOrgAcountsInternalServerError{}
}

/*
GetOrgAcountsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrgAcountsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org acounts internal server error response has a 2xx status code
func (o *GetOrgAcountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org acounts internal server error response has a 3xx status code
func (o *GetOrgAcountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org acounts internal server error response has a 4xx status code
func (o *GetOrgAcountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org acounts internal server error response has a 5xx status code
func (o *GetOrgAcountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get org acounts internal server error response a status code equal to that given
func (o *GetOrgAcountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get org acounts internal server error response
func (o *GetOrgAcountsInternalServerError) Code() int {
	return 500
}

func (o *GetOrgAcountsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsInternalServerError %s", 500, payload)
}

func (o *GetOrgAcountsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/accounts][%d] getOrgAcountsInternalServerError %s", 500, payload)
}

func (o *GetOrgAcountsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgAcountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
