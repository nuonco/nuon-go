// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteInstallComponentsReader is a Reader for the DeleteInstallComponents structure.
type DeleteInstallComponentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteInstallComponentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteInstallComponentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteInstallComponentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteInstallComponentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteInstallComponentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteInstallComponentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteInstallComponentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/installs/{install_id}/components] DeleteInstallComponents", response, response.Code())
	}
}

// NewDeleteInstallComponentsOK creates a DeleteInstallComponentsOK with default headers values
func NewDeleteInstallComponentsOK() *DeleteInstallComponentsOK {
	return &DeleteInstallComponentsOK{}
}

/*
DeleteInstallComponentsOK describes a response with status code 200, with default header values.

OK
*/
type DeleteInstallComponentsOK struct {
	Payload bool
}

// IsSuccess returns true when this delete install components o k response has a 2xx status code
func (o *DeleteInstallComponentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete install components o k response has a 3xx status code
func (o *DeleteInstallComponentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install components o k response has a 4xx status code
func (o *DeleteInstallComponentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete install components o k response has a 5xx status code
func (o *DeleteInstallComponentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install components o k response a status code equal to that given
func (o *DeleteInstallComponentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete install components o k response
func (o *DeleteInstallComponentsOK) Code() int {
	return 200
}

func (o *DeleteInstallComponentsOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsOK  %+v", 200, o.Payload)
}

func (o *DeleteInstallComponentsOK) String() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsOK  %+v", 200, o.Payload)
}

func (o *DeleteInstallComponentsOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteInstallComponentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallComponentsBadRequest creates a DeleteInstallComponentsBadRequest with default headers values
func NewDeleteInstallComponentsBadRequest() *DeleteInstallComponentsBadRequest {
	return &DeleteInstallComponentsBadRequest{}
}

/*
DeleteInstallComponentsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteInstallComponentsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install components bad request response has a 2xx status code
func (o *DeleteInstallComponentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install components bad request response has a 3xx status code
func (o *DeleteInstallComponentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install components bad request response has a 4xx status code
func (o *DeleteInstallComponentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install components bad request response has a 5xx status code
func (o *DeleteInstallComponentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install components bad request response a status code equal to that given
func (o *DeleteInstallComponentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete install components bad request response
func (o *DeleteInstallComponentsBadRequest) Code() int {
	return 400
}

func (o *DeleteInstallComponentsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteInstallComponentsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteInstallComponentsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallComponentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallComponentsUnauthorized creates a DeleteInstallComponentsUnauthorized with default headers values
func NewDeleteInstallComponentsUnauthorized() *DeleteInstallComponentsUnauthorized {
	return &DeleteInstallComponentsUnauthorized{}
}

/*
DeleteInstallComponentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteInstallComponentsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install components unauthorized response has a 2xx status code
func (o *DeleteInstallComponentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install components unauthorized response has a 3xx status code
func (o *DeleteInstallComponentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install components unauthorized response has a 4xx status code
func (o *DeleteInstallComponentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install components unauthorized response has a 5xx status code
func (o *DeleteInstallComponentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install components unauthorized response a status code equal to that given
func (o *DeleteInstallComponentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete install components unauthorized response
func (o *DeleteInstallComponentsUnauthorized) Code() int {
	return 401
}

func (o *DeleteInstallComponentsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteInstallComponentsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteInstallComponentsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallComponentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallComponentsForbidden creates a DeleteInstallComponentsForbidden with default headers values
func NewDeleteInstallComponentsForbidden() *DeleteInstallComponentsForbidden {
	return &DeleteInstallComponentsForbidden{}
}

/*
DeleteInstallComponentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteInstallComponentsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install components forbidden response has a 2xx status code
func (o *DeleteInstallComponentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install components forbidden response has a 3xx status code
func (o *DeleteInstallComponentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install components forbidden response has a 4xx status code
func (o *DeleteInstallComponentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install components forbidden response has a 5xx status code
func (o *DeleteInstallComponentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install components forbidden response a status code equal to that given
func (o *DeleteInstallComponentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete install components forbidden response
func (o *DeleteInstallComponentsForbidden) Code() int {
	return 403
}

func (o *DeleteInstallComponentsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteInstallComponentsForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteInstallComponentsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallComponentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallComponentsNotFound creates a DeleteInstallComponentsNotFound with default headers values
func NewDeleteInstallComponentsNotFound() *DeleteInstallComponentsNotFound {
	return &DeleteInstallComponentsNotFound{}
}

/*
DeleteInstallComponentsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteInstallComponentsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install components not found response has a 2xx status code
func (o *DeleteInstallComponentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install components not found response has a 3xx status code
func (o *DeleteInstallComponentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install components not found response has a 4xx status code
func (o *DeleteInstallComponentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete install components not found response has a 5xx status code
func (o *DeleteInstallComponentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete install components not found response a status code equal to that given
func (o *DeleteInstallComponentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete install components not found response
func (o *DeleteInstallComponentsNotFound) Code() int {
	return 404
}

func (o *DeleteInstallComponentsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteInstallComponentsNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteInstallComponentsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallComponentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInstallComponentsInternalServerError creates a DeleteInstallComponentsInternalServerError with default headers values
func NewDeleteInstallComponentsInternalServerError() *DeleteInstallComponentsInternalServerError {
	return &DeleteInstallComponentsInternalServerError{}
}

/*
DeleteInstallComponentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteInstallComponentsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete install components internal server error response has a 2xx status code
func (o *DeleteInstallComponentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete install components internal server error response has a 3xx status code
func (o *DeleteInstallComponentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete install components internal server error response has a 4xx status code
func (o *DeleteInstallComponentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete install components internal server error response has a 5xx status code
func (o *DeleteInstallComponentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete install components internal server error response a status code equal to that given
func (o *DeleteInstallComponentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete install components internal server error response
func (o *DeleteInstallComponentsInternalServerError) Code() int {
	return 500
}

func (o *DeleteInstallComponentsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteInstallComponentsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/installs/{install_id}/components][%d] deleteInstallComponentsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteInstallComponentsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteInstallComponentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
