// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1AppsAppIDInputConfigsReader is a Reader for the GetV1AppsAppIDInputConfigs structure.
type GetV1AppsAppIDInputConfigsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1AppsAppIDInputConfigsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1AppsAppIDInputConfigsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1AppsAppIDInputConfigsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1AppsAppIDInputConfigsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1AppsAppIDInputConfigsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1AppsAppIDInputConfigsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1AppsAppIDInputConfigsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/input-configs] GetV1AppsAppIDInputConfigs", response, response.Code())
	}
}

// NewGetV1AppsAppIDInputConfigsOK creates a GetV1AppsAppIDInputConfigsOK with default headers values
func NewGetV1AppsAppIDInputConfigsOK() *GetV1AppsAppIDInputConfigsOK {
	return &GetV1AppsAppIDInputConfigsOK{}
}

/*
GetV1AppsAppIDInputConfigsOK describes a response with status code 200, with default header values.

OK
*/
type GetV1AppsAppIDInputConfigsOK struct {
	Payload []*models.AppAppInputConfig
}

// IsSuccess returns true when this get v1 apps app Id input configs o k response has a 2xx status code
func (o *GetV1AppsAppIDInputConfigsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 apps app Id input configs o k response has a 3xx status code
func (o *GetV1AppsAppIDInputConfigsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id input configs o k response has a 4xx status code
func (o *GetV1AppsAppIDInputConfigsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 apps app Id input configs o k response has a 5xx status code
func (o *GetV1AppsAppIDInputConfigsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id input configs o k response a status code equal to that given
func (o *GetV1AppsAppIDInputConfigsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 apps app Id input configs o k response
func (o *GetV1AppsAppIDInputConfigsOK) Code() int {
	return 200
}

func (o *GetV1AppsAppIDInputConfigsOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsOK  %+v", 200, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsOK) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsOK  %+v", 200, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsOK) GetPayload() []*models.AppAppInputConfig {
	return o.Payload
}

func (o *GetV1AppsAppIDInputConfigsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDInputConfigsBadRequest creates a GetV1AppsAppIDInputConfigsBadRequest with default headers values
func NewGetV1AppsAppIDInputConfigsBadRequest() *GetV1AppsAppIDInputConfigsBadRequest {
	return &GetV1AppsAppIDInputConfigsBadRequest{}
}

/*
GetV1AppsAppIDInputConfigsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1AppsAppIDInputConfigsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id input configs bad request response has a 2xx status code
func (o *GetV1AppsAppIDInputConfigsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id input configs bad request response has a 3xx status code
func (o *GetV1AppsAppIDInputConfigsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id input configs bad request response has a 4xx status code
func (o *GetV1AppsAppIDInputConfigsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id input configs bad request response has a 5xx status code
func (o *GetV1AppsAppIDInputConfigsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id input configs bad request response a status code equal to that given
func (o *GetV1AppsAppIDInputConfigsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 apps app Id input configs bad request response
func (o *GetV1AppsAppIDInputConfigsBadRequest) Code() int {
	return 400
}

func (o *GetV1AppsAppIDInputConfigsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDInputConfigsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDInputConfigsUnauthorized creates a GetV1AppsAppIDInputConfigsUnauthorized with default headers values
func NewGetV1AppsAppIDInputConfigsUnauthorized() *GetV1AppsAppIDInputConfigsUnauthorized {
	return &GetV1AppsAppIDInputConfigsUnauthorized{}
}

/*
GetV1AppsAppIDInputConfigsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1AppsAppIDInputConfigsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id input configs unauthorized response has a 2xx status code
func (o *GetV1AppsAppIDInputConfigsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id input configs unauthorized response has a 3xx status code
func (o *GetV1AppsAppIDInputConfigsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id input configs unauthorized response has a 4xx status code
func (o *GetV1AppsAppIDInputConfigsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id input configs unauthorized response has a 5xx status code
func (o *GetV1AppsAppIDInputConfigsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id input configs unauthorized response a status code equal to that given
func (o *GetV1AppsAppIDInputConfigsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 apps app Id input configs unauthorized response
func (o *GetV1AppsAppIDInputConfigsUnauthorized) Code() int {
	return 401
}

func (o *GetV1AppsAppIDInputConfigsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDInputConfigsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDInputConfigsForbidden creates a GetV1AppsAppIDInputConfigsForbidden with default headers values
func NewGetV1AppsAppIDInputConfigsForbidden() *GetV1AppsAppIDInputConfigsForbidden {
	return &GetV1AppsAppIDInputConfigsForbidden{}
}

/*
GetV1AppsAppIDInputConfigsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1AppsAppIDInputConfigsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id input configs forbidden response has a 2xx status code
func (o *GetV1AppsAppIDInputConfigsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id input configs forbidden response has a 3xx status code
func (o *GetV1AppsAppIDInputConfigsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id input configs forbidden response has a 4xx status code
func (o *GetV1AppsAppIDInputConfigsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id input configs forbidden response has a 5xx status code
func (o *GetV1AppsAppIDInputConfigsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id input configs forbidden response a status code equal to that given
func (o *GetV1AppsAppIDInputConfigsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 apps app Id input configs forbidden response
func (o *GetV1AppsAppIDInputConfigsForbidden) Code() int {
	return 403
}

func (o *GetV1AppsAppIDInputConfigsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDInputConfigsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDInputConfigsNotFound creates a GetV1AppsAppIDInputConfigsNotFound with default headers values
func NewGetV1AppsAppIDInputConfigsNotFound() *GetV1AppsAppIDInputConfigsNotFound {
	return &GetV1AppsAppIDInputConfigsNotFound{}
}

/*
GetV1AppsAppIDInputConfigsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1AppsAppIDInputConfigsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id input configs not found response has a 2xx status code
func (o *GetV1AppsAppIDInputConfigsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id input configs not found response has a 3xx status code
func (o *GetV1AppsAppIDInputConfigsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id input configs not found response has a 4xx status code
func (o *GetV1AppsAppIDInputConfigsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id input configs not found response has a 5xx status code
func (o *GetV1AppsAppIDInputConfigsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id input configs not found response a status code equal to that given
func (o *GetV1AppsAppIDInputConfigsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 apps app Id input configs not found response
func (o *GetV1AppsAppIDInputConfigsNotFound) Code() int {
	return 404
}

func (o *GetV1AppsAppIDInputConfigsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDInputConfigsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDInputConfigsInternalServerError creates a GetV1AppsAppIDInputConfigsInternalServerError with default headers values
func NewGetV1AppsAppIDInputConfigsInternalServerError() *GetV1AppsAppIDInputConfigsInternalServerError {
	return &GetV1AppsAppIDInputConfigsInternalServerError{}
}

/*
GetV1AppsAppIDInputConfigsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1AppsAppIDInputConfigsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id input configs internal server error response has a 2xx status code
func (o *GetV1AppsAppIDInputConfigsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id input configs internal server error response has a 3xx status code
func (o *GetV1AppsAppIDInputConfigsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id input configs internal server error response has a 4xx status code
func (o *GetV1AppsAppIDInputConfigsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 apps app Id input configs internal server error response has a 5xx status code
func (o *GetV1AppsAppIDInputConfigsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 apps app Id input configs internal server error response a status code equal to that given
func (o *GetV1AppsAppIDInputConfigsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 apps app Id input configs internal server error response
func (o *GetV1AppsAppIDInputConfigsInternalServerError) Code() int {
	return 500
}

func (o *GetV1AppsAppIDInputConfigsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/input-configs][%d] getV1AppsAppIdInputConfigsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1AppsAppIDInputConfigsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDInputConfigsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
