// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetActionWorkflowReader is a Reader for the GetActionWorkflow structure.
type GetActionWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetActionWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetActionWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetActionWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetActionWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetActionWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/action-workflows/{action_workflow_id}] GetActionWorkflow", response, response.Code())
	}
}

// NewGetActionWorkflowOK creates a GetActionWorkflowOK with default headers values
func NewGetActionWorkflowOK() *GetActionWorkflowOK {
	return &GetActionWorkflowOK{}
}

/*
GetActionWorkflowOK describes a response with status code 200, with default header values.

OK
*/
type GetActionWorkflowOK struct {
	Payload *models.AppActionWorkflow
}

// IsSuccess returns true when this get action workflow o k response has a 2xx status code
func (o *GetActionWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get action workflow o k response has a 3xx status code
func (o *GetActionWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow o k response has a 4xx status code
func (o *GetActionWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action workflow o k response has a 5xx status code
func (o *GetActionWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow o k response a status code equal to that given
func (o *GetActionWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get action workflow o k response
func (o *GetActionWorkflowOK) Code() int {
	return 200
}

func (o *GetActionWorkflowOK) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowOK  %+v", 200, o.Payload)
}

func (o *GetActionWorkflowOK) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowOK  %+v", 200, o.Payload)
}

func (o *GetActionWorkflowOK) GetPayload() *models.AppActionWorkflow {
	return o.Payload
}

func (o *GetActionWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppActionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowBadRequest creates a GetActionWorkflowBadRequest with default headers values
func NewGetActionWorkflowBadRequest() *GetActionWorkflowBadRequest {
	return &GetActionWorkflowBadRequest{}
}

/*
GetActionWorkflowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetActionWorkflowBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow bad request response has a 2xx status code
func (o *GetActionWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow bad request response has a 3xx status code
func (o *GetActionWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow bad request response has a 4xx status code
func (o *GetActionWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow bad request response has a 5xx status code
func (o *GetActionWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow bad request response a status code equal to that given
func (o *GetActionWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get action workflow bad request response
func (o *GetActionWorkflowBadRequest) Code() int {
	return 400
}

func (o *GetActionWorkflowBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowBadRequest  %+v", 400, o.Payload)
}

func (o *GetActionWorkflowBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowBadRequest  %+v", 400, o.Payload)
}

func (o *GetActionWorkflowBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowUnauthorized creates a GetActionWorkflowUnauthorized with default headers values
func NewGetActionWorkflowUnauthorized() *GetActionWorkflowUnauthorized {
	return &GetActionWorkflowUnauthorized{}
}

/*
GetActionWorkflowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetActionWorkflowUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow unauthorized response has a 2xx status code
func (o *GetActionWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow unauthorized response has a 3xx status code
func (o *GetActionWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow unauthorized response has a 4xx status code
func (o *GetActionWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow unauthorized response has a 5xx status code
func (o *GetActionWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow unauthorized response a status code equal to that given
func (o *GetActionWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get action workflow unauthorized response
func (o *GetActionWorkflowUnauthorized) Code() int {
	return 401
}

func (o *GetActionWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionWorkflowUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionWorkflowUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowForbidden creates a GetActionWorkflowForbidden with default headers values
func NewGetActionWorkflowForbidden() *GetActionWorkflowForbidden {
	return &GetActionWorkflowForbidden{}
}

/*
GetActionWorkflowForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetActionWorkflowForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow forbidden response has a 2xx status code
func (o *GetActionWorkflowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow forbidden response has a 3xx status code
func (o *GetActionWorkflowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow forbidden response has a 4xx status code
func (o *GetActionWorkflowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow forbidden response has a 5xx status code
func (o *GetActionWorkflowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow forbidden response a status code equal to that given
func (o *GetActionWorkflowForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get action workflow forbidden response
func (o *GetActionWorkflowForbidden) Code() int {
	return 403
}

func (o *GetActionWorkflowForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowForbidden  %+v", 403, o.Payload)
}

func (o *GetActionWorkflowForbidden) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowForbidden  %+v", 403, o.Payload)
}

func (o *GetActionWorkflowForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowNotFound creates a GetActionWorkflowNotFound with default headers values
func NewGetActionWorkflowNotFound() *GetActionWorkflowNotFound {
	return &GetActionWorkflowNotFound{}
}

/*
GetActionWorkflowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetActionWorkflowNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow not found response has a 2xx status code
func (o *GetActionWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow not found response has a 3xx status code
func (o *GetActionWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow not found response has a 4xx status code
func (o *GetActionWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow not found response has a 5xx status code
func (o *GetActionWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow not found response a status code equal to that given
func (o *GetActionWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get action workflow not found response
func (o *GetActionWorkflowNotFound) Code() int {
	return 404
}

func (o *GetActionWorkflowNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowNotFound  %+v", 404, o.Payload)
}

func (o *GetActionWorkflowNotFound) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowNotFound  %+v", 404, o.Payload)
}

func (o *GetActionWorkflowNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowInternalServerError creates a GetActionWorkflowInternalServerError with default headers values
func NewGetActionWorkflowInternalServerError() *GetActionWorkflowInternalServerError {
	return &GetActionWorkflowInternalServerError{}
}

/*
GetActionWorkflowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetActionWorkflowInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow internal server error response has a 2xx status code
func (o *GetActionWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow internal server error response has a 3xx status code
func (o *GetActionWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow internal server error response has a 4xx status code
func (o *GetActionWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action workflow internal server error response has a 5xx status code
func (o *GetActionWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get action workflow internal server error response a status code equal to that given
func (o *GetActionWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get action workflow internal server error response
func (o *GetActionWorkflowInternalServerError) Code() int {
	return 500
}

func (o *GetActionWorkflowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionWorkflowInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/{action_workflow_id}][%d] getActionWorkflowInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionWorkflowInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
