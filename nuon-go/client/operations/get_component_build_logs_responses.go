// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetComponentBuildLogsReader is a Reader for the GetComponentBuildLogs structure.
type GetComponentBuildLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentBuildLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentBuildLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetComponentBuildLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetComponentBuildLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetComponentBuildLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentBuildLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetComponentBuildLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/components/{component_id}/builds/{build_id}/logs] GetComponentBuildLogs", response, response.Code())
	}
}

// NewGetComponentBuildLogsOK creates a GetComponentBuildLogsOK with default headers values
func NewGetComponentBuildLogsOK() *GetComponentBuildLogsOK {
	return &GetComponentBuildLogsOK{}
}

/*
GetComponentBuildLogsOK describes a response with status code 200, with default header values.

OK
*/
type GetComponentBuildLogsOK struct {
	Payload []interface{}
}

// IsSuccess returns true when this get component build logs o k response has a 2xx status code
func (o *GetComponentBuildLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component build logs o k response has a 3xx status code
func (o *GetComponentBuildLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build logs o k response has a 4xx status code
func (o *GetComponentBuildLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component build logs o k response has a 5xx status code
func (o *GetComponentBuildLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build logs o k response a status code equal to that given
func (o *GetComponentBuildLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component build logs o k response
func (o *GetComponentBuildLogsOK) Code() int {
	return 200
}

func (o *GetComponentBuildLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsOK %s", 200, payload)
}

func (o *GetComponentBuildLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsOK %s", 200, payload)
}

func (o *GetComponentBuildLogsOK) GetPayload() []interface{} {
	return o.Payload
}

func (o *GetComponentBuildLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildLogsBadRequest creates a GetComponentBuildLogsBadRequest with default headers values
func NewGetComponentBuildLogsBadRequest() *GetComponentBuildLogsBadRequest {
	return &GetComponentBuildLogsBadRequest{}
}

/*
GetComponentBuildLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetComponentBuildLogsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build logs bad request response has a 2xx status code
func (o *GetComponentBuildLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build logs bad request response has a 3xx status code
func (o *GetComponentBuildLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build logs bad request response has a 4xx status code
func (o *GetComponentBuildLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build logs bad request response has a 5xx status code
func (o *GetComponentBuildLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build logs bad request response a status code equal to that given
func (o *GetComponentBuildLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get component build logs bad request response
func (o *GetComponentBuildLogsBadRequest) Code() int {
	return 400
}

func (o *GetComponentBuildLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsBadRequest %s", 400, payload)
}

func (o *GetComponentBuildLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsBadRequest %s", 400, payload)
}

func (o *GetComponentBuildLogsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildLogsUnauthorized creates a GetComponentBuildLogsUnauthorized with default headers values
func NewGetComponentBuildLogsUnauthorized() *GetComponentBuildLogsUnauthorized {
	return &GetComponentBuildLogsUnauthorized{}
}

/*
GetComponentBuildLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetComponentBuildLogsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build logs unauthorized response has a 2xx status code
func (o *GetComponentBuildLogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build logs unauthorized response has a 3xx status code
func (o *GetComponentBuildLogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build logs unauthorized response has a 4xx status code
func (o *GetComponentBuildLogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build logs unauthorized response has a 5xx status code
func (o *GetComponentBuildLogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build logs unauthorized response a status code equal to that given
func (o *GetComponentBuildLogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get component build logs unauthorized response
func (o *GetComponentBuildLogsUnauthorized) Code() int {
	return 401
}

func (o *GetComponentBuildLogsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsUnauthorized %s", 401, payload)
}

func (o *GetComponentBuildLogsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsUnauthorized %s", 401, payload)
}

func (o *GetComponentBuildLogsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildLogsForbidden creates a GetComponentBuildLogsForbidden with default headers values
func NewGetComponentBuildLogsForbidden() *GetComponentBuildLogsForbidden {
	return &GetComponentBuildLogsForbidden{}
}

/*
GetComponentBuildLogsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetComponentBuildLogsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build logs forbidden response has a 2xx status code
func (o *GetComponentBuildLogsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build logs forbidden response has a 3xx status code
func (o *GetComponentBuildLogsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build logs forbidden response has a 4xx status code
func (o *GetComponentBuildLogsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build logs forbidden response has a 5xx status code
func (o *GetComponentBuildLogsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build logs forbidden response a status code equal to that given
func (o *GetComponentBuildLogsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component build logs forbidden response
func (o *GetComponentBuildLogsForbidden) Code() int {
	return 403
}

func (o *GetComponentBuildLogsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsForbidden %s", 403, payload)
}

func (o *GetComponentBuildLogsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsForbidden %s", 403, payload)
}

func (o *GetComponentBuildLogsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildLogsNotFound creates a GetComponentBuildLogsNotFound with default headers values
func NewGetComponentBuildLogsNotFound() *GetComponentBuildLogsNotFound {
	return &GetComponentBuildLogsNotFound{}
}

/*
GetComponentBuildLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetComponentBuildLogsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build logs not found response has a 2xx status code
func (o *GetComponentBuildLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build logs not found response has a 3xx status code
func (o *GetComponentBuildLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build logs not found response has a 4xx status code
func (o *GetComponentBuildLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build logs not found response has a 5xx status code
func (o *GetComponentBuildLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build logs not found response a status code equal to that given
func (o *GetComponentBuildLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component build logs not found response
func (o *GetComponentBuildLogsNotFound) Code() int {
	return 404
}

func (o *GetComponentBuildLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsNotFound %s", 404, payload)
}

func (o *GetComponentBuildLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsNotFound %s", 404, payload)
}

func (o *GetComponentBuildLogsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildLogsInternalServerError creates a GetComponentBuildLogsInternalServerError with default headers values
func NewGetComponentBuildLogsInternalServerError() *GetComponentBuildLogsInternalServerError {
	return &GetComponentBuildLogsInternalServerError{}
}

/*
GetComponentBuildLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetComponentBuildLogsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build logs internal server error response has a 2xx status code
func (o *GetComponentBuildLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build logs internal server error response has a 3xx status code
func (o *GetComponentBuildLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build logs internal server error response has a 4xx status code
func (o *GetComponentBuildLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component build logs internal server error response has a 5xx status code
func (o *GetComponentBuildLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get component build logs internal server error response a status code equal to that given
func (o *GetComponentBuildLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get component build logs internal server error response
func (o *GetComponentBuildLogsInternalServerError) Code() int {
	return 500
}

func (o *GetComponentBuildLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsInternalServerError %s", 500, payload)
}

func (o *GetComponentBuildLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/logs][%d] getComponentBuildLogsInternalServerError %s", 500, payload)
}

func (o *GetComponentBuildLogsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
