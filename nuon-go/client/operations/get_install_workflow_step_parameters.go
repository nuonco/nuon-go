// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetInstallWorkflowStepParams creates a new GetInstallWorkflowStepParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInstallWorkflowStepParams() *GetInstallWorkflowStepParams {
	return &GetInstallWorkflowStepParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInstallWorkflowStepParamsWithTimeout creates a new GetInstallWorkflowStepParams object
// with the ability to set a timeout on a request.
func NewGetInstallWorkflowStepParamsWithTimeout(timeout time.Duration) *GetInstallWorkflowStepParams {
	return &GetInstallWorkflowStepParams{
		timeout: timeout,
	}
}

// NewGetInstallWorkflowStepParamsWithContext creates a new GetInstallWorkflowStepParams object
// with the ability to set a context for a request.
func NewGetInstallWorkflowStepParamsWithContext(ctx context.Context) *GetInstallWorkflowStepParams {
	return &GetInstallWorkflowStepParams{
		Context: ctx,
	}
}

// NewGetInstallWorkflowStepParamsWithHTTPClient creates a new GetInstallWorkflowStepParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInstallWorkflowStepParamsWithHTTPClient(client *http.Client) *GetInstallWorkflowStepParams {
	return &GetInstallWorkflowStepParams{
		HTTPClient: client,
	}
}

/*
GetInstallWorkflowStepParams contains all the parameters to send to the API endpoint

	for the get install workflow step operation.

	Typically these are written to a http.Request.
*/
type GetInstallWorkflowStepParams struct {

	/* InstallWorkflowID.

	   workflow id
	*/
	InstallWorkflowID string

	/* InstallWorkflowStepID.

	   step id
	*/
	InstallWorkflowStepID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get install workflow step params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInstallWorkflowStepParams) WithDefaults() *GetInstallWorkflowStepParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get install workflow step params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInstallWorkflowStepParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get install workflow step params
func (o *GetInstallWorkflowStepParams) WithTimeout(timeout time.Duration) *GetInstallWorkflowStepParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get install workflow step params
func (o *GetInstallWorkflowStepParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get install workflow step params
func (o *GetInstallWorkflowStepParams) WithContext(ctx context.Context) *GetInstallWorkflowStepParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get install workflow step params
func (o *GetInstallWorkflowStepParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get install workflow step params
func (o *GetInstallWorkflowStepParams) WithHTTPClient(client *http.Client) *GetInstallWorkflowStepParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get install workflow step params
func (o *GetInstallWorkflowStepParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInstallWorkflowID adds the installWorkflowID to the get install workflow step params
func (o *GetInstallWorkflowStepParams) WithInstallWorkflowID(installWorkflowID string) *GetInstallWorkflowStepParams {
	o.SetInstallWorkflowID(installWorkflowID)
	return o
}

// SetInstallWorkflowID adds the installWorkflowId to the get install workflow step params
func (o *GetInstallWorkflowStepParams) SetInstallWorkflowID(installWorkflowID string) {
	o.InstallWorkflowID = installWorkflowID
}

// WithInstallWorkflowStepID adds the installWorkflowStepID to the get install workflow step params
func (o *GetInstallWorkflowStepParams) WithInstallWorkflowStepID(installWorkflowStepID string) *GetInstallWorkflowStepParams {
	o.SetInstallWorkflowStepID(installWorkflowStepID)
	return o
}

// SetInstallWorkflowStepID adds the installWorkflowStepId to the get install workflow step params
func (o *GetInstallWorkflowStepParams) SetInstallWorkflowStepID(installWorkflowStepID string) {
	o.InstallWorkflowStepID = installWorkflowStepID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInstallWorkflowStepParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param install_workflow_id
	if err := r.SetPathParam("install_workflow_id", o.InstallWorkflowID); err != nil {
		return err
	}

	// path param install_workflow_step_id
	if err := r.SetPathParam("install_workflow_step_id", o.InstallWorkflowStepID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
