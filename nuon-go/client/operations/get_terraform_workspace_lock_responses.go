// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetTerraformWorkspaceLockReader is a Reader for the GetTerraformWorkspaceLock structure.
type GetTerraformWorkspaceLockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTerraformWorkspaceLockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTerraformWorkspaceLockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTerraformWorkspaceLockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTerraformWorkspaceLockUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTerraformWorkspaceLockForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTerraformWorkspaceLockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTerraformWorkspaceLockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/terraform-workspaces/{workspace_id}/lock] GetTerraformWorkspaceLock", response, response.Code())
	}
}

// NewGetTerraformWorkspaceLockOK creates a GetTerraformWorkspaceLockOK with default headers values
func NewGetTerraformWorkspaceLockOK() *GetTerraformWorkspaceLockOK {
	return &GetTerraformWorkspaceLockOK{}
}

/*
GetTerraformWorkspaceLockOK describes a response with status code 200, with default header values.

OK
*/
type GetTerraformWorkspaceLockOK struct {
	Payload *models.AppTerraformWorkspaceLock
}

// IsSuccess returns true when this get terraform workspace lock o k response has a 2xx status code
func (o *GetTerraformWorkspaceLockOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get terraform workspace lock o k response has a 3xx status code
func (o *GetTerraformWorkspaceLockOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform workspace lock o k response has a 4xx status code
func (o *GetTerraformWorkspaceLockOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get terraform workspace lock o k response has a 5xx status code
func (o *GetTerraformWorkspaceLockOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform workspace lock o k response a status code equal to that given
func (o *GetTerraformWorkspaceLockOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get terraform workspace lock o k response
func (o *GetTerraformWorkspaceLockOK) Code() int {
	return 200
}

func (o *GetTerraformWorkspaceLockOK) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockOK  %+v", 200, o.Payload)
}

func (o *GetTerraformWorkspaceLockOK) String() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockOK  %+v", 200, o.Payload)
}

func (o *GetTerraformWorkspaceLockOK) GetPayload() *models.AppTerraformWorkspaceLock {
	return o.Payload
}

func (o *GetTerraformWorkspaceLockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppTerraformWorkspaceLock)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformWorkspaceLockBadRequest creates a GetTerraformWorkspaceLockBadRequest with default headers values
func NewGetTerraformWorkspaceLockBadRequest() *GetTerraformWorkspaceLockBadRequest {
	return &GetTerraformWorkspaceLockBadRequest{}
}

/*
GetTerraformWorkspaceLockBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTerraformWorkspaceLockBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform workspace lock bad request response has a 2xx status code
func (o *GetTerraformWorkspaceLockBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform workspace lock bad request response has a 3xx status code
func (o *GetTerraformWorkspaceLockBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform workspace lock bad request response has a 4xx status code
func (o *GetTerraformWorkspaceLockBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform workspace lock bad request response has a 5xx status code
func (o *GetTerraformWorkspaceLockBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform workspace lock bad request response a status code equal to that given
func (o *GetTerraformWorkspaceLockBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get terraform workspace lock bad request response
func (o *GetTerraformWorkspaceLockBadRequest) Code() int {
	return 400
}

func (o *GetTerraformWorkspaceLockBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockBadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformWorkspaceLockBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockBadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformWorkspaceLockBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformWorkspaceLockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformWorkspaceLockUnauthorized creates a GetTerraformWorkspaceLockUnauthorized with default headers values
func NewGetTerraformWorkspaceLockUnauthorized() *GetTerraformWorkspaceLockUnauthorized {
	return &GetTerraformWorkspaceLockUnauthorized{}
}

/*
GetTerraformWorkspaceLockUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTerraformWorkspaceLockUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform workspace lock unauthorized response has a 2xx status code
func (o *GetTerraformWorkspaceLockUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform workspace lock unauthorized response has a 3xx status code
func (o *GetTerraformWorkspaceLockUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform workspace lock unauthorized response has a 4xx status code
func (o *GetTerraformWorkspaceLockUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform workspace lock unauthorized response has a 5xx status code
func (o *GetTerraformWorkspaceLockUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform workspace lock unauthorized response a status code equal to that given
func (o *GetTerraformWorkspaceLockUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get terraform workspace lock unauthorized response
func (o *GetTerraformWorkspaceLockUnauthorized) Code() int {
	return 401
}

func (o *GetTerraformWorkspaceLockUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTerraformWorkspaceLockUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTerraformWorkspaceLockUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformWorkspaceLockUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformWorkspaceLockForbidden creates a GetTerraformWorkspaceLockForbidden with default headers values
func NewGetTerraformWorkspaceLockForbidden() *GetTerraformWorkspaceLockForbidden {
	return &GetTerraformWorkspaceLockForbidden{}
}

/*
GetTerraformWorkspaceLockForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTerraformWorkspaceLockForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform workspace lock forbidden response has a 2xx status code
func (o *GetTerraformWorkspaceLockForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform workspace lock forbidden response has a 3xx status code
func (o *GetTerraformWorkspaceLockForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform workspace lock forbidden response has a 4xx status code
func (o *GetTerraformWorkspaceLockForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform workspace lock forbidden response has a 5xx status code
func (o *GetTerraformWorkspaceLockForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform workspace lock forbidden response a status code equal to that given
func (o *GetTerraformWorkspaceLockForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get terraform workspace lock forbidden response
func (o *GetTerraformWorkspaceLockForbidden) Code() int {
	return 403
}

func (o *GetTerraformWorkspaceLockForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockForbidden  %+v", 403, o.Payload)
}

func (o *GetTerraformWorkspaceLockForbidden) String() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockForbidden  %+v", 403, o.Payload)
}

func (o *GetTerraformWorkspaceLockForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformWorkspaceLockForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformWorkspaceLockNotFound creates a GetTerraformWorkspaceLockNotFound with default headers values
func NewGetTerraformWorkspaceLockNotFound() *GetTerraformWorkspaceLockNotFound {
	return &GetTerraformWorkspaceLockNotFound{}
}

/*
GetTerraformWorkspaceLockNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTerraformWorkspaceLockNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform workspace lock not found response has a 2xx status code
func (o *GetTerraformWorkspaceLockNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform workspace lock not found response has a 3xx status code
func (o *GetTerraformWorkspaceLockNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform workspace lock not found response has a 4xx status code
func (o *GetTerraformWorkspaceLockNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform workspace lock not found response has a 5xx status code
func (o *GetTerraformWorkspaceLockNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform workspace lock not found response a status code equal to that given
func (o *GetTerraformWorkspaceLockNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get terraform workspace lock not found response
func (o *GetTerraformWorkspaceLockNotFound) Code() int {
	return 404
}

func (o *GetTerraformWorkspaceLockNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockNotFound  %+v", 404, o.Payload)
}

func (o *GetTerraformWorkspaceLockNotFound) String() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockNotFound  %+v", 404, o.Payload)
}

func (o *GetTerraformWorkspaceLockNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformWorkspaceLockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformWorkspaceLockInternalServerError creates a GetTerraformWorkspaceLockInternalServerError with default headers values
func NewGetTerraformWorkspaceLockInternalServerError() *GetTerraformWorkspaceLockInternalServerError {
	return &GetTerraformWorkspaceLockInternalServerError{}
}

/*
GetTerraformWorkspaceLockInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTerraformWorkspaceLockInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform workspace lock internal server error response has a 2xx status code
func (o *GetTerraformWorkspaceLockInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform workspace lock internal server error response has a 3xx status code
func (o *GetTerraformWorkspaceLockInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform workspace lock internal server error response has a 4xx status code
func (o *GetTerraformWorkspaceLockInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get terraform workspace lock internal server error response has a 5xx status code
func (o *GetTerraformWorkspaceLockInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get terraform workspace lock internal server error response a status code equal to that given
func (o *GetTerraformWorkspaceLockInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get terraform workspace lock internal server error response
func (o *GetTerraformWorkspaceLockInternalServerError) Code() int {
	return 500
}

func (o *GetTerraformWorkspaceLockInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTerraformWorkspaceLockInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/terraform-workspaces/{workspace_id}/lock][%d] getTerraformWorkspaceLockInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTerraformWorkspaceLockInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformWorkspaceLockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
