// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetActionWorkflowConfigReader is a Reader for the GetActionWorkflowConfig structure.
type GetActionWorkflowConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionWorkflowConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionWorkflowConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetActionWorkflowConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetActionWorkflowConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetActionWorkflowConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetActionWorkflowConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetActionWorkflowConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/action-workflows/configs/{action_workflow_config_id}] GetActionWorkflowConfig", response, response.Code())
	}
}

// NewGetActionWorkflowConfigOK creates a GetActionWorkflowConfigOK with default headers values
func NewGetActionWorkflowConfigOK() *GetActionWorkflowConfigOK {
	return &GetActionWorkflowConfigOK{}
}

/*
GetActionWorkflowConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetActionWorkflowConfigOK struct {
	Payload *models.AppActionWorkflowConfig
}

// IsSuccess returns true when this get action workflow config o k response has a 2xx status code
func (o *GetActionWorkflowConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get action workflow config o k response has a 3xx status code
func (o *GetActionWorkflowConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow config o k response has a 4xx status code
func (o *GetActionWorkflowConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action workflow config o k response has a 5xx status code
func (o *GetActionWorkflowConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow config o k response a status code equal to that given
func (o *GetActionWorkflowConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get action workflow config o k response
func (o *GetActionWorkflowConfigOK) Code() int {
	return 200
}

func (o *GetActionWorkflowConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigOK  %+v", 200, o.Payload)
}

func (o *GetActionWorkflowConfigOK) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigOK  %+v", 200, o.Payload)
}

func (o *GetActionWorkflowConfigOK) GetPayload() *models.AppActionWorkflowConfig {
	return o.Payload
}

func (o *GetActionWorkflowConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppActionWorkflowConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowConfigBadRequest creates a GetActionWorkflowConfigBadRequest with default headers values
func NewGetActionWorkflowConfigBadRequest() *GetActionWorkflowConfigBadRequest {
	return &GetActionWorkflowConfigBadRequest{}
}

/*
GetActionWorkflowConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetActionWorkflowConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow config bad request response has a 2xx status code
func (o *GetActionWorkflowConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow config bad request response has a 3xx status code
func (o *GetActionWorkflowConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow config bad request response has a 4xx status code
func (o *GetActionWorkflowConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow config bad request response has a 5xx status code
func (o *GetActionWorkflowConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow config bad request response a status code equal to that given
func (o *GetActionWorkflowConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get action workflow config bad request response
func (o *GetActionWorkflowConfigBadRequest) Code() int {
	return 400
}

func (o *GetActionWorkflowConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetActionWorkflowConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetActionWorkflowConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowConfigUnauthorized creates a GetActionWorkflowConfigUnauthorized with default headers values
func NewGetActionWorkflowConfigUnauthorized() *GetActionWorkflowConfigUnauthorized {
	return &GetActionWorkflowConfigUnauthorized{}
}

/*
GetActionWorkflowConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetActionWorkflowConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow config unauthorized response has a 2xx status code
func (o *GetActionWorkflowConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow config unauthorized response has a 3xx status code
func (o *GetActionWorkflowConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow config unauthorized response has a 4xx status code
func (o *GetActionWorkflowConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow config unauthorized response has a 5xx status code
func (o *GetActionWorkflowConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow config unauthorized response a status code equal to that given
func (o *GetActionWorkflowConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get action workflow config unauthorized response
func (o *GetActionWorkflowConfigUnauthorized) Code() int {
	return 401
}

func (o *GetActionWorkflowConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionWorkflowConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionWorkflowConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowConfigForbidden creates a GetActionWorkflowConfigForbidden with default headers values
func NewGetActionWorkflowConfigForbidden() *GetActionWorkflowConfigForbidden {
	return &GetActionWorkflowConfigForbidden{}
}

/*
GetActionWorkflowConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetActionWorkflowConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow config forbidden response has a 2xx status code
func (o *GetActionWorkflowConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow config forbidden response has a 3xx status code
func (o *GetActionWorkflowConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow config forbidden response has a 4xx status code
func (o *GetActionWorkflowConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow config forbidden response has a 5xx status code
func (o *GetActionWorkflowConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow config forbidden response a status code equal to that given
func (o *GetActionWorkflowConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get action workflow config forbidden response
func (o *GetActionWorkflowConfigForbidden) Code() int {
	return 403
}

func (o *GetActionWorkflowConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetActionWorkflowConfigForbidden) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetActionWorkflowConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowConfigNotFound creates a GetActionWorkflowConfigNotFound with default headers values
func NewGetActionWorkflowConfigNotFound() *GetActionWorkflowConfigNotFound {
	return &GetActionWorkflowConfigNotFound{}
}

/*
GetActionWorkflowConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetActionWorkflowConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow config not found response has a 2xx status code
func (o *GetActionWorkflowConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow config not found response has a 3xx status code
func (o *GetActionWorkflowConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow config not found response has a 4xx status code
func (o *GetActionWorkflowConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action workflow config not found response has a 5xx status code
func (o *GetActionWorkflowConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get action workflow config not found response a status code equal to that given
func (o *GetActionWorkflowConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get action workflow config not found response
func (o *GetActionWorkflowConfigNotFound) Code() int {
	return 404
}

func (o *GetActionWorkflowConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetActionWorkflowConfigNotFound) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetActionWorkflowConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionWorkflowConfigInternalServerError creates a GetActionWorkflowConfigInternalServerError with default headers values
func NewGetActionWorkflowConfigInternalServerError() *GetActionWorkflowConfigInternalServerError {
	return &GetActionWorkflowConfigInternalServerError{}
}

/*
GetActionWorkflowConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetActionWorkflowConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action workflow config internal server error response has a 2xx status code
func (o *GetActionWorkflowConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action workflow config internal server error response has a 3xx status code
func (o *GetActionWorkflowConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action workflow config internal server error response has a 4xx status code
func (o *GetActionWorkflowConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action workflow config internal server error response has a 5xx status code
func (o *GetActionWorkflowConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get action workflow config internal server error response a status code equal to that given
func (o *GetActionWorkflowConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get action workflow config internal server error response
func (o *GetActionWorkflowConfigInternalServerError) Code() int {
	return 500
}

func (o *GetActionWorkflowConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionWorkflowConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/action-workflows/configs/{action_workflow_config_id}][%d] getActionWorkflowConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionWorkflowConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionWorkflowConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
