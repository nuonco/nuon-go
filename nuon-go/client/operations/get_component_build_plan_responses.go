// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetComponentBuildPlanReader is a Reader for the GetComponentBuildPlan structure.
type GetComponentBuildPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentBuildPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentBuildPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetComponentBuildPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetComponentBuildPlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetComponentBuildPlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentBuildPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetComponentBuildPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/components/{component_id}/builds/{build_id}/plan] GetComponentBuildPlan", response, response.Code())
	}
}

// NewGetComponentBuildPlanOK creates a GetComponentBuildPlanOK with default headers values
func NewGetComponentBuildPlanOK() *GetComponentBuildPlanOK {
	return &GetComponentBuildPlanOK{}
}

/*
GetComponentBuildPlanOK describes a response with status code 200, with default header values.

OK
*/
type GetComponentBuildPlanOK struct {
	Payload *models.Planv1Plan
}

// IsSuccess returns true when this get component build plan o k response has a 2xx status code
func (o *GetComponentBuildPlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component build plan o k response has a 3xx status code
func (o *GetComponentBuildPlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build plan o k response has a 4xx status code
func (o *GetComponentBuildPlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component build plan o k response has a 5xx status code
func (o *GetComponentBuildPlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build plan o k response a status code equal to that given
func (o *GetComponentBuildPlanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component build plan o k response
func (o *GetComponentBuildPlanOK) Code() int {
	return 200
}

func (o *GetComponentBuildPlanOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanOK %s", 200, payload)
}

func (o *GetComponentBuildPlanOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanOK %s", 200, payload)
}

func (o *GetComponentBuildPlanOK) GetPayload() *models.Planv1Plan {
	return o.Payload
}

func (o *GetComponentBuildPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Planv1Plan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildPlanBadRequest creates a GetComponentBuildPlanBadRequest with default headers values
func NewGetComponentBuildPlanBadRequest() *GetComponentBuildPlanBadRequest {
	return &GetComponentBuildPlanBadRequest{}
}

/*
GetComponentBuildPlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetComponentBuildPlanBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build plan bad request response has a 2xx status code
func (o *GetComponentBuildPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build plan bad request response has a 3xx status code
func (o *GetComponentBuildPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build plan bad request response has a 4xx status code
func (o *GetComponentBuildPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build plan bad request response has a 5xx status code
func (o *GetComponentBuildPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build plan bad request response a status code equal to that given
func (o *GetComponentBuildPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get component build plan bad request response
func (o *GetComponentBuildPlanBadRequest) Code() int {
	return 400
}

func (o *GetComponentBuildPlanBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanBadRequest %s", 400, payload)
}

func (o *GetComponentBuildPlanBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanBadRequest %s", 400, payload)
}

func (o *GetComponentBuildPlanBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildPlanUnauthorized creates a GetComponentBuildPlanUnauthorized with default headers values
func NewGetComponentBuildPlanUnauthorized() *GetComponentBuildPlanUnauthorized {
	return &GetComponentBuildPlanUnauthorized{}
}

/*
GetComponentBuildPlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetComponentBuildPlanUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build plan unauthorized response has a 2xx status code
func (o *GetComponentBuildPlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build plan unauthorized response has a 3xx status code
func (o *GetComponentBuildPlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build plan unauthorized response has a 4xx status code
func (o *GetComponentBuildPlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build plan unauthorized response has a 5xx status code
func (o *GetComponentBuildPlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build plan unauthorized response a status code equal to that given
func (o *GetComponentBuildPlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get component build plan unauthorized response
func (o *GetComponentBuildPlanUnauthorized) Code() int {
	return 401
}

func (o *GetComponentBuildPlanUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanUnauthorized %s", 401, payload)
}

func (o *GetComponentBuildPlanUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanUnauthorized %s", 401, payload)
}

func (o *GetComponentBuildPlanUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildPlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildPlanForbidden creates a GetComponentBuildPlanForbidden with default headers values
func NewGetComponentBuildPlanForbidden() *GetComponentBuildPlanForbidden {
	return &GetComponentBuildPlanForbidden{}
}

/*
GetComponentBuildPlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetComponentBuildPlanForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build plan forbidden response has a 2xx status code
func (o *GetComponentBuildPlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build plan forbidden response has a 3xx status code
func (o *GetComponentBuildPlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build plan forbidden response has a 4xx status code
func (o *GetComponentBuildPlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build plan forbidden response has a 5xx status code
func (o *GetComponentBuildPlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build plan forbidden response a status code equal to that given
func (o *GetComponentBuildPlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component build plan forbidden response
func (o *GetComponentBuildPlanForbidden) Code() int {
	return 403
}

func (o *GetComponentBuildPlanForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanForbidden %s", 403, payload)
}

func (o *GetComponentBuildPlanForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanForbidden %s", 403, payload)
}

func (o *GetComponentBuildPlanForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildPlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildPlanNotFound creates a GetComponentBuildPlanNotFound with default headers values
func NewGetComponentBuildPlanNotFound() *GetComponentBuildPlanNotFound {
	return &GetComponentBuildPlanNotFound{}
}

/*
GetComponentBuildPlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetComponentBuildPlanNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build plan not found response has a 2xx status code
func (o *GetComponentBuildPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build plan not found response has a 3xx status code
func (o *GetComponentBuildPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build plan not found response has a 4xx status code
func (o *GetComponentBuildPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component build plan not found response has a 5xx status code
func (o *GetComponentBuildPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component build plan not found response a status code equal to that given
func (o *GetComponentBuildPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component build plan not found response
func (o *GetComponentBuildPlanNotFound) Code() int {
	return 404
}

func (o *GetComponentBuildPlanNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanNotFound %s", 404, payload)
}

func (o *GetComponentBuildPlanNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanNotFound %s", 404, payload)
}

func (o *GetComponentBuildPlanNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentBuildPlanInternalServerError creates a GetComponentBuildPlanInternalServerError with default headers values
func NewGetComponentBuildPlanInternalServerError() *GetComponentBuildPlanInternalServerError {
	return &GetComponentBuildPlanInternalServerError{}
}

/*
GetComponentBuildPlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetComponentBuildPlanInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component build plan internal server error response has a 2xx status code
func (o *GetComponentBuildPlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component build plan internal server error response has a 3xx status code
func (o *GetComponentBuildPlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component build plan internal server error response has a 4xx status code
func (o *GetComponentBuildPlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component build plan internal server error response has a 5xx status code
func (o *GetComponentBuildPlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get component build plan internal server error response a status code equal to that given
func (o *GetComponentBuildPlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get component build plan internal server error response
func (o *GetComponentBuildPlanInternalServerError) Code() int {
	return 500
}

func (o *GetComponentBuildPlanInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanInternalServerError %s", 500, payload)
}

func (o *GetComponentBuildPlanInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getComponentBuildPlanInternalServerError %s", 500, payload)
}

func (o *GetComponentBuildPlanInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentBuildPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
