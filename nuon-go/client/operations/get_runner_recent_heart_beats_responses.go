// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetRunnerRecentHeartBeatsReader is a Reader for the GetRunnerRecentHeartBeats structure.
type GetRunnerRecentHeartBeatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerRecentHeartBeatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerRecentHeartBeatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerRecentHeartBeatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerRecentHeartBeatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerRecentHeartBeatsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerRecentHeartBeatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerRecentHeartBeatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/runners/{runner_id}/recent-heart-beats] GetRunnerRecentHeartBeats", response, response.Code())
	}
}

// NewGetRunnerRecentHeartBeatsOK creates a GetRunnerRecentHeartBeatsOK with default headers values
func NewGetRunnerRecentHeartBeatsOK() *GetRunnerRecentHeartBeatsOK {
	return &GetRunnerRecentHeartBeatsOK{}
}

/*
GetRunnerRecentHeartBeatsOK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerRecentHeartBeatsOK struct {
	Payload []*models.ServiceRunnerRecentHeartBeatResponse
}

// IsSuccess returns true when this get runner recent heart beats o k response has a 2xx status code
func (o *GetRunnerRecentHeartBeatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner recent heart beats o k response has a 3xx status code
func (o *GetRunnerRecentHeartBeatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent heart beats o k response has a 4xx status code
func (o *GetRunnerRecentHeartBeatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner recent heart beats o k response has a 5xx status code
func (o *GetRunnerRecentHeartBeatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent heart beats o k response a status code equal to that given
func (o *GetRunnerRecentHeartBeatsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner recent heart beats o k response
func (o *GetRunnerRecentHeartBeatsOK) Code() int {
	return 200
}

func (o *GetRunnerRecentHeartBeatsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsOK %s", 200, payload)
}

func (o *GetRunnerRecentHeartBeatsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsOK %s", 200, payload)
}

func (o *GetRunnerRecentHeartBeatsOK) GetPayload() []*models.ServiceRunnerRecentHeartBeatResponse {
	return o.Payload
}

func (o *GetRunnerRecentHeartBeatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHeartBeatsBadRequest creates a GetRunnerRecentHeartBeatsBadRequest with default headers values
func NewGetRunnerRecentHeartBeatsBadRequest() *GetRunnerRecentHeartBeatsBadRequest {
	return &GetRunnerRecentHeartBeatsBadRequest{}
}

/*
GetRunnerRecentHeartBeatsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerRecentHeartBeatsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent heart beats bad request response has a 2xx status code
func (o *GetRunnerRecentHeartBeatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent heart beats bad request response has a 3xx status code
func (o *GetRunnerRecentHeartBeatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent heart beats bad request response has a 4xx status code
func (o *GetRunnerRecentHeartBeatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent heart beats bad request response has a 5xx status code
func (o *GetRunnerRecentHeartBeatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent heart beats bad request response a status code equal to that given
func (o *GetRunnerRecentHeartBeatsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner recent heart beats bad request response
func (o *GetRunnerRecentHeartBeatsBadRequest) Code() int {
	return 400
}

func (o *GetRunnerRecentHeartBeatsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsBadRequest %s", 400, payload)
}

func (o *GetRunnerRecentHeartBeatsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsBadRequest %s", 400, payload)
}

func (o *GetRunnerRecentHeartBeatsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHeartBeatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHeartBeatsUnauthorized creates a GetRunnerRecentHeartBeatsUnauthorized with default headers values
func NewGetRunnerRecentHeartBeatsUnauthorized() *GetRunnerRecentHeartBeatsUnauthorized {
	return &GetRunnerRecentHeartBeatsUnauthorized{}
}

/*
GetRunnerRecentHeartBeatsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerRecentHeartBeatsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent heart beats unauthorized response has a 2xx status code
func (o *GetRunnerRecentHeartBeatsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent heart beats unauthorized response has a 3xx status code
func (o *GetRunnerRecentHeartBeatsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent heart beats unauthorized response has a 4xx status code
func (o *GetRunnerRecentHeartBeatsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent heart beats unauthorized response has a 5xx status code
func (o *GetRunnerRecentHeartBeatsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent heart beats unauthorized response a status code equal to that given
func (o *GetRunnerRecentHeartBeatsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner recent heart beats unauthorized response
func (o *GetRunnerRecentHeartBeatsUnauthorized) Code() int {
	return 401
}

func (o *GetRunnerRecentHeartBeatsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsUnauthorized %s", 401, payload)
}

func (o *GetRunnerRecentHeartBeatsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsUnauthorized %s", 401, payload)
}

func (o *GetRunnerRecentHeartBeatsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHeartBeatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHeartBeatsForbidden creates a GetRunnerRecentHeartBeatsForbidden with default headers values
func NewGetRunnerRecentHeartBeatsForbidden() *GetRunnerRecentHeartBeatsForbidden {
	return &GetRunnerRecentHeartBeatsForbidden{}
}

/*
GetRunnerRecentHeartBeatsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerRecentHeartBeatsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent heart beats forbidden response has a 2xx status code
func (o *GetRunnerRecentHeartBeatsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent heart beats forbidden response has a 3xx status code
func (o *GetRunnerRecentHeartBeatsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent heart beats forbidden response has a 4xx status code
func (o *GetRunnerRecentHeartBeatsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent heart beats forbidden response has a 5xx status code
func (o *GetRunnerRecentHeartBeatsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent heart beats forbidden response a status code equal to that given
func (o *GetRunnerRecentHeartBeatsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner recent heart beats forbidden response
func (o *GetRunnerRecentHeartBeatsForbidden) Code() int {
	return 403
}

func (o *GetRunnerRecentHeartBeatsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsForbidden %s", 403, payload)
}

func (o *GetRunnerRecentHeartBeatsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsForbidden %s", 403, payload)
}

func (o *GetRunnerRecentHeartBeatsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHeartBeatsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHeartBeatsNotFound creates a GetRunnerRecentHeartBeatsNotFound with default headers values
func NewGetRunnerRecentHeartBeatsNotFound() *GetRunnerRecentHeartBeatsNotFound {
	return &GetRunnerRecentHeartBeatsNotFound{}
}

/*
GetRunnerRecentHeartBeatsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerRecentHeartBeatsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent heart beats not found response has a 2xx status code
func (o *GetRunnerRecentHeartBeatsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent heart beats not found response has a 3xx status code
func (o *GetRunnerRecentHeartBeatsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent heart beats not found response has a 4xx status code
func (o *GetRunnerRecentHeartBeatsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent heart beats not found response has a 5xx status code
func (o *GetRunnerRecentHeartBeatsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent heart beats not found response a status code equal to that given
func (o *GetRunnerRecentHeartBeatsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner recent heart beats not found response
func (o *GetRunnerRecentHeartBeatsNotFound) Code() int {
	return 404
}

func (o *GetRunnerRecentHeartBeatsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsNotFound %s", 404, payload)
}

func (o *GetRunnerRecentHeartBeatsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsNotFound %s", 404, payload)
}

func (o *GetRunnerRecentHeartBeatsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHeartBeatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHeartBeatsInternalServerError creates a GetRunnerRecentHeartBeatsInternalServerError with default headers values
func NewGetRunnerRecentHeartBeatsInternalServerError() *GetRunnerRecentHeartBeatsInternalServerError {
	return &GetRunnerRecentHeartBeatsInternalServerError{}
}

/*
GetRunnerRecentHeartBeatsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerRecentHeartBeatsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent heart beats internal server error response has a 2xx status code
func (o *GetRunnerRecentHeartBeatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent heart beats internal server error response has a 3xx status code
func (o *GetRunnerRecentHeartBeatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent heart beats internal server error response has a 4xx status code
func (o *GetRunnerRecentHeartBeatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner recent heart beats internal server error response has a 5xx status code
func (o *GetRunnerRecentHeartBeatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner recent heart beats internal server error response a status code equal to that given
func (o *GetRunnerRecentHeartBeatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner recent heart beats internal server error response
func (o *GetRunnerRecentHeartBeatsInternalServerError) Code() int {
	return 500
}

func (o *GetRunnerRecentHeartBeatsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsInternalServerError %s", 500, payload)
}

func (o *GetRunnerRecentHeartBeatsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-heart-beats][%d] getRunnerRecentHeartBeatsInternalServerError %s", 500, payload)
}

func (o *GetRunnerRecentHeartBeatsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHeartBeatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
