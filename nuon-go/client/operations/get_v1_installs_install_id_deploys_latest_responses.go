// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallsInstallIDDeploysLatestReader is a Reader for the GetV1InstallsInstallIDDeploysLatest structure.
type GetV1InstallsInstallIDDeploysLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallsInstallIDDeploysLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallsInstallIDDeploysLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallsInstallIDDeploysLatestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallsInstallIDDeploysLatestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallsInstallIDDeploysLatestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallsInstallIDDeploysLatestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallsInstallIDDeploysLatestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/deploys/latest] GetV1InstallsInstallIDDeploysLatest", response, response.Code())
	}
}

// NewGetV1InstallsInstallIDDeploysLatestOK creates a GetV1InstallsInstallIDDeploysLatestOK with default headers values
func NewGetV1InstallsInstallIDDeploysLatestOK() *GetV1InstallsInstallIDDeploysLatestOK {
	return &GetV1InstallsInstallIDDeploysLatestOK{}
}

/*
GetV1InstallsInstallIDDeploysLatestOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallsInstallIDDeploysLatestOK struct {
	Payload *models.AppInstallDeploy
}

// IsSuccess returns true when this get v1 installs install Id deploys latest o k response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysLatestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installs install Id deploys latest o k response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysLatestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys latest o k response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysLatestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id deploys latest o k response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysLatestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys latest o k response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysLatestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installs install Id deploys latest o k response
func (o *GetV1InstallsInstallIDDeploysLatestOK) Code() int {
	return 200
}

func (o *GetV1InstallsInstallIDDeploysLatestOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestOK) GetPayload() *models.AppInstallDeploy {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallDeploy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysLatestBadRequest creates a GetV1InstallsInstallIDDeploysLatestBadRequest with default headers values
func NewGetV1InstallsInstallIDDeploysLatestBadRequest() *GetV1InstallsInstallIDDeploysLatestBadRequest {
	return &GetV1InstallsInstallIDDeploysLatestBadRequest{}
}

/*
GetV1InstallsInstallIDDeploysLatestBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallsInstallIDDeploysLatestBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys latest bad request response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys latest bad request response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys latest bad request response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys latest bad request response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys latest bad request response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installs install Id deploys latest bad request response
func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysLatestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysLatestUnauthorized creates a GetV1InstallsInstallIDDeploysLatestUnauthorized with default headers values
func NewGetV1InstallsInstallIDDeploysLatestUnauthorized() *GetV1InstallsInstallIDDeploysLatestUnauthorized {
	return &GetV1InstallsInstallIDDeploysLatestUnauthorized{}
}

/*
GetV1InstallsInstallIDDeploysLatestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallsInstallIDDeploysLatestUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys latest unauthorized response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys latest unauthorized response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys latest unauthorized response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys latest unauthorized response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys latest unauthorized response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installs install Id deploys latest unauthorized response
func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysLatestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysLatestForbidden creates a GetV1InstallsInstallIDDeploysLatestForbidden with default headers values
func NewGetV1InstallsInstallIDDeploysLatestForbidden() *GetV1InstallsInstallIDDeploysLatestForbidden {
	return &GetV1InstallsInstallIDDeploysLatestForbidden{}
}

/*
GetV1InstallsInstallIDDeploysLatestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallsInstallIDDeploysLatestForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys latest forbidden response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysLatestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys latest forbidden response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysLatestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys latest forbidden response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysLatestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys latest forbidden response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysLatestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys latest forbidden response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysLatestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installs install Id deploys latest forbidden response
func (o *GetV1InstallsInstallIDDeploysLatestForbidden) Code() int {
	return 403
}

func (o *GetV1InstallsInstallIDDeploysLatestForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysLatestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysLatestNotFound creates a GetV1InstallsInstallIDDeploysLatestNotFound with default headers values
func NewGetV1InstallsInstallIDDeploysLatestNotFound() *GetV1InstallsInstallIDDeploysLatestNotFound {
	return &GetV1InstallsInstallIDDeploysLatestNotFound{}
}

/*
GetV1InstallsInstallIDDeploysLatestNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallsInstallIDDeploysLatestNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys latest not found response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysLatestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys latest not found response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysLatestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys latest not found response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysLatestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys latest not found response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysLatestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys latest not found response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysLatestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installs install Id deploys latest not found response
func (o *GetV1InstallsInstallIDDeploysLatestNotFound) Code() int {
	return 404
}

func (o *GetV1InstallsInstallIDDeploysLatestNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysLatestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysLatestInternalServerError creates a GetV1InstallsInstallIDDeploysLatestInternalServerError with default headers values
func NewGetV1InstallsInstallIDDeploysLatestInternalServerError() *GetV1InstallsInstallIDDeploysLatestInternalServerError {
	return &GetV1InstallsInstallIDDeploysLatestInternalServerError{}
}

/*
GetV1InstallsInstallIDDeploysLatestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallsInstallIDDeploysLatestInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys latest internal server error response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys latest internal server error response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys latest internal server error response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id deploys latest internal server error response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installs install Id deploys latest internal server error response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installs install Id deploys latest internal server error response
func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/latest][%d] getV1InstallsInstallIdDeploysLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysLatestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
