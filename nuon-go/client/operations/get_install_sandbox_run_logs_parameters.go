// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetInstallSandboxRunLogsParams creates a new GetInstallSandboxRunLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInstallSandboxRunLogsParams() *GetInstallSandboxRunLogsParams {
	return &GetInstallSandboxRunLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInstallSandboxRunLogsParamsWithTimeout creates a new GetInstallSandboxRunLogsParams object
// with the ability to set a timeout on a request.
func NewGetInstallSandboxRunLogsParamsWithTimeout(timeout time.Duration) *GetInstallSandboxRunLogsParams {
	return &GetInstallSandboxRunLogsParams{
		timeout: timeout,
	}
}

// NewGetInstallSandboxRunLogsParamsWithContext creates a new GetInstallSandboxRunLogsParams object
// with the ability to set a context for a request.
func NewGetInstallSandboxRunLogsParamsWithContext(ctx context.Context) *GetInstallSandboxRunLogsParams {
	return &GetInstallSandboxRunLogsParams{
		Context: ctx,
	}
}

// NewGetInstallSandboxRunLogsParamsWithHTTPClient creates a new GetInstallSandboxRunLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInstallSandboxRunLogsParamsWithHTTPClient(client *http.Client) *GetInstallSandboxRunLogsParams {
	return &GetInstallSandboxRunLogsParams{
		HTTPClient: client,
	}
}

/*
GetInstallSandboxRunLogsParams contains all the parameters to send to the API endpoint

	for the get install sandbox run logs operation.

	Typically these are written to a http.Request.
*/
type GetInstallSandboxRunLogsParams struct {

	/* InstallID.

	   install ID
	*/
	InstallID string

	/* RunID.

	   run ID
	*/
	RunID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get install sandbox run logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInstallSandboxRunLogsParams) WithDefaults() *GetInstallSandboxRunLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get install sandbox run logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInstallSandboxRunLogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) WithTimeout(timeout time.Duration) *GetInstallSandboxRunLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) WithContext(ctx context.Context) *GetInstallSandboxRunLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) WithHTTPClient(client *http.Client) *GetInstallSandboxRunLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInstallID adds the installID to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) WithInstallID(installID string) *GetInstallSandboxRunLogsParams {
	o.SetInstallID(installID)
	return o
}

// SetInstallID adds the installId to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) SetInstallID(installID string) {
	o.InstallID = installID
}

// WithRunID adds the runID to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) WithRunID(runID string) *GetInstallSandboxRunLogsParams {
	o.SetRunID(runID)
	return o
}

// SetRunID adds the runId to the get install sandbox run logs params
func (o *GetInstallSandboxRunLogsParams) SetRunID(runID string) {
	o.RunID = runID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInstallSandboxRunLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param install_id
	if err := r.SetPathParam("install_id", o.InstallID); err != nil {
		return err
	}

	// path param run_id
	if err := r.SetPathParam("run_id", o.RunID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
