// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetOrgVCSConnectionsReader is a Reader for the GetOrgVCSConnections structure.
type GetOrgVCSConnectionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgVCSConnectionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgVCSConnectionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgVCSConnectionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgVCSConnectionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgVCSConnectionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgVCSConnectionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgVCSConnectionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/vcs/connections] GetOrgVCSConnections", response, response.Code())
	}
}

// NewGetOrgVCSConnectionsOK creates a GetOrgVCSConnectionsOK with default headers values
func NewGetOrgVCSConnectionsOK() *GetOrgVCSConnectionsOK {
	return &GetOrgVCSConnectionsOK{}
}

/*
GetOrgVCSConnectionsOK describes a response with status code 200, with default header values.

OK
*/
type GetOrgVCSConnectionsOK struct {
	Payload []*models.AppVCSConnection
}

// IsSuccess returns true when this get org v c s connections o k response has a 2xx status code
func (o *GetOrgVCSConnectionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get org v c s connections o k response has a 3xx status code
func (o *GetOrgVCSConnectionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org v c s connections o k response has a 4xx status code
func (o *GetOrgVCSConnectionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org v c s connections o k response has a 5xx status code
func (o *GetOrgVCSConnectionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get org v c s connections o k response a status code equal to that given
func (o *GetOrgVCSConnectionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get org v c s connections o k response
func (o *GetOrgVCSConnectionsOK) Code() int {
	return 200
}

func (o *GetOrgVCSConnectionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsOK  %+v", 200, o.Payload)
}

func (o *GetOrgVCSConnectionsOK) String() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsOK  %+v", 200, o.Payload)
}

func (o *GetOrgVCSConnectionsOK) GetPayload() []*models.AppVCSConnection {
	return o.Payload
}

func (o *GetOrgVCSConnectionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgVCSConnectionsBadRequest creates a GetOrgVCSConnectionsBadRequest with default headers values
func NewGetOrgVCSConnectionsBadRequest() *GetOrgVCSConnectionsBadRequest {
	return &GetOrgVCSConnectionsBadRequest{}
}

/*
GetOrgVCSConnectionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOrgVCSConnectionsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org v c s connections bad request response has a 2xx status code
func (o *GetOrgVCSConnectionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org v c s connections bad request response has a 3xx status code
func (o *GetOrgVCSConnectionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org v c s connections bad request response has a 4xx status code
func (o *GetOrgVCSConnectionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org v c s connections bad request response has a 5xx status code
func (o *GetOrgVCSConnectionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get org v c s connections bad request response a status code equal to that given
func (o *GetOrgVCSConnectionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get org v c s connections bad request response
func (o *GetOrgVCSConnectionsBadRequest) Code() int {
	return 400
}

func (o *GetOrgVCSConnectionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgVCSConnectionsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgVCSConnectionsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgVCSConnectionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgVCSConnectionsUnauthorized creates a GetOrgVCSConnectionsUnauthorized with default headers values
func NewGetOrgVCSConnectionsUnauthorized() *GetOrgVCSConnectionsUnauthorized {
	return &GetOrgVCSConnectionsUnauthorized{}
}

/*
GetOrgVCSConnectionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrgVCSConnectionsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org v c s connections unauthorized response has a 2xx status code
func (o *GetOrgVCSConnectionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org v c s connections unauthorized response has a 3xx status code
func (o *GetOrgVCSConnectionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org v c s connections unauthorized response has a 4xx status code
func (o *GetOrgVCSConnectionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org v c s connections unauthorized response has a 5xx status code
func (o *GetOrgVCSConnectionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get org v c s connections unauthorized response a status code equal to that given
func (o *GetOrgVCSConnectionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get org v c s connections unauthorized response
func (o *GetOrgVCSConnectionsUnauthorized) Code() int {
	return 401
}

func (o *GetOrgVCSConnectionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgVCSConnectionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOrgVCSConnectionsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgVCSConnectionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgVCSConnectionsForbidden creates a GetOrgVCSConnectionsForbidden with default headers values
func NewGetOrgVCSConnectionsForbidden() *GetOrgVCSConnectionsForbidden {
	return &GetOrgVCSConnectionsForbidden{}
}

/*
GetOrgVCSConnectionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrgVCSConnectionsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org v c s connections forbidden response has a 2xx status code
func (o *GetOrgVCSConnectionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org v c s connections forbidden response has a 3xx status code
func (o *GetOrgVCSConnectionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org v c s connections forbidden response has a 4xx status code
func (o *GetOrgVCSConnectionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org v c s connections forbidden response has a 5xx status code
func (o *GetOrgVCSConnectionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get org v c s connections forbidden response a status code equal to that given
func (o *GetOrgVCSConnectionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get org v c s connections forbidden response
func (o *GetOrgVCSConnectionsForbidden) Code() int {
	return 403
}

func (o *GetOrgVCSConnectionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgVCSConnectionsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgVCSConnectionsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgVCSConnectionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgVCSConnectionsNotFound creates a GetOrgVCSConnectionsNotFound with default headers values
func NewGetOrgVCSConnectionsNotFound() *GetOrgVCSConnectionsNotFound {
	return &GetOrgVCSConnectionsNotFound{}
}

/*
GetOrgVCSConnectionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrgVCSConnectionsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org v c s connections not found response has a 2xx status code
func (o *GetOrgVCSConnectionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org v c s connections not found response has a 3xx status code
func (o *GetOrgVCSConnectionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org v c s connections not found response has a 4xx status code
func (o *GetOrgVCSConnectionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org v c s connections not found response has a 5xx status code
func (o *GetOrgVCSConnectionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get org v c s connections not found response a status code equal to that given
func (o *GetOrgVCSConnectionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get org v c s connections not found response
func (o *GetOrgVCSConnectionsNotFound) Code() int {
	return 404
}

func (o *GetOrgVCSConnectionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgVCSConnectionsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgVCSConnectionsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgVCSConnectionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgVCSConnectionsInternalServerError creates a GetOrgVCSConnectionsInternalServerError with default headers values
func NewGetOrgVCSConnectionsInternalServerError() *GetOrgVCSConnectionsInternalServerError {
	return &GetOrgVCSConnectionsInternalServerError{}
}

/*
GetOrgVCSConnectionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrgVCSConnectionsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org v c s connections internal server error response has a 2xx status code
func (o *GetOrgVCSConnectionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org v c s connections internal server error response has a 3xx status code
func (o *GetOrgVCSConnectionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org v c s connections internal server error response has a 4xx status code
func (o *GetOrgVCSConnectionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org v c s connections internal server error response has a 5xx status code
func (o *GetOrgVCSConnectionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get org v c s connections internal server error response a status code equal to that given
func (o *GetOrgVCSConnectionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get org v c s connections internal server error response
func (o *GetOrgVCSConnectionsInternalServerError) Code() int {
	return 500
}

func (o *GetOrgVCSConnectionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgVCSConnectionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vcs/connections][%d] getOrgVCSConnectionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgVCSConnectionsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgVCSConnectionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
