// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallsInstallIDDeploysReader is a Reader for the GetV1InstallsInstallIDDeploys structure.
type GetV1InstallsInstallIDDeploysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallsInstallIDDeploysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallsInstallIDDeploysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallsInstallIDDeploysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallsInstallIDDeploysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallsInstallIDDeploysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallsInstallIDDeploysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallsInstallIDDeploysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/deploys] GetV1InstallsInstallIDDeploys", response, response.Code())
	}
}

// NewGetV1InstallsInstallIDDeploysOK creates a GetV1InstallsInstallIDDeploysOK with default headers values
func NewGetV1InstallsInstallIDDeploysOK() *GetV1InstallsInstallIDDeploysOK {
	return &GetV1InstallsInstallIDDeploysOK{}
}

/*
GetV1InstallsInstallIDDeploysOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallsInstallIDDeploysOK struct {
	Payload []*models.AppInstallDeploy
}

// IsSuccess returns true when this get v1 installs install Id deploys o k response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installs install Id deploys o k response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys o k response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id deploys o k response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys o k response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installs install Id deploys o k response
func (o *GetV1InstallsInstallIDDeploysOK) Code() int {
	return 200
}

func (o *GetV1InstallsInstallIDDeploysOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysOK) GetPayload() []*models.AppInstallDeploy {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysBadRequest creates a GetV1InstallsInstallIDDeploysBadRequest with default headers values
func NewGetV1InstallsInstallIDDeploysBadRequest() *GetV1InstallsInstallIDDeploysBadRequest {
	return &GetV1InstallsInstallIDDeploysBadRequest{}
}

/*
GetV1InstallsInstallIDDeploysBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallsInstallIDDeploysBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys bad request response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys bad request response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys bad request response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys bad request response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys bad request response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installs install Id deploys bad request response
func (o *GetV1InstallsInstallIDDeploysBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallsInstallIDDeploysBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysUnauthorized creates a GetV1InstallsInstallIDDeploysUnauthorized with default headers values
func NewGetV1InstallsInstallIDDeploysUnauthorized() *GetV1InstallsInstallIDDeploysUnauthorized {
	return &GetV1InstallsInstallIDDeploysUnauthorized{}
}

/*
GetV1InstallsInstallIDDeploysUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallsInstallIDDeploysUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys unauthorized response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys unauthorized response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys unauthorized response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys unauthorized response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys unauthorized response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installs install Id deploys unauthorized response
func (o *GetV1InstallsInstallIDDeploysUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallsInstallIDDeploysUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysForbidden creates a GetV1InstallsInstallIDDeploysForbidden with default headers values
func NewGetV1InstallsInstallIDDeploysForbidden() *GetV1InstallsInstallIDDeploysForbidden {
	return &GetV1InstallsInstallIDDeploysForbidden{}
}

/*
GetV1InstallsInstallIDDeploysForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallsInstallIDDeploysForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys forbidden response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys forbidden response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys forbidden response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys forbidden response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys forbidden response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installs install Id deploys forbidden response
func (o *GetV1InstallsInstallIDDeploysForbidden) Code() int {
	return 403
}

func (o *GetV1InstallsInstallIDDeploysForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysNotFound creates a GetV1InstallsInstallIDDeploysNotFound with default headers values
func NewGetV1InstallsInstallIDDeploysNotFound() *GetV1InstallsInstallIDDeploysNotFound {
	return &GetV1InstallsInstallIDDeploysNotFound{}
}

/*
GetV1InstallsInstallIDDeploysNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallsInstallIDDeploysNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys not found response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys not found response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys not found response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys not found response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys not found response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installs install Id deploys not found response
func (o *GetV1InstallsInstallIDDeploysNotFound) Code() int {
	return 404
}

func (o *GetV1InstallsInstallIDDeploysNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysInternalServerError creates a GetV1InstallsInstallIDDeploysInternalServerError with default headers values
func NewGetV1InstallsInstallIDDeploysInternalServerError() *GetV1InstallsInstallIDDeploysInternalServerError {
	return &GetV1InstallsInstallIDDeploysInternalServerError{}
}

/*
GetV1InstallsInstallIDDeploysInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallsInstallIDDeploysInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys internal server error response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys internal server error response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys internal server error response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id deploys internal server error response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installs install Id deploys internal server error response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installs install Id deploys internal server error response
func (o *GetV1InstallsInstallIDDeploysInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallsInstallIDDeploysInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys][%d] getV1InstallsInstallIdDeploysInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
