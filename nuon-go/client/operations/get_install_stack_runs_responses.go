// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallStackRunsReader is a Reader for the GetInstallStackRuns structure.
type GetInstallStackRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallStackRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallStackRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallStackRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallStackRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallStackRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallStackRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallStackRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/stack-runs] GetInstallStackRuns", response, response.Code())
	}
}

// NewGetInstallStackRunsOK creates a GetInstallStackRunsOK with default headers values
func NewGetInstallStackRunsOK() *GetInstallStackRunsOK {
	return &GetInstallStackRunsOK{}
}

/*
GetInstallStackRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallStackRunsOK struct {
	Payload *models.AppInstallStackVersionRun
}

// IsSuccess returns true when this get install stack runs o k response has a 2xx status code
func (o *GetInstallStackRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install stack runs o k response has a 3xx status code
func (o *GetInstallStackRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack runs o k response has a 4xx status code
func (o *GetInstallStackRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install stack runs o k response has a 5xx status code
func (o *GetInstallStackRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack runs o k response a status code equal to that given
func (o *GetInstallStackRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install stack runs o k response
func (o *GetInstallStackRunsOK) Code() int {
	return 200
}

func (o *GetInstallStackRunsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallStackRunsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallStackRunsOK) GetPayload() *models.AppInstallStackVersionRun {
	return o.Payload
}

func (o *GetInstallStackRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallStackVersionRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackRunsBadRequest creates a GetInstallStackRunsBadRequest with default headers values
func NewGetInstallStackRunsBadRequest() *GetInstallStackRunsBadRequest {
	return &GetInstallStackRunsBadRequest{}
}

/*
GetInstallStackRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallStackRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack runs bad request response has a 2xx status code
func (o *GetInstallStackRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack runs bad request response has a 3xx status code
func (o *GetInstallStackRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack runs bad request response has a 4xx status code
func (o *GetInstallStackRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack runs bad request response has a 5xx status code
func (o *GetInstallStackRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack runs bad request response a status code equal to that given
func (o *GetInstallStackRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install stack runs bad request response
func (o *GetInstallStackRunsBadRequest) Code() int {
	return 400
}

func (o *GetInstallStackRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallStackRunsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallStackRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackRunsUnauthorized creates a GetInstallStackRunsUnauthorized with default headers values
func NewGetInstallStackRunsUnauthorized() *GetInstallStackRunsUnauthorized {
	return &GetInstallStackRunsUnauthorized{}
}

/*
GetInstallStackRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallStackRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack runs unauthorized response has a 2xx status code
func (o *GetInstallStackRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack runs unauthorized response has a 3xx status code
func (o *GetInstallStackRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack runs unauthorized response has a 4xx status code
func (o *GetInstallStackRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack runs unauthorized response has a 5xx status code
func (o *GetInstallStackRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack runs unauthorized response a status code equal to that given
func (o *GetInstallStackRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install stack runs unauthorized response
func (o *GetInstallStackRunsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallStackRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallStackRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallStackRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackRunsForbidden creates a GetInstallStackRunsForbidden with default headers values
func NewGetInstallStackRunsForbidden() *GetInstallStackRunsForbidden {
	return &GetInstallStackRunsForbidden{}
}

/*
GetInstallStackRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallStackRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack runs forbidden response has a 2xx status code
func (o *GetInstallStackRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack runs forbidden response has a 3xx status code
func (o *GetInstallStackRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack runs forbidden response has a 4xx status code
func (o *GetInstallStackRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack runs forbidden response has a 5xx status code
func (o *GetInstallStackRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack runs forbidden response a status code equal to that given
func (o *GetInstallStackRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install stack runs forbidden response
func (o *GetInstallStackRunsForbidden) Code() int {
	return 403
}

func (o *GetInstallStackRunsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallStackRunsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallStackRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackRunsNotFound creates a GetInstallStackRunsNotFound with default headers values
func NewGetInstallStackRunsNotFound() *GetInstallStackRunsNotFound {
	return &GetInstallStackRunsNotFound{}
}

/*
GetInstallStackRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallStackRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack runs not found response has a 2xx status code
func (o *GetInstallStackRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack runs not found response has a 3xx status code
func (o *GetInstallStackRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack runs not found response has a 4xx status code
func (o *GetInstallStackRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack runs not found response has a 5xx status code
func (o *GetInstallStackRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack runs not found response a status code equal to that given
func (o *GetInstallStackRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install stack runs not found response
func (o *GetInstallStackRunsNotFound) Code() int {
	return 404
}

func (o *GetInstallStackRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallStackRunsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallStackRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackRunsInternalServerError creates a GetInstallStackRunsInternalServerError with default headers values
func NewGetInstallStackRunsInternalServerError() *GetInstallStackRunsInternalServerError {
	return &GetInstallStackRunsInternalServerError{}
}

/*
GetInstallStackRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallStackRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack runs internal server error response has a 2xx status code
func (o *GetInstallStackRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack runs internal server error response has a 3xx status code
func (o *GetInstallStackRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack runs internal server error response has a 4xx status code
func (o *GetInstallStackRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install stack runs internal server error response has a 5xx status code
func (o *GetInstallStackRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install stack runs internal server error response a status code equal to that given
func (o *GetInstallStackRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install stack runs internal server error response
func (o *GetInstallStackRunsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallStackRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallStackRunsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack-runs][%d] getInstallStackRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallStackRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
