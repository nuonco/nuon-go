// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1AppsAppIDComponentsReader is a Reader for the GetV1AppsAppIDComponents structure.
type GetV1AppsAppIDComponentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1AppsAppIDComponentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1AppsAppIDComponentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1AppsAppIDComponentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1AppsAppIDComponentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1AppsAppIDComponentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1AppsAppIDComponentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1AppsAppIDComponentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/components] GetV1AppsAppIDComponents", response, response.Code())
	}
}

// NewGetV1AppsAppIDComponentsOK creates a GetV1AppsAppIDComponentsOK with default headers values
func NewGetV1AppsAppIDComponentsOK() *GetV1AppsAppIDComponentsOK {
	return &GetV1AppsAppIDComponentsOK{}
}

/*
GetV1AppsAppIDComponentsOK describes a response with status code 200, with default header values.

OK
*/
type GetV1AppsAppIDComponentsOK struct {
	Payload []*models.AppComponent
}

// IsSuccess returns true when this get v1 apps app Id components o k response has a 2xx status code
func (o *GetV1AppsAppIDComponentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 apps app Id components o k response has a 3xx status code
func (o *GetV1AppsAppIDComponentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id components o k response has a 4xx status code
func (o *GetV1AppsAppIDComponentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 apps app Id components o k response has a 5xx status code
func (o *GetV1AppsAppIDComponentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id components o k response a status code equal to that given
func (o *GetV1AppsAppIDComponentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 apps app Id components o k response
func (o *GetV1AppsAppIDComponentsOK) Code() int {
	return 200
}

func (o *GetV1AppsAppIDComponentsOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsOK  %+v", 200, o.Payload)
}

func (o *GetV1AppsAppIDComponentsOK) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsOK  %+v", 200, o.Payload)
}

func (o *GetV1AppsAppIDComponentsOK) GetPayload() []*models.AppComponent {
	return o.Payload
}

func (o *GetV1AppsAppIDComponentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDComponentsBadRequest creates a GetV1AppsAppIDComponentsBadRequest with default headers values
func NewGetV1AppsAppIDComponentsBadRequest() *GetV1AppsAppIDComponentsBadRequest {
	return &GetV1AppsAppIDComponentsBadRequest{}
}

/*
GetV1AppsAppIDComponentsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1AppsAppIDComponentsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id components bad request response has a 2xx status code
func (o *GetV1AppsAppIDComponentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id components bad request response has a 3xx status code
func (o *GetV1AppsAppIDComponentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id components bad request response has a 4xx status code
func (o *GetV1AppsAppIDComponentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id components bad request response has a 5xx status code
func (o *GetV1AppsAppIDComponentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id components bad request response a status code equal to that given
func (o *GetV1AppsAppIDComponentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 apps app Id components bad request response
func (o *GetV1AppsAppIDComponentsBadRequest) Code() int {
	return 400
}

func (o *GetV1AppsAppIDComponentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1AppsAppIDComponentsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1AppsAppIDComponentsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDComponentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDComponentsUnauthorized creates a GetV1AppsAppIDComponentsUnauthorized with default headers values
func NewGetV1AppsAppIDComponentsUnauthorized() *GetV1AppsAppIDComponentsUnauthorized {
	return &GetV1AppsAppIDComponentsUnauthorized{}
}

/*
GetV1AppsAppIDComponentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1AppsAppIDComponentsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id components unauthorized response has a 2xx status code
func (o *GetV1AppsAppIDComponentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id components unauthorized response has a 3xx status code
func (o *GetV1AppsAppIDComponentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id components unauthorized response has a 4xx status code
func (o *GetV1AppsAppIDComponentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id components unauthorized response has a 5xx status code
func (o *GetV1AppsAppIDComponentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id components unauthorized response a status code equal to that given
func (o *GetV1AppsAppIDComponentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 apps app Id components unauthorized response
func (o *GetV1AppsAppIDComponentsUnauthorized) Code() int {
	return 401
}

func (o *GetV1AppsAppIDComponentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1AppsAppIDComponentsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1AppsAppIDComponentsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDComponentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDComponentsForbidden creates a GetV1AppsAppIDComponentsForbidden with default headers values
func NewGetV1AppsAppIDComponentsForbidden() *GetV1AppsAppIDComponentsForbidden {
	return &GetV1AppsAppIDComponentsForbidden{}
}

/*
GetV1AppsAppIDComponentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1AppsAppIDComponentsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id components forbidden response has a 2xx status code
func (o *GetV1AppsAppIDComponentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id components forbidden response has a 3xx status code
func (o *GetV1AppsAppIDComponentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id components forbidden response has a 4xx status code
func (o *GetV1AppsAppIDComponentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id components forbidden response has a 5xx status code
func (o *GetV1AppsAppIDComponentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id components forbidden response a status code equal to that given
func (o *GetV1AppsAppIDComponentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 apps app Id components forbidden response
func (o *GetV1AppsAppIDComponentsForbidden) Code() int {
	return 403
}

func (o *GetV1AppsAppIDComponentsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1AppsAppIDComponentsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1AppsAppIDComponentsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDComponentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDComponentsNotFound creates a GetV1AppsAppIDComponentsNotFound with default headers values
func NewGetV1AppsAppIDComponentsNotFound() *GetV1AppsAppIDComponentsNotFound {
	return &GetV1AppsAppIDComponentsNotFound{}
}

/*
GetV1AppsAppIDComponentsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1AppsAppIDComponentsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id components not found response has a 2xx status code
func (o *GetV1AppsAppIDComponentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id components not found response has a 3xx status code
func (o *GetV1AppsAppIDComponentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id components not found response has a 4xx status code
func (o *GetV1AppsAppIDComponentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 apps app Id components not found response has a 5xx status code
func (o *GetV1AppsAppIDComponentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 apps app Id components not found response a status code equal to that given
func (o *GetV1AppsAppIDComponentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 apps app Id components not found response
func (o *GetV1AppsAppIDComponentsNotFound) Code() int {
	return 404
}

func (o *GetV1AppsAppIDComponentsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1AppsAppIDComponentsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1AppsAppIDComponentsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDComponentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1AppsAppIDComponentsInternalServerError creates a GetV1AppsAppIDComponentsInternalServerError with default headers values
func NewGetV1AppsAppIDComponentsInternalServerError() *GetV1AppsAppIDComponentsInternalServerError {
	return &GetV1AppsAppIDComponentsInternalServerError{}
}

/*
GetV1AppsAppIDComponentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1AppsAppIDComponentsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 apps app Id components internal server error response has a 2xx status code
func (o *GetV1AppsAppIDComponentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 apps app Id components internal server error response has a 3xx status code
func (o *GetV1AppsAppIDComponentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 apps app Id components internal server error response has a 4xx status code
func (o *GetV1AppsAppIDComponentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 apps app Id components internal server error response has a 5xx status code
func (o *GetV1AppsAppIDComponentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 apps app Id components internal server error response a status code equal to that given
func (o *GetV1AppsAppIDComponentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 apps app Id components internal server error response
func (o *GetV1AppsAppIDComponentsInternalServerError) Code() int {
	return 500
}

func (o *GetV1AppsAppIDComponentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1AppsAppIDComponentsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/components][%d] getV1AppsAppIdComponentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1AppsAppIDComponentsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1AppsAppIDComponentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
