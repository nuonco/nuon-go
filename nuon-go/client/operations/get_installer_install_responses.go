// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallerInstallReader is a Reader for the GetInstallerInstall structure.
type GetInstallerInstallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallerInstallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallerInstallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallerInstallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallerInstallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallerInstallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallerInstallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallerInstallInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installer/{installer_slug}/install/{install_id}] GetInstallerInstall", response, response.Code())
	}
}

// NewGetInstallerInstallOK creates a GetInstallerInstallOK with default headers values
func NewGetInstallerInstallOK() *GetInstallerInstallOK {
	return &GetInstallerInstallOK{}
}

/*
GetInstallerInstallOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallerInstallOK struct {
	Payload *models.AppInstall
}

// IsSuccess returns true when this get installer install o k response has a 2xx status code
func (o *GetInstallerInstallOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get installer install o k response has a 3xx status code
func (o *GetInstallerInstallOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installer install o k response has a 4xx status code
func (o *GetInstallerInstallOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get installer install o k response has a 5xx status code
func (o *GetInstallerInstallOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get installer install o k response a status code equal to that given
func (o *GetInstallerInstallOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get installer install o k response
func (o *GetInstallerInstallOK) Code() int {
	return 200
}

func (o *GetInstallerInstallOK) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallOK  %+v", 200, o.Payload)
}

func (o *GetInstallerInstallOK) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallOK  %+v", 200, o.Payload)
}

func (o *GetInstallerInstallOK) GetPayload() *models.AppInstall {
	return o.Payload
}

func (o *GetInstallerInstallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallerInstallBadRequest creates a GetInstallerInstallBadRequest with default headers values
func NewGetInstallerInstallBadRequest() *GetInstallerInstallBadRequest {
	return &GetInstallerInstallBadRequest{}
}

/*
GetInstallerInstallBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallerInstallBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installer install bad request response has a 2xx status code
func (o *GetInstallerInstallBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installer install bad request response has a 3xx status code
func (o *GetInstallerInstallBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installer install bad request response has a 4xx status code
func (o *GetInstallerInstallBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installer install bad request response has a 5xx status code
func (o *GetInstallerInstallBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get installer install bad request response a status code equal to that given
func (o *GetInstallerInstallBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get installer install bad request response
func (o *GetInstallerInstallBadRequest) Code() int {
	return 400
}

func (o *GetInstallerInstallBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallerInstallBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallerInstallBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallerInstallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallerInstallUnauthorized creates a GetInstallerInstallUnauthorized with default headers values
func NewGetInstallerInstallUnauthorized() *GetInstallerInstallUnauthorized {
	return &GetInstallerInstallUnauthorized{}
}

/*
GetInstallerInstallUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallerInstallUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installer install unauthorized response has a 2xx status code
func (o *GetInstallerInstallUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installer install unauthorized response has a 3xx status code
func (o *GetInstallerInstallUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installer install unauthorized response has a 4xx status code
func (o *GetInstallerInstallUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installer install unauthorized response has a 5xx status code
func (o *GetInstallerInstallUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get installer install unauthorized response a status code equal to that given
func (o *GetInstallerInstallUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get installer install unauthorized response
func (o *GetInstallerInstallUnauthorized) Code() int {
	return 401
}

func (o *GetInstallerInstallUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallerInstallUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallerInstallUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallerInstallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallerInstallForbidden creates a GetInstallerInstallForbidden with default headers values
func NewGetInstallerInstallForbidden() *GetInstallerInstallForbidden {
	return &GetInstallerInstallForbidden{}
}

/*
GetInstallerInstallForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallerInstallForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installer install forbidden response has a 2xx status code
func (o *GetInstallerInstallForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installer install forbidden response has a 3xx status code
func (o *GetInstallerInstallForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installer install forbidden response has a 4xx status code
func (o *GetInstallerInstallForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installer install forbidden response has a 5xx status code
func (o *GetInstallerInstallForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get installer install forbidden response a status code equal to that given
func (o *GetInstallerInstallForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get installer install forbidden response
func (o *GetInstallerInstallForbidden) Code() int {
	return 403
}

func (o *GetInstallerInstallForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallerInstallForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallerInstallForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallerInstallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallerInstallNotFound creates a GetInstallerInstallNotFound with default headers values
func NewGetInstallerInstallNotFound() *GetInstallerInstallNotFound {
	return &GetInstallerInstallNotFound{}
}

/*
GetInstallerInstallNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallerInstallNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installer install not found response has a 2xx status code
func (o *GetInstallerInstallNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installer install not found response has a 3xx status code
func (o *GetInstallerInstallNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installer install not found response has a 4xx status code
func (o *GetInstallerInstallNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installer install not found response has a 5xx status code
func (o *GetInstallerInstallNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get installer install not found response a status code equal to that given
func (o *GetInstallerInstallNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get installer install not found response
func (o *GetInstallerInstallNotFound) Code() int {
	return 404
}

func (o *GetInstallerInstallNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallerInstallNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallerInstallNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallerInstallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallerInstallInternalServerError creates a GetInstallerInstallInternalServerError with default headers values
func NewGetInstallerInstallInternalServerError() *GetInstallerInstallInternalServerError {
	return &GetInstallerInstallInternalServerError{}
}

/*
GetInstallerInstallInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallerInstallInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installer install internal server error response has a 2xx status code
func (o *GetInstallerInstallInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installer install internal server error response has a 3xx status code
func (o *GetInstallerInstallInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installer install internal server error response has a 4xx status code
func (o *GetInstallerInstallInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get installer install internal server error response has a 5xx status code
func (o *GetInstallerInstallInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get installer install internal server error response a status code equal to that given
func (o *GetInstallerInstallInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get installer install internal server error response
func (o *GetInstallerInstallInternalServerError) Code() int {
	return 500
}

func (o *GetInstallerInstallInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallerInstallInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/install/{install_id}][%d] getInstallerInstallInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallerInstallInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallerInstallInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
