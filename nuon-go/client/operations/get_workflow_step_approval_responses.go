// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetWorkflowStepApprovalReader is a Reader for the GetWorkflowStepApproval structure.
type GetWorkflowStepApprovalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowStepApprovalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowStepApprovalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkflowStepApprovalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWorkflowStepApprovalUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkflowStepApprovalForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowStepApprovalNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowStepApprovalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}] GetWorkflowStepApproval", response, response.Code())
	}
}

// NewGetWorkflowStepApprovalOK creates a GetWorkflowStepApprovalOK with default headers values
func NewGetWorkflowStepApprovalOK() *GetWorkflowStepApprovalOK {
	return &GetWorkflowStepApprovalOK{}
}

/*
GetWorkflowStepApprovalOK describes a response with status code 200, with default header values.

OK
*/
type GetWorkflowStepApprovalOK struct {
	Payload []*models.AppWorkflowStepApproval
}

// IsSuccess returns true when this get workflow step approval o k response has a 2xx status code
func (o *GetWorkflowStepApprovalOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow step approval o k response has a 3xx status code
func (o *GetWorkflowStepApprovalOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow step approval o k response has a 4xx status code
func (o *GetWorkflowStepApprovalOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow step approval o k response has a 5xx status code
func (o *GetWorkflowStepApprovalOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow step approval o k response a status code equal to that given
func (o *GetWorkflowStepApprovalOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow step approval o k response
func (o *GetWorkflowStepApprovalOK) Code() int {
	return 200
}

func (o *GetWorkflowStepApprovalOK) Error() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowStepApprovalOK) String() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowStepApprovalOK) GetPayload() []*models.AppWorkflowStepApproval {
	return o.Payload
}

func (o *GetWorkflowStepApprovalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowStepApprovalBadRequest creates a GetWorkflowStepApprovalBadRequest with default headers values
func NewGetWorkflowStepApprovalBadRequest() *GetWorkflowStepApprovalBadRequest {
	return &GetWorkflowStepApprovalBadRequest{}
}

/*
GetWorkflowStepApprovalBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetWorkflowStepApprovalBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get workflow step approval bad request response has a 2xx status code
func (o *GetWorkflowStepApprovalBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow step approval bad request response has a 3xx status code
func (o *GetWorkflowStepApprovalBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow step approval bad request response has a 4xx status code
func (o *GetWorkflowStepApprovalBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow step approval bad request response has a 5xx status code
func (o *GetWorkflowStepApprovalBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow step approval bad request response a status code equal to that given
func (o *GetWorkflowStepApprovalBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get workflow step approval bad request response
func (o *GetWorkflowStepApprovalBadRequest) Code() int {
	return 400
}

func (o *GetWorkflowStepApprovalBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkflowStepApprovalBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkflowStepApprovalBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetWorkflowStepApprovalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowStepApprovalUnauthorized creates a GetWorkflowStepApprovalUnauthorized with default headers values
func NewGetWorkflowStepApprovalUnauthorized() *GetWorkflowStepApprovalUnauthorized {
	return &GetWorkflowStepApprovalUnauthorized{}
}

/*
GetWorkflowStepApprovalUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetWorkflowStepApprovalUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get workflow step approval unauthorized response has a 2xx status code
func (o *GetWorkflowStepApprovalUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow step approval unauthorized response has a 3xx status code
func (o *GetWorkflowStepApprovalUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow step approval unauthorized response has a 4xx status code
func (o *GetWorkflowStepApprovalUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow step approval unauthorized response has a 5xx status code
func (o *GetWorkflowStepApprovalUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow step approval unauthorized response a status code equal to that given
func (o *GetWorkflowStepApprovalUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workflow step approval unauthorized response
func (o *GetWorkflowStepApprovalUnauthorized) Code() int {
	return 401
}

func (o *GetWorkflowStepApprovalUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkflowStepApprovalUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkflowStepApprovalUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetWorkflowStepApprovalUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowStepApprovalForbidden creates a GetWorkflowStepApprovalForbidden with default headers values
func NewGetWorkflowStepApprovalForbidden() *GetWorkflowStepApprovalForbidden {
	return &GetWorkflowStepApprovalForbidden{}
}

/*
GetWorkflowStepApprovalForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWorkflowStepApprovalForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get workflow step approval forbidden response has a 2xx status code
func (o *GetWorkflowStepApprovalForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow step approval forbidden response has a 3xx status code
func (o *GetWorkflowStepApprovalForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow step approval forbidden response has a 4xx status code
func (o *GetWorkflowStepApprovalForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow step approval forbidden response has a 5xx status code
func (o *GetWorkflowStepApprovalForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow step approval forbidden response a status code equal to that given
func (o *GetWorkflowStepApprovalForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workflow step approval forbidden response
func (o *GetWorkflowStepApprovalForbidden) Code() int {
	return 403
}

func (o *GetWorkflowStepApprovalForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkflowStepApprovalForbidden) String() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkflowStepApprovalForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetWorkflowStepApprovalForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowStepApprovalNotFound creates a GetWorkflowStepApprovalNotFound with default headers values
func NewGetWorkflowStepApprovalNotFound() *GetWorkflowStepApprovalNotFound {
	return &GetWorkflowStepApprovalNotFound{}
}

/*
GetWorkflowStepApprovalNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWorkflowStepApprovalNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get workflow step approval not found response has a 2xx status code
func (o *GetWorkflowStepApprovalNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow step approval not found response has a 3xx status code
func (o *GetWorkflowStepApprovalNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow step approval not found response has a 4xx status code
func (o *GetWorkflowStepApprovalNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow step approval not found response has a 5xx status code
func (o *GetWorkflowStepApprovalNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow step approval not found response a status code equal to that given
func (o *GetWorkflowStepApprovalNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow step approval not found response
func (o *GetWorkflowStepApprovalNotFound) Code() int {
	return 404
}

func (o *GetWorkflowStepApprovalNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowStepApprovalNotFound) String() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkflowStepApprovalNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetWorkflowStepApprovalNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowStepApprovalInternalServerError creates a GetWorkflowStepApprovalInternalServerError with default headers values
func NewGetWorkflowStepApprovalInternalServerError() *GetWorkflowStepApprovalInternalServerError {
	return &GetWorkflowStepApprovalInternalServerError{}
}

/*
GetWorkflowStepApprovalInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetWorkflowStepApprovalInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get workflow step approval internal server error response has a 2xx status code
func (o *GetWorkflowStepApprovalInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow step approval internal server error response has a 3xx status code
func (o *GetWorkflowStepApprovalInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow step approval internal server error response has a 4xx status code
func (o *GetWorkflowStepApprovalInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow step approval internal server error response has a 5xx status code
func (o *GetWorkflowStepApprovalInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workflow step approval internal server error response a status code equal to that given
func (o *GetWorkflowStepApprovalInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get workflow step approval internal server error response
func (o *GetWorkflowStepApprovalInternalServerError) Code() int {
	return 500
}

func (o *GetWorkflowStepApprovalInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowStepApprovalInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approvals/{approval_id}][%d] getWorkflowStepApprovalInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkflowStepApprovalInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetWorkflowStepApprovalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
