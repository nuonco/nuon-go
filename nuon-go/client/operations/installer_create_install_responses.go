// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// InstallerCreateInstallReader is a Reader for the InstallerCreateInstall structure.
type InstallerCreateInstallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallerCreateInstallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewInstallerCreateInstallCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstallerCreateInstallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInstallerCreateInstallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInstallerCreateInstallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstallerCreateInstallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInstallerCreateInstallInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/installer/{installer_slug}/installs] InstallerCreateInstall", response, response.Code())
	}
}

// NewInstallerCreateInstallCreated creates a InstallerCreateInstallCreated with default headers values
func NewInstallerCreateInstallCreated() *InstallerCreateInstallCreated {
	return &InstallerCreateInstallCreated{}
}

/*
InstallerCreateInstallCreated describes a response with status code 201, with default header values.

Created
*/
type InstallerCreateInstallCreated struct {
	Payload *models.AppInstall
}

// IsSuccess returns true when this installer create install created response has a 2xx status code
func (o *InstallerCreateInstallCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this installer create install created response has a 3xx status code
func (o *InstallerCreateInstallCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this installer create install created response has a 4xx status code
func (o *InstallerCreateInstallCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this installer create install created response has a 5xx status code
func (o *InstallerCreateInstallCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this installer create install created response a status code equal to that given
func (o *InstallerCreateInstallCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the installer create install created response
func (o *InstallerCreateInstallCreated) Code() int {
	return 201
}

func (o *InstallerCreateInstallCreated) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallCreated  %+v", 201, o.Payload)
}

func (o *InstallerCreateInstallCreated) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallCreated  %+v", 201, o.Payload)
}

func (o *InstallerCreateInstallCreated) GetPayload() *models.AppInstall {
	return o.Payload
}

func (o *InstallerCreateInstallCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallerCreateInstallBadRequest creates a InstallerCreateInstallBadRequest with default headers values
func NewInstallerCreateInstallBadRequest() *InstallerCreateInstallBadRequest {
	return &InstallerCreateInstallBadRequest{}
}

/*
InstallerCreateInstallBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InstallerCreateInstallBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this installer create install bad request response has a 2xx status code
func (o *InstallerCreateInstallBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this installer create install bad request response has a 3xx status code
func (o *InstallerCreateInstallBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this installer create install bad request response has a 4xx status code
func (o *InstallerCreateInstallBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this installer create install bad request response has a 5xx status code
func (o *InstallerCreateInstallBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this installer create install bad request response a status code equal to that given
func (o *InstallerCreateInstallBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the installer create install bad request response
func (o *InstallerCreateInstallBadRequest) Code() int {
	return 400
}

func (o *InstallerCreateInstallBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallBadRequest  %+v", 400, o.Payload)
}

func (o *InstallerCreateInstallBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallBadRequest  %+v", 400, o.Payload)
}

func (o *InstallerCreateInstallBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *InstallerCreateInstallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallerCreateInstallUnauthorized creates a InstallerCreateInstallUnauthorized with default headers values
func NewInstallerCreateInstallUnauthorized() *InstallerCreateInstallUnauthorized {
	return &InstallerCreateInstallUnauthorized{}
}

/*
InstallerCreateInstallUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InstallerCreateInstallUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this installer create install unauthorized response has a 2xx status code
func (o *InstallerCreateInstallUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this installer create install unauthorized response has a 3xx status code
func (o *InstallerCreateInstallUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this installer create install unauthorized response has a 4xx status code
func (o *InstallerCreateInstallUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this installer create install unauthorized response has a 5xx status code
func (o *InstallerCreateInstallUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this installer create install unauthorized response a status code equal to that given
func (o *InstallerCreateInstallUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the installer create install unauthorized response
func (o *InstallerCreateInstallUnauthorized) Code() int {
	return 401
}

func (o *InstallerCreateInstallUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallUnauthorized  %+v", 401, o.Payload)
}

func (o *InstallerCreateInstallUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallUnauthorized  %+v", 401, o.Payload)
}

func (o *InstallerCreateInstallUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *InstallerCreateInstallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallerCreateInstallForbidden creates a InstallerCreateInstallForbidden with default headers values
func NewInstallerCreateInstallForbidden() *InstallerCreateInstallForbidden {
	return &InstallerCreateInstallForbidden{}
}

/*
InstallerCreateInstallForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InstallerCreateInstallForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this installer create install forbidden response has a 2xx status code
func (o *InstallerCreateInstallForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this installer create install forbidden response has a 3xx status code
func (o *InstallerCreateInstallForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this installer create install forbidden response has a 4xx status code
func (o *InstallerCreateInstallForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this installer create install forbidden response has a 5xx status code
func (o *InstallerCreateInstallForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this installer create install forbidden response a status code equal to that given
func (o *InstallerCreateInstallForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the installer create install forbidden response
func (o *InstallerCreateInstallForbidden) Code() int {
	return 403
}

func (o *InstallerCreateInstallForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallForbidden  %+v", 403, o.Payload)
}

func (o *InstallerCreateInstallForbidden) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallForbidden  %+v", 403, o.Payload)
}

func (o *InstallerCreateInstallForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *InstallerCreateInstallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallerCreateInstallNotFound creates a InstallerCreateInstallNotFound with default headers values
func NewInstallerCreateInstallNotFound() *InstallerCreateInstallNotFound {
	return &InstallerCreateInstallNotFound{}
}

/*
InstallerCreateInstallNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InstallerCreateInstallNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this installer create install not found response has a 2xx status code
func (o *InstallerCreateInstallNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this installer create install not found response has a 3xx status code
func (o *InstallerCreateInstallNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this installer create install not found response has a 4xx status code
func (o *InstallerCreateInstallNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this installer create install not found response has a 5xx status code
func (o *InstallerCreateInstallNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this installer create install not found response a status code equal to that given
func (o *InstallerCreateInstallNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the installer create install not found response
func (o *InstallerCreateInstallNotFound) Code() int {
	return 404
}

func (o *InstallerCreateInstallNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallNotFound  %+v", 404, o.Payload)
}

func (o *InstallerCreateInstallNotFound) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallNotFound  %+v", 404, o.Payload)
}

func (o *InstallerCreateInstallNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *InstallerCreateInstallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallerCreateInstallInternalServerError creates a InstallerCreateInstallInternalServerError with default headers values
func NewInstallerCreateInstallInternalServerError() *InstallerCreateInstallInternalServerError {
	return &InstallerCreateInstallInternalServerError{}
}

/*
InstallerCreateInstallInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InstallerCreateInstallInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this installer create install internal server error response has a 2xx status code
func (o *InstallerCreateInstallInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this installer create install internal server error response has a 3xx status code
func (o *InstallerCreateInstallInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this installer create install internal server error response has a 4xx status code
func (o *InstallerCreateInstallInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this installer create install internal server error response has a 5xx status code
func (o *InstallerCreateInstallInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this installer create install internal server error response a status code equal to that given
func (o *InstallerCreateInstallInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the installer create install internal server error response
func (o *InstallerCreateInstallInternalServerError) Code() int {
	return 500
}

func (o *InstallerCreateInstallInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallInternalServerError  %+v", 500, o.Payload)
}

func (o *InstallerCreateInstallInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] installerCreateInstallInternalServerError  %+v", 500, o.Payload)
}

func (o *InstallerCreateInstallInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *InstallerCreateInstallInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
