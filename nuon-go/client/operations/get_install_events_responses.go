// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallEventsReader is a Reader for the GetInstallEvents structure.
type GetInstallEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/events] GetInstallEvents", response, response.Code())
	}
}

// NewGetInstallEventsOK creates a GetInstallEventsOK with default headers values
func NewGetInstallEventsOK() *GetInstallEventsOK {
	return &GetInstallEventsOK{}
}

/*
GetInstallEventsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallEventsOK struct {
	Payload []*models.AppInstallEvent
}

// IsSuccess returns true when this get install events o k response has a 2xx status code
func (o *GetInstallEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install events o k response has a 3xx status code
func (o *GetInstallEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install events o k response has a 4xx status code
func (o *GetInstallEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install events o k response has a 5xx status code
func (o *GetInstallEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install events o k response a status code equal to that given
func (o *GetInstallEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install events o k response
func (o *GetInstallEventsOK) Code() int {
	return 200
}

func (o *GetInstallEventsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsOK %s", 200, payload)
}

func (o *GetInstallEventsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsOK %s", 200, payload)
}

func (o *GetInstallEventsOK) GetPayload() []*models.AppInstallEvent {
	return o.Payload
}

func (o *GetInstallEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallEventsBadRequest creates a GetInstallEventsBadRequest with default headers values
func NewGetInstallEventsBadRequest() *GetInstallEventsBadRequest {
	return &GetInstallEventsBadRequest{}
}

/*
GetInstallEventsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallEventsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install events bad request response has a 2xx status code
func (o *GetInstallEventsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install events bad request response has a 3xx status code
func (o *GetInstallEventsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install events bad request response has a 4xx status code
func (o *GetInstallEventsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install events bad request response has a 5xx status code
func (o *GetInstallEventsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install events bad request response a status code equal to that given
func (o *GetInstallEventsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install events bad request response
func (o *GetInstallEventsBadRequest) Code() int {
	return 400
}

func (o *GetInstallEventsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsBadRequest %s", 400, payload)
}

func (o *GetInstallEventsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsBadRequest %s", 400, payload)
}

func (o *GetInstallEventsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallEventsUnauthorized creates a GetInstallEventsUnauthorized with default headers values
func NewGetInstallEventsUnauthorized() *GetInstallEventsUnauthorized {
	return &GetInstallEventsUnauthorized{}
}

/*
GetInstallEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallEventsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install events unauthorized response has a 2xx status code
func (o *GetInstallEventsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install events unauthorized response has a 3xx status code
func (o *GetInstallEventsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install events unauthorized response has a 4xx status code
func (o *GetInstallEventsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install events unauthorized response has a 5xx status code
func (o *GetInstallEventsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install events unauthorized response a status code equal to that given
func (o *GetInstallEventsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install events unauthorized response
func (o *GetInstallEventsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallEventsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsUnauthorized %s", 401, payload)
}

func (o *GetInstallEventsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsUnauthorized %s", 401, payload)
}

func (o *GetInstallEventsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallEventsForbidden creates a GetInstallEventsForbidden with default headers values
func NewGetInstallEventsForbidden() *GetInstallEventsForbidden {
	return &GetInstallEventsForbidden{}
}

/*
GetInstallEventsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallEventsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install events forbidden response has a 2xx status code
func (o *GetInstallEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install events forbidden response has a 3xx status code
func (o *GetInstallEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install events forbidden response has a 4xx status code
func (o *GetInstallEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install events forbidden response has a 5xx status code
func (o *GetInstallEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install events forbidden response a status code equal to that given
func (o *GetInstallEventsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install events forbidden response
func (o *GetInstallEventsForbidden) Code() int {
	return 403
}

func (o *GetInstallEventsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsForbidden %s", 403, payload)
}

func (o *GetInstallEventsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsForbidden %s", 403, payload)
}

func (o *GetInstallEventsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallEventsNotFound creates a GetInstallEventsNotFound with default headers values
func NewGetInstallEventsNotFound() *GetInstallEventsNotFound {
	return &GetInstallEventsNotFound{}
}

/*
GetInstallEventsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallEventsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install events not found response has a 2xx status code
func (o *GetInstallEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install events not found response has a 3xx status code
func (o *GetInstallEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install events not found response has a 4xx status code
func (o *GetInstallEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install events not found response has a 5xx status code
func (o *GetInstallEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install events not found response a status code equal to that given
func (o *GetInstallEventsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install events not found response
func (o *GetInstallEventsNotFound) Code() int {
	return 404
}

func (o *GetInstallEventsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsNotFound %s", 404, payload)
}

func (o *GetInstallEventsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsNotFound %s", 404, payload)
}

func (o *GetInstallEventsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallEventsInternalServerError creates a GetInstallEventsInternalServerError with default headers values
func NewGetInstallEventsInternalServerError() *GetInstallEventsInternalServerError {
	return &GetInstallEventsInternalServerError{}
}

/*
GetInstallEventsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallEventsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install events internal server error response has a 2xx status code
func (o *GetInstallEventsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install events internal server error response has a 3xx status code
func (o *GetInstallEventsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install events internal server error response has a 4xx status code
func (o *GetInstallEventsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install events internal server error response has a 5xx status code
func (o *GetInstallEventsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install events internal server error response a status code equal to that given
func (o *GetInstallEventsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install events internal server error response
func (o *GetInstallEventsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallEventsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsInternalServerError %s", 500, payload)
}

func (o *GetInstallEventsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/events][%d] getInstallEventsInternalServerError %s", 500, payload)
}

func (o *GetInstallEventsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
