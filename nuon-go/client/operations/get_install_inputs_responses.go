// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallInputsReader is a Reader for the GetInstallInputs structure.
type GetInstallInputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallInputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallInputsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallInputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallInputsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallInputsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallInputsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallInputsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/inputs] GetInstallInputs", response, response.Code())
	}
}

// NewGetInstallInputsOK creates a GetInstallInputsOK with default headers values
func NewGetInstallInputsOK() *GetInstallInputsOK {
	return &GetInstallInputsOK{}
}

/*
GetInstallInputsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallInputsOK struct {
	Payload []*models.AppInstallInputs
}

// IsSuccess returns true when this get install inputs o k response has a 2xx status code
func (o *GetInstallInputsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install inputs o k response has a 3xx status code
func (o *GetInstallInputsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install inputs o k response has a 4xx status code
func (o *GetInstallInputsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install inputs o k response has a 5xx status code
func (o *GetInstallInputsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install inputs o k response a status code equal to that given
func (o *GetInstallInputsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install inputs o k response
func (o *GetInstallInputsOK) Code() int {
	return 200
}

func (o *GetInstallInputsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsOK  %+v", 200, o.Payload)
}

func (o *GetInstallInputsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsOK  %+v", 200, o.Payload)
}

func (o *GetInstallInputsOK) GetPayload() []*models.AppInstallInputs {
	return o.Payload
}

func (o *GetInstallInputsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallInputsBadRequest creates a GetInstallInputsBadRequest with default headers values
func NewGetInstallInputsBadRequest() *GetInstallInputsBadRequest {
	return &GetInstallInputsBadRequest{}
}

/*
GetInstallInputsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallInputsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install inputs bad request response has a 2xx status code
func (o *GetInstallInputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install inputs bad request response has a 3xx status code
func (o *GetInstallInputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install inputs bad request response has a 4xx status code
func (o *GetInstallInputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install inputs bad request response has a 5xx status code
func (o *GetInstallInputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install inputs bad request response a status code equal to that given
func (o *GetInstallInputsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install inputs bad request response
func (o *GetInstallInputsBadRequest) Code() int {
	return 400
}

func (o *GetInstallInputsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallInputsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallInputsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallInputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallInputsUnauthorized creates a GetInstallInputsUnauthorized with default headers values
func NewGetInstallInputsUnauthorized() *GetInstallInputsUnauthorized {
	return &GetInstallInputsUnauthorized{}
}

/*
GetInstallInputsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallInputsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install inputs unauthorized response has a 2xx status code
func (o *GetInstallInputsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install inputs unauthorized response has a 3xx status code
func (o *GetInstallInputsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install inputs unauthorized response has a 4xx status code
func (o *GetInstallInputsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install inputs unauthorized response has a 5xx status code
func (o *GetInstallInputsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install inputs unauthorized response a status code equal to that given
func (o *GetInstallInputsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install inputs unauthorized response
func (o *GetInstallInputsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallInputsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallInputsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallInputsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallInputsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallInputsForbidden creates a GetInstallInputsForbidden with default headers values
func NewGetInstallInputsForbidden() *GetInstallInputsForbidden {
	return &GetInstallInputsForbidden{}
}

/*
GetInstallInputsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallInputsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install inputs forbidden response has a 2xx status code
func (o *GetInstallInputsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install inputs forbidden response has a 3xx status code
func (o *GetInstallInputsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install inputs forbidden response has a 4xx status code
func (o *GetInstallInputsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install inputs forbidden response has a 5xx status code
func (o *GetInstallInputsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install inputs forbidden response a status code equal to that given
func (o *GetInstallInputsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install inputs forbidden response
func (o *GetInstallInputsForbidden) Code() int {
	return 403
}

func (o *GetInstallInputsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallInputsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallInputsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallInputsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallInputsNotFound creates a GetInstallInputsNotFound with default headers values
func NewGetInstallInputsNotFound() *GetInstallInputsNotFound {
	return &GetInstallInputsNotFound{}
}

/*
GetInstallInputsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallInputsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install inputs not found response has a 2xx status code
func (o *GetInstallInputsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install inputs not found response has a 3xx status code
func (o *GetInstallInputsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install inputs not found response has a 4xx status code
func (o *GetInstallInputsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install inputs not found response has a 5xx status code
func (o *GetInstallInputsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install inputs not found response a status code equal to that given
func (o *GetInstallInputsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install inputs not found response
func (o *GetInstallInputsNotFound) Code() int {
	return 404
}

func (o *GetInstallInputsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallInputsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallInputsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallInputsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallInputsInternalServerError creates a GetInstallInputsInternalServerError with default headers values
func NewGetInstallInputsInternalServerError() *GetInstallInputsInternalServerError {
	return &GetInstallInputsInternalServerError{}
}

/*
GetInstallInputsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallInputsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install inputs internal server error response has a 2xx status code
func (o *GetInstallInputsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install inputs internal server error response has a 3xx status code
func (o *GetInstallInputsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install inputs internal server error response has a 4xx status code
func (o *GetInstallInputsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install inputs internal server error response has a 5xx status code
func (o *GetInstallInputsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install inputs internal server error response a status code equal to that given
func (o *GetInstallInputsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install inputs internal server error response
func (o *GetInstallInputsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallInputsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallInputsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getInstallInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallInputsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallInputsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
