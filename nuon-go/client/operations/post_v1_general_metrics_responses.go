// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PostV1GeneralMetricsReader is a Reader for the PostV1GeneralMetrics structure.
type PostV1GeneralMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1GeneralMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostV1GeneralMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1GeneralMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1GeneralMetricsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostV1GeneralMetricsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostV1GeneralMetricsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1GeneralMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/general/metrics] PostV1GeneralMetrics", response, response.Code())
	}
}

// NewPostV1GeneralMetricsOK creates a PostV1GeneralMetricsOK with default headers values
func NewPostV1GeneralMetricsOK() *PostV1GeneralMetricsOK {
	return &PostV1GeneralMetricsOK{}
}

/*
PostV1GeneralMetricsOK describes a response with status code 200, with default header values.

OK
*/
type PostV1GeneralMetricsOK struct {
	Payload string
}

// IsSuccess returns true when this post v1 general metrics o k response has a 2xx status code
func (o *PostV1GeneralMetricsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 general metrics o k response has a 3xx status code
func (o *PostV1GeneralMetricsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 general metrics o k response has a 4xx status code
func (o *PostV1GeneralMetricsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 general metrics o k response has a 5xx status code
func (o *PostV1GeneralMetricsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 general metrics o k response a status code equal to that given
func (o *PostV1GeneralMetricsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post v1 general metrics o k response
func (o *PostV1GeneralMetricsOK) Code() int {
	return 200
}

func (o *PostV1GeneralMetricsOK) Error() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsOK  %+v", 200, o.Payload)
}

func (o *PostV1GeneralMetricsOK) String() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsOK  %+v", 200, o.Payload)
}

func (o *PostV1GeneralMetricsOK) GetPayload() string {
	return o.Payload
}

func (o *PostV1GeneralMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1GeneralMetricsBadRequest creates a PostV1GeneralMetricsBadRequest with default headers values
func NewPostV1GeneralMetricsBadRequest() *PostV1GeneralMetricsBadRequest {
	return &PostV1GeneralMetricsBadRequest{}
}

/*
PostV1GeneralMetricsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1GeneralMetricsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 general metrics bad request response has a 2xx status code
func (o *PostV1GeneralMetricsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 general metrics bad request response has a 3xx status code
func (o *PostV1GeneralMetricsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 general metrics bad request response has a 4xx status code
func (o *PostV1GeneralMetricsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 general metrics bad request response has a 5xx status code
func (o *PostV1GeneralMetricsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 general metrics bad request response a status code equal to that given
func (o *PostV1GeneralMetricsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 general metrics bad request response
func (o *PostV1GeneralMetricsBadRequest) Code() int {
	return 400
}

func (o *PostV1GeneralMetricsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1GeneralMetricsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1GeneralMetricsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1GeneralMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1GeneralMetricsUnauthorized creates a PostV1GeneralMetricsUnauthorized with default headers values
func NewPostV1GeneralMetricsUnauthorized() *PostV1GeneralMetricsUnauthorized {
	return &PostV1GeneralMetricsUnauthorized{}
}

/*
PostV1GeneralMetricsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1GeneralMetricsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 general metrics unauthorized response has a 2xx status code
func (o *PostV1GeneralMetricsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 general metrics unauthorized response has a 3xx status code
func (o *PostV1GeneralMetricsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 general metrics unauthorized response has a 4xx status code
func (o *PostV1GeneralMetricsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 general metrics unauthorized response has a 5xx status code
func (o *PostV1GeneralMetricsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 general metrics unauthorized response a status code equal to that given
func (o *PostV1GeneralMetricsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 general metrics unauthorized response
func (o *PostV1GeneralMetricsUnauthorized) Code() int {
	return 401
}

func (o *PostV1GeneralMetricsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1GeneralMetricsUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1GeneralMetricsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1GeneralMetricsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1GeneralMetricsForbidden creates a PostV1GeneralMetricsForbidden with default headers values
func NewPostV1GeneralMetricsForbidden() *PostV1GeneralMetricsForbidden {
	return &PostV1GeneralMetricsForbidden{}
}

/*
PostV1GeneralMetricsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostV1GeneralMetricsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 general metrics forbidden response has a 2xx status code
func (o *PostV1GeneralMetricsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 general metrics forbidden response has a 3xx status code
func (o *PostV1GeneralMetricsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 general metrics forbidden response has a 4xx status code
func (o *PostV1GeneralMetricsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 general metrics forbidden response has a 5xx status code
func (o *PostV1GeneralMetricsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 general metrics forbidden response a status code equal to that given
func (o *PostV1GeneralMetricsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post v1 general metrics forbidden response
func (o *PostV1GeneralMetricsForbidden) Code() int {
	return 403
}

func (o *PostV1GeneralMetricsForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1GeneralMetricsForbidden) String() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1GeneralMetricsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1GeneralMetricsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1GeneralMetricsNotFound creates a PostV1GeneralMetricsNotFound with default headers values
func NewPostV1GeneralMetricsNotFound() *PostV1GeneralMetricsNotFound {
	return &PostV1GeneralMetricsNotFound{}
}

/*
PostV1GeneralMetricsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostV1GeneralMetricsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 general metrics not found response has a 2xx status code
func (o *PostV1GeneralMetricsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 general metrics not found response has a 3xx status code
func (o *PostV1GeneralMetricsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 general metrics not found response has a 4xx status code
func (o *PostV1GeneralMetricsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 general metrics not found response has a 5xx status code
func (o *PostV1GeneralMetricsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 general metrics not found response a status code equal to that given
func (o *PostV1GeneralMetricsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 general metrics not found response
func (o *PostV1GeneralMetricsNotFound) Code() int {
	return 404
}

func (o *PostV1GeneralMetricsNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1GeneralMetricsNotFound) String() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1GeneralMetricsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1GeneralMetricsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1GeneralMetricsInternalServerError creates a PostV1GeneralMetricsInternalServerError with default headers values
func NewPostV1GeneralMetricsInternalServerError() *PostV1GeneralMetricsInternalServerError {
	return &PostV1GeneralMetricsInternalServerError{}
}

/*
PostV1GeneralMetricsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1GeneralMetricsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 general metrics internal server error response has a 2xx status code
func (o *PostV1GeneralMetricsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 general metrics internal server error response has a 3xx status code
func (o *PostV1GeneralMetricsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 general metrics internal server error response has a 4xx status code
func (o *PostV1GeneralMetricsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 general metrics internal server error response has a 5xx status code
func (o *PostV1GeneralMetricsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 general metrics internal server error response a status code equal to that given
func (o *PostV1GeneralMetricsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 general metrics internal server error response
func (o *PostV1GeneralMetricsInternalServerError) Code() int {
	return 500
}

func (o *PostV1GeneralMetricsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1GeneralMetricsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/general/metrics][%d] postV1GeneralMetricsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1GeneralMetricsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1GeneralMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
