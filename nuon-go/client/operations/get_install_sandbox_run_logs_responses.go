// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallSandboxRunLogsReader is a Reader for the GetInstallSandboxRunLogs structure.
type GetInstallSandboxRunLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallSandboxRunLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallSandboxRunLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallSandboxRunLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallSandboxRunLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallSandboxRunLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallSandboxRunLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallSandboxRunLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs] GetInstallSandboxRunLogs", response, response.Code())
	}
}

// NewGetInstallSandboxRunLogsOK creates a GetInstallSandboxRunLogsOK with default headers values
func NewGetInstallSandboxRunLogsOK() *GetInstallSandboxRunLogsOK {
	return &GetInstallSandboxRunLogsOK{}
}

/*
GetInstallSandboxRunLogsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallSandboxRunLogsOK struct {
	Payload []interface{}
}

// IsSuccess returns true when this get install sandbox run logs o k response has a 2xx status code
func (o *GetInstallSandboxRunLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install sandbox run logs o k response has a 3xx status code
func (o *GetInstallSandboxRunLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run logs o k response has a 4xx status code
func (o *GetInstallSandboxRunLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox run logs o k response has a 5xx status code
func (o *GetInstallSandboxRunLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run logs o k response a status code equal to that given
func (o *GetInstallSandboxRunLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install sandbox run logs o k response
func (o *GetInstallSandboxRunLogsOK) Code() int {
	return 200
}

func (o *GetInstallSandboxRunLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsOK %s", 200, payload)
}

func (o *GetInstallSandboxRunLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsOK %s", 200, payload)
}

func (o *GetInstallSandboxRunLogsOK) GetPayload() []interface{} {
	return o.Payload
}

func (o *GetInstallSandboxRunLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunLogsBadRequest creates a GetInstallSandboxRunLogsBadRequest with default headers values
func NewGetInstallSandboxRunLogsBadRequest() *GetInstallSandboxRunLogsBadRequest {
	return &GetInstallSandboxRunLogsBadRequest{}
}

/*
GetInstallSandboxRunLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallSandboxRunLogsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run logs bad request response has a 2xx status code
func (o *GetInstallSandboxRunLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run logs bad request response has a 3xx status code
func (o *GetInstallSandboxRunLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run logs bad request response has a 4xx status code
func (o *GetInstallSandboxRunLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run logs bad request response has a 5xx status code
func (o *GetInstallSandboxRunLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run logs bad request response a status code equal to that given
func (o *GetInstallSandboxRunLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install sandbox run logs bad request response
func (o *GetInstallSandboxRunLogsBadRequest) Code() int {
	return 400
}

func (o *GetInstallSandboxRunLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsBadRequest %s", 400, payload)
}

func (o *GetInstallSandboxRunLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsBadRequest %s", 400, payload)
}

func (o *GetInstallSandboxRunLogsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunLogsUnauthorized creates a GetInstallSandboxRunLogsUnauthorized with default headers values
func NewGetInstallSandboxRunLogsUnauthorized() *GetInstallSandboxRunLogsUnauthorized {
	return &GetInstallSandboxRunLogsUnauthorized{}
}

/*
GetInstallSandboxRunLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallSandboxRunLogsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run logs unauthorized response has a 2xx status code
func (o *GetInstallSandboxRunLogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run logs unauthorized response has a 3xx status code
func (o *GetInstallSandboxRunLogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run logs unauthorized response has a 4xx status code
func (o *GetInstallSandboxRunLogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run logs unauthorized response has a 5xx status code
func (o *GetInstallSandboxRunLogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run logs unauthorized response a status code equal to that given
func (o *GetInstallSandboxRunLogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install sandbox run logs unauthorized response
func (o *GetInstallSandboxRunLogsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallSandboxRunLogsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsUnauthorized %s", 401, payload)
}

func (o *GetInstallSandboxRunLogsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsUnauthorized %s", 401, payload)
}

func (o *GetInstallSandboxRunLogsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunLogsForbidden creates a GetInstallSandboxRunLogsForbidden with default headers values
func NewGetInstallSandboxRunLogsForbidden() *GetInstallSandboxRunLogsForbidden {
	return &GetInstallSandboxRunLogsForbidden{}
}

/*
GetInstallSandboxRunLogsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallSandboxRunLogsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run logs forbidden response has a 2xx status code
func (o *GetInstallSandboxRunLogsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run logs forbidden response has a 3xx status code
func (o *GetInstallSandboxRunLogsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run logs forbidden response has a 4xx status code
func (o *GetInstallSandboxRunLogsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run logs forbidden response has a 5xx status code
func (o *GetInstallSandboxRunLogsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run logs forbidden response a status code equal to that given
func (o *GetInstallSandboxRunLogsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install sandbox run logs forbidden response
func (o *GetInstallSandboxRunLogsForbidden) Code() int {
	return 403
}

func (o *GetInstallSandboxRunLogsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsForbidden %s", 403, payload)
}

func (o *GetInstallSandboxRunLogsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsForbidden %s", 403, payload)
}

func (o *GetInstallSandboxRunLogsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunLogsNotFound creates a GetInstallSandboxRunLogsNotFound with default headers values
func NewGetInstallSandboxRunLogsNotFound() *GetInstallSandboxRunLogsNotFound {
	return &GetInstallSandboxRunLogsNotFound{}
}

/*
GetInstallSandboxRunLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallSandboxRunLogsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run logs not found response has a 2xx status code
func (o *GetInstallSandboxRunLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run logs not found response has a 3xx status code
func (o *GetInstallSandboxRunLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run logs not found response has a 4xx status code
func (o *GetInstallSandboxRunLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run logs not found response has a 5xx status code
func (o *GetInstallSandboxRunLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run logs not found response a status code equal to that given
func (o *GetInstallSandboxRunLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install sandbox run logs not found response
func (o *GetInstallSandboxRunLogsNotFound) Code() int {
	return 404
}

func (o *GetInstallSandboxRunLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsNotFound %s", 404, payload)
}

func (o *GetInstallSandboxRunLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsNotFound %s", 404, payload)
}

func (o *GetInstallSandboxRunLogsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunLogsInternalServerError creates a GetInstallSandboxRunLogsInternalServerError with default headers values
func NewGetInstallSandboxRunLogsInternalServerError() *GetInstallSandboxRunLogsInternalServerError {
	return &GetInstallSandboxRunLogsInternalServerError{}
}

/*
GetInstallSandboxRunLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallSandboxRunLogsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run logs internal server error response has a 2xx status code
func (o *GetInstallSandboxRunLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run logs internal server error response has a 3xx status code
func (o *GetInstallSandboxRunLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run logs internal server error response has a 4xx status code
func (o *GetInstallSandboxRunLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox run logs internal server error response has a 5xx status code
func (o *GetInstallSandboxRunLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install sandbox run logs internal server error response a status code equal to that given
func (o *GetInstallSandboxRunLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install sandbox run logs internal server error response
func (o *GetInstallSandboxRunLogsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallSandboxRunLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsInternalServerError %s", 500, payload)
}

func (o *GetInstallSandboxRunLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-run/{run_id}/logs][%d] getInstallSandboxRunLogsInternalServerError %s", 500, payload)
}

func (o *GetInstallSandboxRunLogsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
