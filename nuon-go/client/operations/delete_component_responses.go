// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteComponentReader is a Reader for the DeleteComponent structure.
type DeleteComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteComponentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteComponentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteComponentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteComponentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteComponentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/components/{component_id}] DeleteComponent", response, response.Code())
	}
}

// NewDeleteComponentOK creates a DeleteComponentOK with default headers values
func NewDeleteComponentOK() *DeleteComponentOK {
	return &DeleteComponentOK{}
}

/*
DeleteComponentOK describes a response with status code 200, with default header values.

OK
*/
type DeleteComponentOK struct {
	Payload bool
}

// IsSuccess returns true when this delete component o k response has a 2xx status code
func (o *DeleteComponentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete component o k response has a 3xx status code
func (o *DeleteComponentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete component o k response has a 4xx status code
func (o *DeleteComponentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete component o k response has a 5xx status code
func (o *DeleteComponentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete component o k response a status code equal to that given
func (o *DeleteComponentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete component o k response
func (o *DeleteComponentOK) Code() int {
	return 200
}

func (o *DeleteComponentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentOK %s", 200, payload)
}

func (o *DeleteComponentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentOK %s", 200, payload)
}

func (o *DeleteComponentOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComponentBadRequest creates a DeleteComponentBadRequest with default headers values
func NewDeleteComponentBadRequest() *DeleteComponentBadRequest {
	return &DeleteComponentBadRequest{}
}

/*
DeleteComponentBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteComponentBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete component bad request response has a 2xx status code
func (o *DeleteComponentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete component bad request response has a 3xx status code
func (o *DeleteComponentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete component bad request response has a 4xx status code
func (o *DeleteComponentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete component bad request response has a 5xx status code
func (o *DeleteComponentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete component bad request response a status code equal to that given
func (o *DeleteComponentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete component bad request response
func (o *DeleteComponentBadRequest) Code() int {
	return 400
}

func (o *DeleteComponentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentBadRequest %s", 400, payload)
}

func (o *DeleteComponentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentBadRequest %s", 400, payload)
}

func (o *DeleteComponentBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteComponentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComponentUnauthorized creates a DeleteComponentUnauthorized with default headers values
func NewDeleteComponentUnauthorized() *DeleteComponentUnauthorized {
	return &DeleteComponentUnauthorized{}
}

/*
DeleteComponentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteComponentUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete component unauthorized response has a 2xx status code
func (o *DeleteComponentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete component unauthorized response has a 3xx status code
func (o *DeleteComponentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete component unauthorized response has a 4xx status code
func (o *DeleteComponentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete component unauthorized response has a 5xx status code
func (o *DeleteComponentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete component unauthorized response a status code equal to that given
func (o *DeleteComponentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete component unauthorized response
func (o *DeleteComponentUnauthorized) Code() int {
	return 401
}

func (o *DeleteComponentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentUnauthorized %s", 401, payload)
}

func (o *DeleteComponentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentUnauthorized %s", 401, payload)
}

func (o *DeleteComponentUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteComponentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComponentForbidden creates a DeleteComponentForbidden with default headers values
func NewDeleteComponentForbidden() *DeleteComponentForbidden {
	return &DeleteComponentForbidden{}
}

/*
DeleteComponentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteComponentForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete component forbidden response has a 2xx status code
func (o *DeleteComponentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete component forbidden response has a 3xx status code
func (o *DeleteComponentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete component forbidden response has a 4xx status code
func (o *DeleteComponentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete component forbidden response has a 5xx status code
func (o *DeleteComponentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete component forbidden response a status code equal to that given
func (o *DeleteComponentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete component forbidden response
func (o *DeleteComponentForbidden) Code() int {
	return 403
}

func (o *DeleteComponentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentForbidden %s", 403, payload)
}

func (o *DeleteComponentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentForbidden %s", 403, payload)
}

func (o *DeleteComponentForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteComponentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComponentNotFound creates a DeleteComponentNotFound with default headers values
func NewDeleteComponentNotFound() *DeleteComponentNotFound {
	return &DeleteComponentNotFound{}
}

/*
DeleteComponentNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteComponentNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete component not found response has a 2xx status code
func (o *DeleteComponentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete component not found response has a 3xx status code
func (o *DeleteComponentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete component not found response has a 4xx status code
func (o *DeleteComponentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete component not found response has a 5xx status code
func (o *DeleteComponentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete component not found response a status code equal to that given
func (o *DeleteComponentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete component not found response
func (o *DeleteComponentNotFound) Code() int {
	return 404
}

func (o *DeleteComponentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentNotFound %s", 404, payload)
}

func (o *DeleteComponentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentNotFound %s", 404, payload)
}

func (o *DeleteComponentNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteComponentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComponentInternalServerError creates a DeleteComponentInternalServerError with default headers values
func NewDeleteComponentInternalServerError() *DeleteComponentInternalServerError {
	return &DeleteComponentInternalServerError{}
}

/*
DeleteComponentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteComponentInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete component internal server error response has a 2xx status code
func (o *DeleteComponentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete component internal server error response has a 3xx status code
func (o *DeleteComponentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete component internal server error response has a 4xx status code
func (o *DeleteComponentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete component internal server error response has a 5xx status code
func (o *DeleteComponentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete component internal server error response a status code equal to that given
func (o *DeleteComponentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete component internal server error response
func (o *DeleteComponentInternalServerError) Code() int {
	return 500
}

func (o *DeleteComponentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentInternalServerError %s", 500, payload)
}

func (o *DeleteComponentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/components/{component_id}][%d] deleteComponentInternalServerError %s", 500, payload)
}

func (o *DeleteComponentInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteComponentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
