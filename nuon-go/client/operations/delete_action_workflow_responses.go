// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteActionWorkflowReader is a Reader for the DeleteActionWorkflow structure.
type DeleteActionWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteActionWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteActionWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteActionWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteActionWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteActionWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteActionWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteActionWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/action-workflows/{action_workflow_id}] DeleteActionWorkflow", response, response.Code())
	}
}

// NewDeleteActionWorkflowOK creates a DeleteActionWorkflowOK with default headers values
func NewDeleteActionWorkflowOK() *DeleteActionWorkflowOK {
	return &DeleteActionWorkflowOK{}
}

/*
DeleteActionWorkflowOK describes a response with status code 200, with default header values.

OK
*/
type DeleteActionWorkflowOK struct {
	Payload bool
}

// IsSuccess returns true when this delete action workflow o k response has a 2xx status code
func (o *DeleteActionWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete action workflow o k response has a 3xx status code
func (o *DeleteActionWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action workflow o k response has a 4xx status code
func (o *DeleteActionWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete action workflow o k response has a 5xx status code
func (o *DeleteActionWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action workflow o k response a status code equal to that given
func (o *DeleteActionWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete action workflow o k response
func (o *DeleteActionWorkflowOK) Code() int {
	return 200
}

func (o *DeleteActionWorkflowOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowOK  %+v", 200, o.Payload)
}

func (o *DeleteActionWorkflowOK) String() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowOK  %+v", 200, o.Payload)
}

func (o *DeleteActionWorkflowOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteActionWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteActionWorkflowBadRequest creates a DeleteActionWorkflowBadRequest with default headers values
func NewDeleteActionWorkflowBadRequest() *DeleteActionWorkflowBadRequest {
	return &DeleteActionWorkflowBadRequest{}
}

/*
DeleteActionWorkflowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteActionWorkflowBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete action workflow bad request response has a 2xx status code
func (o *DeleteActionWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action workflow bad request response has a 3xx status code
func (o *DeleteActionWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action workflow bad request response has a 4xx status code
func (o *DeleteActionWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete action workflow bad request response has a 5xx status code
func (o *DeleteActionWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action workflow bad request response a status code equal to that given
func (o *DeleteActionWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete action workflow bad request response
func (o *DeleteActionWorkflowBadRequest) Code() int {
	return 400
}

func (o *DeleteActionWorkflowBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteActionWorkflowBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteActionWorkflowBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteActionWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteActionWorkflowUnauthorized creates a DeleteActionWorkflowUnauthorized with default headers values
func NewDeleteActionWorkflowUnauthorized() *DeleteActionWorkflowUnauthorized {
	return &DeleteActionWorkflowUnauthorized{}
}

/*
DeleteActionWorkflowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteActionWorkflowUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete action workflow unauthorized response has a 2xx status code
func (o *DeleteActionWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action workflow unauthorized response has a 3xx status code
func (o *DeleteActionWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action workflow unauthorized response has a 4xx status code
func (o *DeleteActionWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete action workflow unauthorized response has a 5xx status code
func (o *DeleteActionWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action workflow unauthorized response a status code equal to that given
func (o *DeleteActionWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete action workflow unauthorized response
func (o *DeleteActionWorkflowUnauthorized) Code() int {
	return 401
}

func (o *DeleteActionWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteActionWorkflowUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteActionWorkflowUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteActionWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteActionWorkflowForbidden creates a DeleteActionWorkflowForbidden with default headers values
func NewDeleteActionWorkflowForbidden() *DeleteActionWorkflowForbidden {
	return &DeleteActionWorkflowForbidden{}
}

/*
DeleteActionWorkflowForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteActionWorkflowForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete action workflow forbidden response has a 2xx status code
func (o *DeleteActionWorkflowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action workflow forbidden response has a 3xx status code
func (o *DeleteActionWorkflowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action workflow forbidden response has a 4xx status code
func (o *DeleteActionWorkflowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete action workflow forbidden response has a 5xx status code
func (o *DeleteActionWorkflowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action workflow forbidden response a status code equal to that given
func (o *DeleteActionWorkflowForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete action workflow forbidden response
func (o *DeleteActionWorkflowForbidden) Code() int {
	return 403
}

func (o *DeleteActionWorkflowForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowForbidden  %+v", 403, o.Payload)
}

func (o *DeleteActionWorkflowForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowForbidden  %+v", 403, o.Payload)
}

func (o *DeleteActionWorkflowForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteActionWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteActionWorkflowNotFound creates a DeleteActionWorkflowNotFound with default headers values
func NewDeleteActionWorkflowNotFound() *DeleteActionWorkflowNotFound {
	return &DeleteActionWorkflowNotFound{}
}

/*
DeleteActionWorkflowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteActionWorkflowNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete action workflow not found response has a 2xx status code
func (o *DeleteActionWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action workflow not found response has a 3xx status code
func (o *DeleteActionWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action workflow not found response has a 4xx status code
func (o *DeleteActionWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete action workflow not found response has a 5xx status code
func (o *DeleteActionWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action workflow not found response a status code equal to that given
func (o *DeleteActionWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete action workflow not found response
func (o *DeleteActionWorkflowNotFound) Code() int {
	return 404
}

func (o *DeleteActionWorkflowNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowNotFound  %+v", 404, o.Payload)
}

func (o *DeleteActionWorkflowNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowNotFound  %+v", 404, o.Payload)
}

func (o *DeleteActionWorkflowNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteActionWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteActionWorkflowInternalServerError creates a DeleteActionWorkflowInternalServerError with default headers values
func NewDeleteActionWorkflowInternalServerError() *DeleteActionWorkflowInternalServerError {
	return &DeleteActionWorkflowInternalServerError{}
}

/*
DeleteActionWorkflowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteActionWorkflowInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete action workflow internal server error response has a 2xx status code
func (o *DeleteActionWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action workflow internal server error response has a 3xx status code
func (o *DeleteActionWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action workflow internal server error response has a 4xx status code
func (o *DeleteActionWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete action workflow internal server error response has a 5xx status code
func (o *DeleteActionWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete action workflow internal server error response a status code equal to that given
func (o *DeleteActionWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete action workflow internal server error response
func (o *DeleteActionWorkflowInternalServerError) Code() int {
	return 500
}

func (o *DeleteActionWorkflowInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteActionWorkflowInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/action-workflows/{action_workflow_id}][%d] deleteActionWorkflowInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteActionWorkflowInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteActionWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
