// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteOrgReader is a Reader for the DeleteOrg structure.
type DeleteOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOrgBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteOrgUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteOrgForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteOrgNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOrgInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/orgs/current] DeleteOrg", response, response.Code())
	}
}

// NewDeleteOrgOK creates a DeleteOrgOK with default headers values
func NewDeleteOrgOK() *DeleteOrgOK {
	return &DeleteOrgOK{}
}

/*
DeleteOrgOK describes a response with status code 200, with default header values.

OK
*/
type DeleteOrgOK struct {
	Payload bool
}

// IsSuccess returns true when this delete org o k response has a 2xx status code
func (o *DeleteOrgOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete org o k response has a 3xx status code
func (o *DeleteOrgOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org o k response has a 4xx status code
func (o *DeleteOrgOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete org o k response has a 5xx status code
func (o *DeleteOrgOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org o k response a status code equal to that given
func (o *DeleteOrgOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete org o k response
func (o *DeleteOrgOK) Code() int {
	return 200
}

func (o *DeleteOrgOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgOK %s", 200, payload)
}

func (o *DeleteOrgOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgOK %s", 200, payload)
}

func (o *DeleteOrgOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgBadRequest creates a DeleteOrgBadRequest with default headers values
func NewDeleteOrgBadRequest() *DeleteOrgBadRequest {
	return &DeleteOrgBadRequest{}
}

/*
DeleteOrgBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteOrgBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete org bad request response has a 2xx status code
func (o *DeleteOrgBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org bad request response has a 3xx status code
func (o *DeleteOrgBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org bad request response has a 4xx status code
func (o *DeleteOrgBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete org bad request response has a 5xx status code
func (o *DeleteOrgBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org bad request response a status code equal to that given
func (o *DeleteOrgBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete org bad request response
func (o *DeleteOrgBadRequest) Code() int {
	return 400
}

func (o *DeleteOrgBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgBadRequest %s", 400, payload)
}

func (o *DeleteOrgBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgBadRequest %s", 400, payload)
}

func (o *DeleteOrgBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteOrgBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgUnauthorized creates a DeleteOrgUnauthorized with default headers values
func NewDeleteOrgUnauthorized() *DeleteOrgUnauthorized {
	return &DeleteOrgUnauthorized{}
}

/*
DeleteOrgUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteOrgUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete org unauthorized response has a 2xx status code
func (o *DeleteOrgUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org unauthorized response has a 3xx status code
func (o *DeleteOrgUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org unauthorized response has a 4xx status code
func (o *DeleteOrgUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete org unauthorized response has a 5xx status code
func (o *DeleteOrgUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org unauthorized response a status code equal to that given
func (o *DeleteOrgUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete org unauthorized response
func (o *DeleteOrgUnauthorized) Code() int {
	return 401
}

func (o *DeleteOrgUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgUnauthorized %s", 401, payload)
}

func (o *DeleteOrgUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgUnauthorized %s", 401, payload)
}

func (o *DeleteOrgUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteOrgUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgForbidden creates a DeleteOrgForbidden with default headers values
func NewDeleteOrgForbidden() *DeleteOrgForbidden {
	return &DeleteOrgForbidden{}
}

/*
DeleteOrgForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteOrgForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete org forbidden response has a 2xx status code
func (o *DeleteOrgForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org forbidden response has a 3xx status code
func (o *DeleteOrgForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org forbidden response has a 4xx status code
func (o *DeleteOrgForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete org forbidden response has a 5xx status code
func (o *DeleteOrgForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org forbidden response a status code equal to that given
func (o *DeleteOrgForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete org forbidden response
func (o *DeleteOrgForbidden) Code() int {
	return 403
}

func (o *DeleteOrgForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgForbidden %s", 403, payload)
}

func (o *DeleteOrgForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgForbidden %s", 403, payload)
}

func (o *DeleteOrgForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteOrgForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgNotFound creates a DeleteOrgNotFound with default headers values
func NewDeleteOrgNotFound() *DeleteOrgNotFound {
	return &DeleteOrgNotFound{}
}

/*
DeleteOrgNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteOrgNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete org not found response has a 2xx status code
func (o *DeleteOrgNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org not found response has a 3xx status code
func (o *DeleteOrgNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org not found response has a 4xx status code
func (o *DeleteOrgNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete org not found response has a 5xx status code
func (o *DeleteOrgNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org not found response a status code equal to that given
func (o *DeleteOrgNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete org not found response
func (o *DeleteOrgNotFound) Code() int {
	return 404
}

func (o *DeleteOrgNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgNotFound %s", 404, payload)
}

func (o *DeleteOrgNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgNotFound %s", 404, payload)
}

func (o *DeleteOrgNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteOrgNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgInternalServerError creates a DeleteOrgInternalServerError with default headers values
func NewDeleteOrgInternalServerError() *DeleteOrgInternalServerError {
	return &DeleteOrgInternalServerError{}
}

/*
DeleteOrgInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteOrgInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete org internal server error response has a 2xx status code
func (o *DeleteOrgInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org internal server error response has a 3xx status code
func (o *DeleteOrgInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org internal server error response has a 4xx status code
func (o *DeleteOrgInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete org internal server error response has a 5xx status code
func (o *DeleteOrgInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete org internal server error response a status code equal to that given
func (o *DeleteOrgInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete org internal server error response
func (o *DeleteOrgInternalServerError) Code() int {
	return 500
}

func (o *DeleteOrgInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgInternalServerError %s", 500, payload)
}

func (o *DeleteOrgInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orgs/current][%d] deleteOrgInternalServerError %s", 500, payload)
}

func (o *DeleteOrgInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteOrgInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
