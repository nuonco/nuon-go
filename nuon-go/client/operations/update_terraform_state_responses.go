// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// UpdateTerraformStateReader is a Reader for the UpdateTerraformState structure.
type UpdateTerraformStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTerraformStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTerraformStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTerraformStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateTerraformStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateTerraformStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTerraformStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateTerraformStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/terraform-backend] UpdateTerraformState", response, response.Code())
	}
}

// NewUpdateTerraformStateOK creates a UpdateTerraformStateOK with default headers values
func NewUpdateTerraformStateOK() *UpdateTerraformStateOK {
	return &UpdateTerraformStateOK{}
}

/*
UpdateTerraformStateOK describes a response with status code 200, with default header values.

OK
*/
type UpdateTerraformStateOK struct {
	Payload *models.AppTerraformWorkspaceState
}

// IsSuccess returns true when this update terraform state o k response has a 2xx status code
func (o *UpdateTerraformStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update terraform state o k response has a 3xx status code
func (o *UpdateTerraformStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state o k response has a 4xx status code
func (o *UpdateTerraformStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update terraform state o k response has a 5xx status code
func (o *UpdateTerraformStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state o k response a status code equal to that given
func (o *UpdateTerraformStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update terraform state o k response
func (o *UpdateTerraformStateOK) Code() int {
	return 200
}

func (o *UpdateTerraformStateOK) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateOK  %+v", 200, o.Payload)
}

func (o *UpdateTerraformStateOK) String() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateOK  %+v", 200, o.Payload)
}

func (o *UpdateTerraformStateOK) GetPayload() *models.AppTerraformWorkspaceState {
	return o.Payload
}

func (o *UpdateTerraformStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppTerraformWorkspaceState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateBadRequest creates a UpdateTerraformStateBadRequest with default headers values
func NewUpdateTerraformStateBadRequest() *UpdateTerraformStateBadRequest {
	return &UpdateTerraformStateBadRequest{}
}

/*
UpdateTerraformStateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateTerraformStateBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state bad request response has a 2xx status code
func (o *UpdateTerraformStateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state bad request response has a 3xx status code
func (o *UpdateTerraformStateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state bad request response has a 4xx status code
func (o *UpdateTerraformStateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state bad request response has a 5xx status code
func (o *UpdateTerraformStateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state bad request response a status code equal to that given
func (o *UpdateTerraformStateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update terraform state bad request response
func (o *UpdateTerraformStateBadRequest) Code() int {
	return 400
}

func (o *UpdateTerraformStateBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTerraformStateBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTerraformStateBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateUnauthorized creates a UpdateTerraformStateUnauthorized with default headers values
func NewUpdateTerraformStateUnauthorized() *UpdateTerraformStateUnauthorized {
	return &UpdateTerraformStateUnauthorized{}
}

/*
UpdateTerraformStateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateTerraformStateUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state unauthorized response has a 2xx status code
func (o *UpdateTerraformStateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state unauthorized response has a 3xx status code
func (o *UpdateTerraformStateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state unauthorized response has a 4xx status code
func (o *UpdateTerraformStateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state unauthorized response has a 5xx status code
func (o *UpdateTerraformStateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state unauthorized response a status code equal to that given
func (o *UpdateTerraformStateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update terraform state unauthorized response
func (o *UpdateTerraformStateUnauthorized) Code() int {
	return 401
}

func (o *UpdateTerraformStateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateTerraformStateUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateTerraformStateUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateForbidden creates a UpdateTerraformStateForbidden with default headers values
func NewUpdateTerraformStateForbidden() *UpdateTerraformStateForbidden {
	return &UpdateTerraformStateForbidden{}
}

/*
UpdateTerraformStateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateTerraformStateForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state forbidden response has a 2xx status code
func (o *UpdateTerraformStateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state forbidden response has a 3xx status code
func (o *UpdateTerraformStateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state forbidden response has a 4xx status code
func (o *UpdateTerraformStateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state forbidden response has a 5xx status code
func (o *UpdateTerraformStateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state forbidden response a status code equal to that given
func (o *UpdateTerraformStateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update terraform state forbidden response
func (o *UpdateTerraformStateForbidden) Code() int {
	return 403
}

func (o *UpdateTerraformStateForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateForbidden  %+v", 403, o.Payload)
}

func (o *UpdateTerraformStateForbidden) String() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateForbidden  %+v", 403, o.Payload)
}

func (o *UpdateTerraformStateForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateNotFound creates a UpdateTerraformStateNotFound with default headers values
func NewUpdateTerraformStateNotFound() *UpdateTerraformStateNotFound {
	return &UpdateTerraformStateNotFound{}
}

/*
UpdateTerraformStateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateTerraformStateNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state not found response has a 2xx status code
func (o *UpdateTerraformStateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state not found response has a 3xx status code
func (o *UpdateTerraformStateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state not found response has a 4xx status code
func (o *UpdateTerraformStateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state not found response has a 5xx status code
func (o *UpdateTerraformStateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state not found response a status code equal to that given
func (o *UpdateTerraformStateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update terraform state not found response
func (o *UpdateTerraformStateNotFound) Code() int {
	return 404
}

func (o *UpdateTerraformStateNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTerraformStateNotFound) String() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTerraformStateNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateInternalServerError creates a UpdateTerraformStateInternalServerError with default headers values
func NewUpdateTerraformStateInternalServerError() *UpdateTerraformStateInternalServerError {
	return &UpdateTerraformStateInternalServerError{}
}

/*
UpdateTerraformStateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateTerraformStateInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state internal server error response has a 2xx status code
func (o *UpdateTerraformStateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state internal server error response has a 3xx status code
func (o *UpdateTerraformStateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state internal server error response has a 4xx status code
func (o *UpdateTerraformStateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update terraform state internal server error response has a 5xx status code
func (o *UpdateTerraformStateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update terraform state internal server error response a status code equal to that given
func (o *UpdateTerraformStateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update terraform state internal server error response
func (o *UpdateTerraformStateInternalServerError) Code() int {
	return 500
}

func (o *UpdateTerraformStateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateTerraformStateInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/terraform-backend][%d] updateTerraformStateInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateTerraformStateInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
