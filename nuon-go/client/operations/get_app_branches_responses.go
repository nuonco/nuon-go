// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppBranchesReader is a Reader for the GetAppBranches structure.
type GetAppBranchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppBranchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppBranchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppBranchesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppBranchesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppBranchesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppBranchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppBranchesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/branches] GetAppBranches", response, response.Code())
	}
}

// NewGetAppBranchesOK creates a GetAppBranchesOK with default headers values
func NewGetAppBranchesOK() *GetAppBranchesOK {
	return &GetAppBranchesOK{}
}

/*
GetAppBranchesOK describes a response with status code 200, with default header values.

OK
*/
type GetAppBranchesOK struct {
	Payload []*models.AppAppBranch
}

// IsSuccess returns true when this get app branches o k response has a 2xx status code
func (o *GetAppBranchesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app branches o k response has a 3xx status code
func (o *GetAppBranchesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app branches o k response has a 4xx status code
func (o *GetAppBranchesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app branches o k response has a 5xx status code
func (o *GetAppBranchesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app branches o k response a status code equal to that given
func (o *GetAppBranchesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app branches o k response
func (o *GetAppBranchesOK) Code() int {
	return 200
}

func (o *GetAppBranchesOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesOK  %+v", 200, o.Payload)
}

func (o *GetAppBranchesOK) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesOK  %+v", 200, o.Payload)
}

func (o *GetAppBranchesOK) GetPayload() []*models.AppAppBranch {
	return o.Payload
}

func (o *GetAppBranchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppBranchesBadRequest creates a GetAppBranchesBadRequest with default headers values
func NewGetAppBranchesBadRequest() *GetAppBranchesBadRequest {
	return &GetAppBranchesBadRequest{}
}

/*
GetAppBranchesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppBranchesBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app branches bad request response has a 2xx status code
func (o *GetAppBranchesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app branches bad request response has a 3xx status code
func (o *GetAppBranchesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app branches bad request response has a 4xx status code
func (o *GetAppBranchesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app branches bad request response has a 5xx status code
func (o *GetAppBranchesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app branches bad request response a status code equal to that given
func (o *GetAppBranchesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app branches bad request response
func (o *GetAppBranchesBadRequest) Code() int {
	return 400
}

func (o *GetAppBranchesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppBranchesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppBranchesBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppBranchesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppBranchesUnauthorized creates a GetAppBranchesUnauthorized with default headers values
func NewGetAppBranchesUnauthorized() *GetAppBranchesUnauthorized {
	return &GetAppBranchesUnauthorized{}
}

/*
GetAppBranchesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppBranchesUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app branches unauthorized response has a 2xx status code
func (o *GetAppBranchesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app branches unauthorized response has a 3xx status code
func (o *GetAppBranchesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app branches unauthorized response has a 4xx status code
func (o *GetAppBranchesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app branches unauthorized response has a 5xx status code
func (o *GetAppBranchesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app branches unauthorized response a status code equal to that given
func (o *GetAppBranchesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app branches unauthorized response
func (o *GetAppBranchesUnauthorized) Code() int {
	return 401
}

func (o *GetAppBranchesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppBranchesUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppBranchesUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppBranchesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppBranchesForbidden creates a GetAppBranchesForbidden with default headers values
func NewGetAppBranchesForbidden() *GetAppBranchesForbidden {
	return &GetAppBranchesForbidden{}
}

/*
GetAppBranchesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppBranchesForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app branches forbidden response has a 2xx status code
func (o *GetAppBranchesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app branches forbidden response has a 3xx status code
func (o *GetAppBranchesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app branches forbidden response has a 4xx status code
func (o *GetAppBranchesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app branches forbidden response has a 5xx status code
func (o *GetAppBranchesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app branches forbidden response a status code equal to that given
func (o *GetAppBranchesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app branches forbidden response
func (o *GetAppBranchesForbidden) Code() int {
	return 403
}

func (o *GetAppBranchesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesForbidden  %+v", 403, o.Payload)
}

func (o *GetAppBranchesForbidden) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesForbidden  %+v", 403, o.Payload)
}

func (o *GetAppBranchesForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppBranchesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppBranchesNotFound creates a GetAppBranchesNotFound with default headers values
func NewGetAppBranchesNotFound() *GetAppBranchesNotFound {
	return &GetAppBranchesNotFound{}
}

/*
GetAppBranchesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppBranchesNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app branches not found response has a 2xx status code
func (o *GetAppBranchesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app branches not found response has a 3xx status code
func (o *GetAppBranchesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app branches not found response has a 4xx status code
func (o *GetAppBranchesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app branches not found response has a 5xx status code
func (o *GetAppBranchesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app branches not found response a status code equal to that given
func (o *GetAppBranchesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app branches not found response
func (o *GetAppBranchesNotFound) Code() int {
	return 404
}

func (o *GetAppBranchesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesNotFound  %+v", 404, o.Payload)
}

func (o *GetAppBranchesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesNotFound  %+v", 404, o.Payload)
}

func (o *GetAppBranchesNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppBranchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppBranchesInternalServerError creates a GetAppBranchesInternalServerError with default headers values
func NewGetAppBranchesInternalServerError() *GetAppBranchesInternalServerError {
	return &GetAppBranchesInternalServerError{}
}

/*
GetAppBranchesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppBranchesInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app branches internal server error response has a 2xx status code
func (o *GetAppBranchesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app branches internal server error response has a 3xx status code
func (o *GetAppBranchesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app branches internal server error response has a 4xx status code
func (o *GetAppBranchesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app branches internal server error response has a 5xx status code
func (o *GetAppBranchesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app branches internal server error response a status code equal to that given
func (o *GetAppBranchesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app branches internal server error response
func (o *GetAppBranchesInternalServerError) Code() int {
	return 500
}

func (o *GetAppBranchesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppBranchesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/branches][%d] getAppBranchesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppBranchesInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppBranchesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
