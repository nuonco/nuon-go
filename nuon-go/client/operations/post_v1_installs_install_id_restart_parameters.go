// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// NewPostV1InstallsInstallIDRestartParams creates a new PostV1InstallsInstallIDRestartParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostV1InstallsInstallIDRestartParams() *PostV1InstallsInstallIDRestartParams {
	return &PostV1InstallsInstallIDRestartParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1InstallsInstallIDRestartParamsWithTimeout creates a new PostV1InstallsInstallIDRestartParams object
// with the ability to set a timeout on a request.
func NewPostV1InstallsInstallIDRestartParamsWithTimeout(timeout time.Duration) *PostV1InstallsInstallIDRestartParams {
	return &PostV1InstallsInstallIDRestartParams{
		timeout: timeout,
	}
}

// NewPostV1InstallsInstallIDRestartParamsWithContext creates a new PostV1InstallsInstallIDRestartParams object
// with the ability to set a context for a request.
func NewPostV1InstallsInstallIDRestartParamsWithContext(ctx context.Context) *PostV1InstallsInstallIDRestartParams {
	return &PostV1InstallsInstallIDRestartParams{
		Context: ctx,
	}
}

// NewPostV1InstallsInstallIDRestartParamsWithHTTPClient creates a new PostV1InstallsInstallIDRestartParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostV1InstallsInstallIDRestartParamsWithHTTPClient(client *http.Client) *PostV1InstallsInstallIDRestartParams {
	return &PostV1InstallsInstallIDRestartParams{
		HTTPClient: client,
	}
}

/*
PostV1InstallsInstallIDRestartParams contains all the parameters to send to the API endpoint

	for the post v1 installs install ID restart operation.

	Typically these are written to a http.Request.
*/
type PostV1InstallsInstallIDRestartParams struct {

	/* InstallID.

	   install ID
	*/
	InstallID string

	/* Req.

	   Input
	*/
	Req models.ServiceRestartInstallRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post v1 installs install ID restart params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1InstallsInstallIDRestartParams) WithDefaults() *PostV1InstallsInstallIDRestartParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post v1 installs install ID restart params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1InstallsInstallIDRestartParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) WithTimeout(timeout time.Duration) *PostV1InstallsInstallIDRestartParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) WithContext(ctx context.Context) *PostV1InstallsInstallIDRestartParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) WithHTTPClient(client *http.Client) *PostV1InstallsInstallIDRestartParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInstallID adds the installID to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) WithInstallID(installID string) *PostV1InstallsInstallIDRestartParams {
	o.SetInstallID(installID)
	return o
}

// SetInstallID adds the installId to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) SetInstallID(installID string) {
	o.InstallID = installID
}

// WithReq adds the req to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) WithReq(req models.ServiceRestartInstallRequest) *PostV1InstallsInstallIDRestartParams {
	o.SetReq(req)
	return o
}

// SetReq adds the req to the post v1 installs install ID restart params
func (o *PostV1InstallsInstallIDRestartParams) SetReq(req models.ServiceRestartInstallRequest) {
	o.Req = req
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1InstallsInstallIDRestartParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param install_id
	if err := r.SetPathParam("install_id", o.InstallID); err != nil {
		return err
	}
	if o.Req != nil {
		if err := r.SetBodyParam(o.Req); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
