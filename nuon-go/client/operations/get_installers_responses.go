// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallersReader is a Reader for the GetInstallers structure.
type GetInstallersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installers] GetInstallers", response, response.Code())
	}
}

// NewGetInstallersOK creates a GetInstallersOK with default headers values
func NewGetInstallersOK() *GetInstallersOK {
	return &GetInstallersOK{}
}

/*
GetInstallersOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallersOK struct {
	Payload []*models.AppInstaller
}

// IsSuccess returns true when this get installers o k response has a 2xx status code
func (o *GetInstallersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get installers o k response has a 3xx status code
func (o *GetInstallersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installers o k response has a 4xx status code
func (o *GetInstallersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get installers o k response has a 5xx status code
func (o *GetInstallersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get installers o k response a status code equal to that given
func (o *GetInstallersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get installers o k response
func (o *GetInstallersOK) Code() int {
	return 200
}

func (o *GetInstallersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersOK %s", 200, payload)
}

func (o *GetInstallersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersOK %s", 200, payload)
}

func (o *GetInstallersOK) GetPayload() []*models.AppInstaller {
	return o.Payload
}

func (o *GetInstallersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallersBadRequest creates a GetInstallersBadRequest with default headers values
func NewGetInstallersBadRequest() *GetInstallersBadRequest {
	return &GetInstallersBadRequest{}
}

/*
GetInstallersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallersBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installers bad request response has a 2xx status code
func (o *GetInstallersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installers bad request response has a 3xx status code
func (o *GetInstallersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installers bad request response has a 4xx status code
func (o *GetInstallersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installers bad request response has a 5xx status code
func (o *GetInstallersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get installers bad request response a status code equal to that given
func (o *GetInstallersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get installers bad request response
func (o *GetInstallersBadRequest) Code() int {
	return 400
}

func (o *GetInstallersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersBadRequest %s", 400, payload)
}

func (o *GetInstallersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersBadRequest %s", 400, payload)
}

func (o *GetInstallersBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallersUnauthorized creates a GetInstallersUnauthorized with default headers values
func NewGetInstallersUnauthorized() *GetInstallersUnauthorized {
	return &GetInstallersUnauthorized{}
}

/*
GetInstallersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallersUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installers unauthorized response has a 2xx status code
func (o *GetInstallersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installers unauthorized response has a 3xx status code
func (o *GetInstallersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installers unauthorized response has a 4xx status code
func (o *GetInstallersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installers unauthorized response has a 5xx status code
func (o *GetInstallersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get installers unauthorized response a status code equal to that given
func (o *GetInstallersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get installers unauthorized response
func (o *GetInstallersUnauthorized) Code() int {
	return 401
}

func (o *GetInstallersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersUnauthorized %s", 401, payload)
}

func (o *GetInstallersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersUnauthorized %s", 401, payload)
}

func (o *GetInstallersUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallersForbidden creates a GetInstallersForbidden with default headers values
func NewGetInstallersForbidden() *GetInstallersForbidden {
	return &GetInstallersForbidden{}
}

/*
GetInstallersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallersForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installers forbidden response has a 2xx status code
func (o *GetInstallersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installers forbidden response has a 3xx status code
func (o *GetInstallersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installers forbidden response has a 4xx status code
func (o *GetInstallersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installers forbidden response has a 5xx status code
func (o *GetInstallersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get installers forbidden response a status code equal to that given
func (o *GetInstallersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get installers forbidden response
func (o *GetInstallersForbidden) Code() int {
	return 403
}

func (o *GetInstallersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersForbidden %s", 403, payload)
}

func (o *GetInstallersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersForbidden %s", 403, payload)
}

func (o *GetInstallersForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallersNotFound creates a GetInstallersNotFound with default headers values
func NewGetInstallersNotFound() *GetInstallersNotFound {
	return &GetInstallersNotFound{}
}

/*
GetInstallersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallersNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installers not found response has a 2xx status code
func (o *GetInstallersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installers not found response has a 3xx status code
func (o *GetInstallersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installers not found response has a 4xx status code
func (o *GetInstallersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get installers not found response has a 5xx status code
func (o *GetInstallersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get installers not found response a status code equal to that given
func (o *GetInstallersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get installers not found response
func (o *GetInstallersNotFound) Code() int {
	return 404
}

func (o *GetInstallersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersNotFound %s", 404, payload)
}

func (o *GetInstallersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersNotFound %s", 404, payload)
}

func (o *GetInstallersNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallersInternalServerError creates a GetInstallersInternalServerError with default headers values
func NewGetInstallersInternalServerError() *GetInstallersInternalServerError {
	return &GetInstallersInternalServerError{}
}

/*
GetInstallersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallersInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get installers internal server error response has a 2xx status code
func (o *GetInstallersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get installers internal server error response has a 3xx status code
func (o *GetInstallersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get installers internal server error response has a 4xx status code
func (o *GetInstallersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get installers internal server error response has a 5xx status code
func (o *GetInstallersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get installers internal server error response a status code equal to that given
func (o *GetInstallersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get installers internal server error response
func (o *GetInstallersInternalServerError) Code() int {
	return 500
}

func (o *GetInstallersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersInternalServerError %s", 500, payload)
}

func (o *GetInstallersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installers][%d] getInstallersInternalServerError %s", 500, payload)
}

func (o *GetInstallersInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
