// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetConfigSchemaReader is a Reader for the GetConfigSchema structure.
type GetConfigSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConfigSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConfigSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConfigSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConfigSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConfigSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/general/config-schema] GetConfigSchema", response, response.Code())
	}
}

// NewGetConfigSchemaOK creates a GetConfigSchemaOK with default headers values
func NewGetConfigSchemaOK() *GetConfigSchemaOK {
	return &GetConfigSchemaOK{}
}

/*
GetConfigSchemaOK describes a response with status code 200, with default header values.

OK
*/
type GetConfigSchemaOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get config schema o k response has a 2xx status code
func (o *GetConfigSchemaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get config schema o k response has a 3xx status code
func (o *GetConfigSchemaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config schema o k response has a 4xx status code
func (o *GetConfigSchemaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config schema o k response has a 5xx status code
func (o *GetConfigSchemaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get config schema o k response a status code equal to that given
func (o *GetConfigSchemaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get config schema o k response
func (o *GetConfigSchemaOK) Code() int {
	return 200
}

func (o *GetConfigSchemaOK) Error() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaOK  %+v", 200, o.Payload)
}

func (o *GetConfigSchemaOK) String() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaOK  %+v", 200, o.Payload)
}

func (o *GetConfigSchemaOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConfigSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigSchemaBadRequest creates a GetConfigSchemaBadRequest with default headers values
func NewGetConfigSchemaBadRequest() *GetConfigSchemaBadRequest {
	return &GetConfigSchemaBadRequest{}
}

/*
GetConfigSchemaBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetConfigSchemaBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get config schema bad request response has a 2xx status code
func (o *GetConfigSchemaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config schema bad request response has a 3xx status code
func (o *GetConfigSchemaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config schema bad request response has a 4xx status code
func (o *GetConfigSchemaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config schema bad request response has a 5xx status code
func (o *GetConfigSchemaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get config schema bad request response a status code equal to that given
func (o *GetConfigSchemaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get config schema bad request response
func (o *GetConfigSchemaBadRequest) Code() int {
	return 400
}

func (o *GetConfigSchemaBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaBadRequest  %+v", 400, o.Payload)
}

func (o *GetConfigSchemaBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaBadRequest  %+v", 400, o.Payload)
}

func (o *GetConfigSchemaBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetConfigSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigSchemaUnauthorized creates a GetConfigSchemaUnauthorized with default headers values
func NewGetConfigSchemaUnauthorized() *GetConfigSchemaUnauthorized {
	return &GetConfigSchemaUnauthorized{}
}

/*
GetConfigSchemaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetConfigSchemaUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get config schema unauthorized response has a 2xx status code
func (o *GetConfigSchemaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config schema unauthorized response has a 3xx status code
func (o *GetConfigSchemaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config schema unauthorized response has a 4xx status code
func (o *GetConfigSchemaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config schema unauthorized response has a 5xx status code
func (o *GetConfigSchemaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get config schema unauthorized response a status code equal to that given
func (o *GetConfigSchemaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get config schema unauthorized response
func (o *GetConfigSchemaUnauthorized) Code() int {
	return 401
}

func (o *GetConfigSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConfigSchemaUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConfigSchemaUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetConfigSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigSchemaForbidden creates a GetConfigSchemaForbidden with default headers values
func NewGetConfigSchemaForbidden() *GetConfigSchemaForbidden {
	return &GetConfigSchemaForbidden{}
}

/*
GetConfigSchemaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetConfigSchemaForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get config schema forbidden response has a 2xx status code
func (o *GetConfigSchemaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config schema forbidden response has a 3xx status code
func (o *GetConfigSchemaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config schema forbidden response has a 4xx status code
func (o *GetConfigSchemaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config schema forbidden response has a 5xx status code
func (o *GetConfigSchemaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get config schema forbidden response a status code equal to that given
func (o *GetConfigSchemaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get config schema forbidden response
func (o *GetConfigSchemaForbidden) Code() int {
	return 403
}

func (o *GetConfigSchemaForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigSchemaForbidden) String() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaForbidden  %+v", 403, o.Payload)
}

func (o *GetConfigSchemaForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetConfigSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigSchemaNotFound creates a GetConfigSchemaNotFound with default headers values
func NewGetConfigSchemaNotFound() *GetConfigSchemaNotFound {
	return &GetConfigSchemaNotFound{}
}

/*
GetConfigSchemaNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetConfigSchemaNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get config schema not found response has a 2xx status code
func (o *GetConfigSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config schema not found response has a 3xx status code
func (o *GetConfigSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config schema not found response has a 4xx status code
func (o *GetConfigSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config schema not found response has a 5xx status code
func (o *GetConfigSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get config schema not found response a status code equal to that given
func (o *GetConfigSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get config schema not found response
func (o *GetConfigSchemaNotFound) Code() int {
	return 404
}

func (o *GetConfigSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigSchemaNotFound) String() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaNotFound  %+v", 404, o.Payload)
}

func (o *GetConfigSchemaNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetConfigSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigSchemaInternalServerError creates a GetConfigSchemaInternalServerError with default headers values
func NewGetConfigSchemaInternalServerError() *GetConfigSchemaInternalServerError {
	return &GetConfigSchemaInternalServerError{}
}

/*
GetConfigSchemaInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetConfigSchemaInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get config schema internal server error response has a 2xx status code
func (o *GetConfigSchemaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config schema internal server error response has a 3xx status code
func (o *GetConfigSchemaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config schema internal server error response has a 4xx status code
func (o *GetConfigSchemaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config schema internal server error response has a 5xx status code
func (o *GetConfigSchemaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get config schema internal server error response a status code equal to that given
func (o *GetConfigSchemaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get config schema internal server error response
func (o *GetConfigSchemaInternalServerError) Code() int {
	return 500
}

func (o *GetConfigSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigSchemaInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/general/config-schema][%d] getConfigSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigSchemaInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetConfigSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
