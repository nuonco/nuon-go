// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateAppBreakGlassConfigReader is a Reader for the CreateAppBreakGlassConfig structure.
type CreateAppBreakGlassConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAppBreakGlassConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAppBreakGlassConfigCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAppBreakGlassConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAppBreakGlassConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAppBreakGlassConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAppBreakGlassConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAppBreakGlassConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/apps/{app_id}/break-glass-configs] CreateAppBreakGlassConfig", response, response.Code())
	}
}

// NewCreateAppBreakGlassConfigCreated creates a CreateAppBreakGlassConfigCreated with default headers values
func NewCreateAppBreakGlassConfigCreated() *CreateAppBreakGlassConfigCreated {
	return &CreateAppBreakGlassConfigCreated{}
}

/*
CreateAppBreakGlassConfigCreated describes a response with status code 201, with default header values.

Created
*/
type CreateAppBreakGlassConfigCreated struct {
	Payload *models.AppAppBreakGlassConfig
}

// IsSuccess returns true when this create app break glass config created response has a 2xx status code
func (o *CreateAppBreakGlassConfigCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create app break glass config created response has a 3xx status code
func (o *CreateAppBreakGlassConfigCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create app break glass config created response has a 4xx status code
func (o *CreateAppBreakGlassConfigCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create app break glass config created response has a 5xx status code
func (o *CreateAppBreakGlassConfigCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create app break glass config created response a status code equal to that given
func (o *CreateAppBreakGlassConfigCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create app break glass config created response
func (o *CreateAppBreakGlassConfigCreated) Code() int {
	return 201
}

func (o *CreateAppBreakGlassConfigCreated) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigCreated  %+v", 201, o.Payload)
}

func (o *CreateAppBreakGlassConfigCreated) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigCreated  %+v", 201, o.Payload)
}

func (o *CreateAppBreakGlassConfigCreated) GetPayload() *models.AppAppBreakGlassConfig {
	return o.Payload
}

func (o *CreateAppBreakGlassConfigCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAppBreakGlassConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppBreakGlassConfigBadRequest creates a CreateAppBreakGlassConfigBadRequest with default headers values
func NewCreateAppBreakGlassConfigBadRequest() *CreateAppBreakGlassConfigBadRequest {
	return &CreateAppBreakGlassConfigBadRequest{}
}

/*
CreateAppBreakGlassConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateAppBreakGlassConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create app break glass config bad request response has a 2xx status code
func (o *CreateAppBreakGlassConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create app break glass config bad request response has a 3xx status code
func (o *CreateAppBreakGlassConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create app break glass config bad request response has a 4xx status code
func (o *CreateAppBreakGlassConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create app break glass config bad request response has a 5xx status code
func (o *CreateAppBreakGlassConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create app break glass config bad request response a status code equal to that given
func (o *CreateAppBreakGlassConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create app break glass config bad request response
func (o *CreateAppBreakGlassConfigBadRequest) Code() int {
	return 400
}

func (o *CreateAppBreakGlassConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAppBreakGlassConfigBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAppBreakGlassConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateAppBreakGlassConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppBreakGlassConfigUnauthorized creates a CreateAppBreakGlassConfigUnauthorized with default headers values
func NewCreateAppBreakGlassConfigUnauthorized() *CreateAppBreakGlassConfigUnauthorized {
	return &CreateAppBreakGlassConfigUnauthorized{}
}

/*
CreateAppBreakGlassConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateAppBreakGlassConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create app break glass config unauthorized response has a 2xx status code
func (o *CreateAppBreakGlassConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create app break glass config unauthorized response has a 3xx status code
func (o *CreateAppBreakGlassConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create app break glass config unauthorized response has a 4xx status code
func (o *CreateAppBreakGlassConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create app break glass config unauthorized response has a 5xx status code
func (o *CreateAppBreakGlassConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create app break glass config unauthorized response a status code equal to that given
func (o *CreateAppBreakGlassConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create app break glass config unauthorized response
func (o *CreateAppBreakGlassConfigUnauthorized) Code() int {
	return 401
}

func (o *CreateAppBreakGlassConfigUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateAppBreakGlassConfigUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateAppBreakGlassConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateAppBreakGlassConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppBreakGlassConfigForbidden creates a CreateAppBreakGlassConfigForbidden with default headers values
func NewCreateAppBreakGlassConfigForbidden() *CreateAppBreakGlassConfigForbidden {
	return &CreateAppBreakGlassConfigForbidden{}
}

/*
CreateAppBreakGlassConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateAppBreakGlassConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create app break glass config forbidden response has a 2xx status code
func (o *CreateAppBreakGlassConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create app break glass config forbidden response has a 3xx status code
func (o *CreateAppBreakGlassConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create app break glass config forbidden response has a 4xx status code
func (o *CreateAppBreakGlassConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create app break glass config forbidden response has a 5xx status code
func (o *CreateAppBreakGlassConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create app break glass config forbidden response a status code equal to that given
func (o *CreateAppBreakGlassConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create app break glass config forbidden response
func (o *CreateAppBreakGlassConfigForbidden) Code() int {
	return 403
}

func (o *CreateAppBreakGlassConfigForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigForbidden  %+v", 403, o.Payload)
}

func (o *CreateAppBreakGlassConfigForbidden) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigForbidden  %+v", 403, o.Payload)
}

func (o *CreateAppBreakGlassConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateAppBreakGlassConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppBreakGlassConfigNotFound creates a CreateAppBreakGlassConfigNotFound with default headers values
func NewCreateAppBreakGlassConfigNotFound() *CreateAppBreakGlassConfigNotFound {
	return &CreateAppBreakGlassConfigNotFound{}
}

/*
CreateAppBreakGlassConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateAppBreakGlassConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create app break glass config not found response has a 2xx status code
func (o *CreateAppBreakGlassConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create app break glass config not found response has a 3xx status code
func (o *CreateAppBreakGlassConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create app break glass config not found response has a 4xx status code
func (o *CreateAppBreakGlassConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create app break glass config not found response has a 5xx status code
func (o *CreateAppBreakGlassConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create app break glass config not found response a status code equal to that given
func (o *CreateAppBreakGlassConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create app break glass config not found response
func (o *CreateAppBreakGlassConfigNotFound) Code() int {
	return 404
}

func (o *CreateAppBreakGlassConfigNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigNotFound  %+v", 404, o.Payload)
}

func (o *CreateAppBreakGlassConfigNotFound) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigNotFound  %+v", 404, o.Payload)
}

func (o *CreateAppBreakGlassConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateAppBreakGlassConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppBreakGlassConfigInternalServerError creates a CreateAppBreakGlassConfigInternalServerError with default headers values
func NewCreateAppBreakGlassConfigInternalServerError() *CreateAppBreakGlassConfigInternalServerError {
	return &CreateAppBreakGlassConfigInternalServerError{}
}

/*
CreateAppBreakGlassConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateAppBreakGlassConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create app break glass config internal server error response has a 2xx status code
func (o *CreateAppBreakGlassConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create app break glass config internal server error response has a 3xx status code
func (o *CreateAppBreakGlassConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create app break glass config internal server error response has a 4xx status code
func (o *CreateAppBreakGlassConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create app break glass config internal server error response has a 5xx status code
func (o *CreateAppBreakGlassConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create app break glass config internal server error response a status code equal to that given
func (o *CreateAppBreakGlassConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create app break glass config internal server error response
func (o *CreateAppBreakGlassConfigInternalServerError) Code() int {
	return 500
}

func (o *CreateAppBreakGlassConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAppBreakGlassConfigInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/break-glass-configs][%d] createAppBreakGlassConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAppBreakGlassConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateAppBreakGlassConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
