// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteV1AppsAppIDReader is a Reader for the DeleteV1AppsAppID structure.
type DeleteV1AppsAppIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteV1AppsAppIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteV1AppsAppIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteV1AppsAppIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteV1AppsAppIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteV1AppsAppIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteV1AppsAppIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteV1AppsAppIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/apps/{app_id}] DeleteV1AppsAppID", response, response.Code())
	}
}

// NewDeleteV1AppsAppIDOK creates a DeleteV1AppsAppIDOK with default headers values
func NewDeleteV1AppsAppIDOK() *DeleteV1AppsAppIDOK {
	return &DeleteV1AppsAppIDOK{}
}

/*
DeleteV1AppsAppIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteV1AppsAppIDOK struct {
	Payload bool
}

// IsSuccess returns true when this delete v1 apps app Id o k response has a 2xx status code
func (o *DeleteV1AppsAppIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete v1 apps app Id o k response has a 3xx status code
func (o *DeleteV1AppsAppIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 apps app Id o k response has a 4xx status code
func (o *DeleteV1AppsAppIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete v1 apps app Id o k response has a 5xx status code
func (o *DeleteV1AppsAppIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 apps app Id o k response a status code equal to that given
func (o *DeleteV1AppsAppIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete v1 apps app Id o k response
func (o *DeleteV1AppsAppIDOK) Code() int {
	return 200
}

func (o *DeleteV1AppsAppIDOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdOK  %+v", 200, o.Payload)
}

func (o *DeleteV1AppsAppIDOK) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdOK  %+v", 200, o.Payload)
}

func (o *DeleteV1AppsAppIDOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteV1AppsAppIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1AppsAppIDBadRequest creates a DeleteV1AppsAppIDBadRequest with default headers values
func NewDeleteV1AppsAppIDBadRequest() *DeleteV1AppsAppIDBadRequest {
	return &DeleteV1AppsAppIDBadRequest{}
}

/*
DeleteV1AppsAppIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteV1AppsAppIDBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete v1 apps app Id bad request response has a 2xx status code
func (o *DeleteV1AppsAppIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 apps app Id bad request response has a 3xx status code
func (o *DeleteV1AppsAppIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 apps app Id bad request response has a 4xx status code
func (o *DeleteV1AppsAppIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete v1 apps app Id bad request response has a 5xx status code
func (o *DeleteV1AppsAppIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 apps app Id bad request response a status code equal to that given
func (o *DeleteV1AppsAppIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete v1 apps app Id bad request response
func (o *DeleteV1AppsAppIDBadRequest) Code() int {
	return 400
}

func (o *DeleteV1AppsAppIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteV1AppsAppIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteV1AppsAppIDBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteV1AppsAppIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1AppsAppIDUnauthorized creates a DeleteV1AppsAppIDUnauthorized with default headers values
func NewDeleteV1AppsAppIDUnauthorized() *DeleteV1AppsAppIDUnauthorized {
	return &DeleteV1AppsAppIDUnauthorized{}
}

/*
DeleteV1AppsAppIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteV1AppsAppIDUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete v1 apps app Id unauthorized response has a 2xx status code
func (o *DeleteV1AppsAppIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 apps app Id unauthorized response has a 3xx status code
func (o *DeleteV1AppsAppIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 apps app Id unauthorized response has a 4xx status code
func (o *DeleteV1AppsAppIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete v1 apps app Id unauthorized response has a 5xx status code
func (o *DeleteV1AppsAppIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 apps app Id unauthorized response a status code equal to that given
func (o *DeleteV1AppsAppIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete v1 apps app Id unauthorized response
func (o *DeleteV1AppsAppIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteV1AppsAppIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteV1AppsAppIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteV1AppsAppIDUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteV1AppsAppIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1AppsAppIDForbidden creates a DeleteV1AppsAppIDForbidden with default headers values
func NewDeleteV1AppsAppIDForbidden() *DeleteV1AppsAppIDForbidden {
	return &DeleteV1AppsAppIDForbidden{}
}

/*
DeleteV1AppsAppIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteV1AppsAppIDForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete v1 apps app Id forbidden response has a 2xx status code
func (o *DeleteV1AppsAppIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 apps app Id forbidden response has a 3xx status code
func (o *DeleteV1AppsAppIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 apps app Id forbidden response has a 4xx status code
func (o *DeleteV1AppsAppIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete v1 apps app Id forbidden response has a 5xx status code
func (o *DeleteV1AppsAppIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 apps app Id forbidden response a status code equal to that given
func (o *DeleteV1AppsAppIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete v1 apps app Id forbidden response
func (o *DeleteV1AppsAppIDForbidden) Code() int {
	return 403
}

func (o *DeleteV1AppsAppIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteV1AppsAppIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteV1AppsAppIDForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteV1AppsAppIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1AppsAppIDNotFound creates a DeleteV1AppsAppIDNotFound with default headers values
func NewDeleteV1AppsAppIDNotFound() *DeleteV1AppsAppIDNotFound {
	return &DeleteV1AppsAppIDNotFound{}
}

/*
DeleteV1AppsAppIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteV1AppsAppIDNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete v1 apps app Id not found response has a 2xx status code
func (o *DeleteV1AppsAppIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 apps app Id not found response has a 3xx status code
func (o *DeleteV1AppsAppIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 apps app Id not found response has a 4xx status code
func (o *DeleteV1AppsAppIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete v1 apps app Id not found response has a 5xx status code
func (o *DeleteV1AppsAppIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 apps app Id not found response a status code equal to that given
func (o *DeleteV1AppsAppIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete v1 apps app Id not found response
func (o *DeleteV1AppsAppIDNotFound) Code() int {
	return 404
}

func (o *DeleteV1AppsAppIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteV1AppsAppIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteV1AppsAppIDNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteV1AppsAppIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteV1AppsAppIDInternalServerError creates a DeleteV1AppsAppIDInternalServerError with default headers values
func NewDeleteV1AppsAppIDInternalServerError() *DeleteV1AppsAppIDInternalServerError {
	return &DeleteV1AppsAppIDInternalServerError{}
}

/*
DeleteV1AppsAppIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteV1AppsAppIDInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete v1 apps app Id internal server error response has a 2xx status code
func (o *DeleteV1AppsAppIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete v1 apps app Id internal server error response has a 3xx status code
func (o *DeleteV1AppsAppIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 apps app Id internal server error response has a 4xx status code
func (o *DeleteV1AppsAppIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete v1 apps app Id internal server error response has a 5xx status code
func (o *DeleteV1AppsAppIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete v1 apps app Id internal server error response a status code equal to that given
func (o *DeleteV1AppsAppIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete v1 apps app Id internal server error response
func (o *DeleteV1AppsAppIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteV1AppsAppIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteV1AppsAppIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}][%d] deleteV1AppsAppIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteV1AppsAppIDInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteV1AppsAppIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
