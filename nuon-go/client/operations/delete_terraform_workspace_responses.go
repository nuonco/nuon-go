// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteTerraformWorkspaceReader is a Reader for the DeleteTerraformWorkspace structure.
type DeleteTerraformWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTerraformWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTerraformWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTerraformWorkspaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTerraformWorkspaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTerraformWorkspaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTerraformWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTerraformWorkspaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/terraform-workspace/{workspace_id}] DeleteTerraformWorkspace", response, response.Code())
	}
}

// NewDeleteTerraformWorkspaceOK creates a DeleteTerraformWorkspaceOK with default headers values
func NewDeleteTerraformWorkspaceOK() *DeleteTerraformWorkspaceOK {
	return &DeleteTerraformWorkspaceOK{}
}

/*
DeleteTerraformWorkspaceOK describes a response with status code 200, with default header values.

OK
*/
type DeleteTerraformWorkspaceOK struct {
	Payload []*models.AppTerraformWorkspace
}

// IsSuccess returns true when this delete terraform workspace o k response has a 2xx status code
func (o *DeleteTerraformWorkspaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete terraform workspace o k response has a 3xx status code
func (o *DeleteTerraformWorkspaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete terraform workspace o k response has a 4xx status code
func (o *DeleteTerraformWorkspaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete terraform workspace o k response has a 5xx status code
func (o *DeleteTerraformWorkspaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete terraform workspace o k response a status code equal to that given
func (o *DeleteTerraformWorkspaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete terraform workspace o k response
func (o *DeleteTerraformWorkspaceOK) Code() int {
	return 200
}

func (o *DeleteTerraformWorkspaceOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceOK  %+v", 200, o.Payload)
}

func (o *DeleteTerraformWorkspaceOK) String() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceOK  %+v", 200, o.Payload)
}

func (o *DeleteTerraformWorkspaceOK) GetPayload() []*models.AppTerraformWorkspace {
	return o.Payload
}

func (o *DeleteTerraformWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTerraformWorkspaceBadRequest creates a DeleteTerraformWorkspaceBadRequest with default headers values
func NewDeleteTerraformWorkspaceBadRequest() *DeleteTerraformWorkspaceBadRequest {
	return &DeleteTerraformWorkspaceBadRequest{}
}

/*
DeleteTerraformWorkspaceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteTerraformWorkspaceBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete terraform workspace bad request response has a 2xx status code
func (o *DeleteTerraformWorkspaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete terraform workspace bad request response has a 3xx status code
func (o *DeleteTerraformWorkspaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete terraform workspace bad request response has a 4xx status code
func (o *DeleteTerraformWorkspaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete terraform workspace bad request response has a 5xx status code
func (o *DeleteTerraformWorkspaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete terraform workspace bad request response a status code equal to that given
func (o *DeleteTerraformWorkspaceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete terraform workspace bad request response
func (o *DeleteTerraformWorkspaceBadRequest) Code() int {
	return 400
}

func (o *DeleteTerraformWorkspaceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTerraformWorkspaceBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTerraformWorkspaceBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteTerraformWorkspaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTerraformWorkspaceUnauthorized creates a DeleteTerraformWorkspaceUnauthorized with default headers values
func NewDeleteTerraformWorkspaceUnauthorized() *DeleteTerraformWorkspaceUnauthorized {
	return &DeleteTerraformWorkspaceUnauthorized{}
}

/*
DeleteTerraformWorkspaceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteTerraformWorkspaceUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete terraform workspace unauthorized response has a 2xx status code
func (o *DeleteTerraformWorkspaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete terraform workspace unauthorized response has a 3xx status code
func (o *DeleteTerraformWorkspaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete terraform workspace unauthorized response has a 4xx status code
func (o *DeleteTerraformWorkspaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete terraform workspace unauthorized response has a 5xx status code
func (o *DeleteTerraformWorkspaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete terraform workspace unauthorized response a status code equal to that given
func (o *DeleteTerraformWorkspaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete terraform workspace unauthorized response
func (o *DeleteTerraformWorkspaceUnauthorized) Code() int {
	return 401
}

func (o *DeleteTerraformWorkspaceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTerraformWorkspaceUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTerraformWorkspaceUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteTerraformWorkspaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTerraformWorkspaceForbidden creates a DeleteTerraformWorkspaceForbidden with default headers values
func NewDeleteTerraformWorkspaceForbidden() *DeleteTerraformWorkspaceForbidden {
	return &DeleteTerraformWorkspaceForbidden{}
}

/*
DeleteTerraformWorkspaceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteTerraformWorkspaceForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete terraform workspace forbidden response has a 2xx status code
func (o *DeleteTerraformWorkspaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete terraform workspace forbidden response has a 3xx status code
func (o *DeleteTerraformWorkspaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete terraform workspace forbidden response has a 4xx status code
func (o *DeleteTerraformWorkspaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete terraform workspace forbidden response has a 5xx status code
func (o *DeleteTerraformWorkspaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete terraform workspace forbidden response a status code equal to that given
func (o *DeleteTerraformWorkspaceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete terraform workspace forbidden response
func (o *DeleteTerraformWorkspaceForbidden) Code() int {
	return 403
}

func (o *DeleteTerraformWorkspaceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTerraformWorkspaceForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTerraformWorkspaceForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteTerraformWorkspaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTerraformWorkspaceNotFound creates a DeleteTerraformWorkspaceNotFound with default headers values
func NewDeleteTerraformWorkspaceNotFound() *DeleteTerraformWorkspaceNotFound {
	return &DeleteTerraformWorkspaceNotFound{}
}

/*
DeleteTerraformWorkspaceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteTerraformWorkspaceNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete terraform workspace not found response has a 2xx status code
func (o *DeleteTerraformWorkspaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete terraform workspace not found response has a 3xx status code
func (o *DeleteTerraformWorkspaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete terraform workspace not found response has a 4xx status code
func (o *DeleteTerraformWorkspaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete terraform workspace not found response has a 5xx status code
func (o *DeleteTerraformWorkspaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete terraform workspace not found response a status code equal to that given
func (o *DeleteTerraformWorkspaceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete terraform workspace not found response
func (o *DeleteTerraformWorkspaceNotFound) Code() int {
	return 404
}

func (o *DeleteTerraformWorkspaceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTerraformWorkspaceNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTerraformWorkspaceNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteTerraformWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTerraformWorkspaceInternalServerError creates a DeleteTerraformWorkspaceInternalServerError with default headers values
func NewDeleteTerraformWorkspaceInternalServerError() *DeleteTerraformWorkspaceInternalServerError {
	return &DeleteTerraformWorkspaceInternalServerError{}
}

/*
DeleteTerraformWorkspaceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteTerraformWorkspaceInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete terraform workspace internal server error response has a 2xx status code
func (o *DeleteTerraformWorkspaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete terraform workspace internal server error response has a 3xx status code
func (o *DeleteTerraformWorkspaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete terraform workspace internal server error response has a 4xx status code
func (o *DeleteTerraformWorkspaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete terraform workspace internal server error response has a 5xx status code
func (o *DeleteTerraformWorkspaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete terraform workspace internal server error response a status code equal to that given
func (o *DeleteTerraformWorkspaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete terraform workspace internal server error response
func (o *DeleteTerraformWorkspaceInternalServerError) Code() int {
	return 500
}

func (o *DeleteTerraformWorkspaceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTerraformWorkspaceInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/terraform-workspace/{workspace_id}][%d] deleteTerraformWorkspaceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteTerraformWorkspaceInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteTerraformWorkspaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
