// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetInstallAuditLogsParams creates a new GetInstallAuditLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInstallAuditLogsParams() *GetInstallAuditLogsParams {
	return &GetInstallAuditLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInstallAuditLogsParamsWithTimeout creates a new GetInstallAuditLogsParams object
// with the ability to set a timeout on a request.
func NewGetInstallAuditLogsParamsWithTimeout(timeout time.Duration) *GetInstallAuditLogsParams {
	return &GetInstallAuditLogsParams{
		timeout: timeout,
	}
}

// NewGetInstallAuditLogsParamsWithContext creates a new GetInstallAuditLogsParams object
// with the ability to set a context for a request.
func NewGetInstallAuditLogsParamsWithContext(ctx context.Context) *GetInstallAuditLogsParams {
	return &GetInstallAuditLogsParams{
		Context: ctx,
	}
}

// NewGetInstallAuditLogsParamsWithHTTPClient creates a new GetInstallAuditLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInstallAuditLogsParamsWithHTTPClient(client *http.Client) *GetInstallAuditLogsParams {
	return &GetInstallAuditLogsParams{
		HTTPClient: client,
	}
}

/*
GetInstallAuditLogsParams contains all the parameters to send to the API endpoint

	for the get install audit logs operation.

	Typically these are written to a http.Request.
*/
type GetInstallAuditLogsParams struct {

	/* End.

	   end timestamp for audit log range
	*/
	End string

	/* InstallID.

	   install ID
	*/
	InstallID string

	/* Start.

	   start timestamp for audit log range
	*/
	Start string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get install audit logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInstallAuditLogsParams) WithDefaults() *GetInstallAuditLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get install audit logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInstallAuditLogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get install audit logs params
func (o *GetInstallAuditLogsParams) WithTimeout(timeout time.Duration) *GetInstallAuditLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get install audit logs params
func (o *GetInstallAuditLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get install audit logs params
func (o *GetInstallAuditLogsParams) WithContext(ctx context.Context) *GetInstallAuditLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get install audit logs params
func (o *GetInstallAuditLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get install audit logs params
func (o *GetInstallAuditLogsParams) WithHTTPClient(client *http.Client) *GetInstallAuditLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get install audit logs params
func (o *GetInstallAuditLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnd adds the end to the get install audit logs params
func (o *GetInstallAuditLogsParams) WithEnd(end string) *GetInstallAuditLogsParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get install audit logs params
func (o *GetInstallAuditLogsParams) SetEnd(end string) {
	o.End = end
}

// WithInstallID adds the installID to the get install audit logs params
func (o *GetInstallAuditLogsParams) WithInstallID(installID string) *GetInstallAuditLogsParams {
	o.SetInstallID(installID)
	return o
}

// SetInstallID adds the installId to the get install audit logs params
func (o *GetInstallAuditLogsParams) SetInstallID(installID string) {
	o.InstallID = installID
}

// WithStart adds the start to the get install audit logs params
func (o *GetInstallAuditLogsParams) WithStart(start string) *GetInstallAuditLogsParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get install audit logs params
func (o *GetInstallAuditLogsParams) SetStart(start string) {
	o.Start = start
}

// WriteToRequest writes these params to a swagger request
func (o *GetInstallAuditLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param end
	qrEnd := o.End
	qEnd := qrEnd
	if qEnd != "" {

		if err := r.SetQueryParam("end", qEnd); err != nil {
			return err
		}
	}

	// path param install_id
	if err := r.SetPathParam("install_id", o.InstallID); err != nil {
		return err
	}

	// query param start
	qrStart := o.Start
	qStart := qrStart
	if qStart != "" {

		if err := r.SetQueryParam("start", qStart); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
