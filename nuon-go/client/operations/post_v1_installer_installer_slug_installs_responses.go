// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PostV1InstallerInstallerSlugInstallsReader is a Reader for the PostV1InstallerInstallerSlugInstalls structure.
type PostV1InstallerInstallerSlugInstallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1InstallerInstallerSlugInstallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1InstallerInstallerSlugInstallsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1InstallerInstallerSlugInstallsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1InstallerInstallerSlugInstallsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostV1InstallerInstallerSlugInstallsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostV1InstallerInstallerSlugInstallsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1InstallerInstallerSlugInstallsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/installer/{installer_slug}/installs] PostV1InstallerInstallerSlugInstalls", response, response.Code())
	}
}

// NewPostV1InstallerInstallerSlugInstallsCreated creates a PostV1InstallerInstallerSlugInstallsCreated with default headers values
func NewPostV1InstallerInstallerSlugInstallsCreated() *PostV1InstallerInstallerSlugInstallsCreated {
	return &PostV1InstallerInstallerSlugInstallsCreated{}
}

/*
PostV1InstallerInstallerSlugInstallsCreated describes a response with status code 201, with default header values.

Created
*/
type PostV1InstallerInstallerSlugInstallsCreated struct {
	Payload *models.AppInstall
}

// IsSuccess returns true when this post v1 installer installer slug installs created response has a 2xx status code
func (o *PostV1InstallerInstallerSlugInstallsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 installer installer slug installs created response has a 3xx status code
func (o *PostV1InstallerInstallerSlugInstallsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installer installer slug installs created response has a 4xx status code
func (o *PostV1InstallerInstallerSlugInstallsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 installer installer slug installs created response has a 5xx status code
func (o *PostV1InstallerInstallerSlugInstallsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installer installer slug installs created response a status code equal to that given
func (o *PostV1InstallerInstallerSlugInstallsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 installer installer slug installs created response
func (o *PostV1InstallerInstallerSlugInstallsCreated) Code() int {
	return 201
}

func (o *PostV1InstallerInstallerSlugInstallsCreated) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsCreated  %+v", 201, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsCreated) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsCreated  %+v", 201, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsCreated) GetPayload() *models.AppInstall {
	return o.Payload
}

func (o *PostV1InstallerInstallerSlugInstallsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallerInstallerSlugInstallsBadRequest creates a PostV1InstallerInstallerSlugInstallsBadRequest with default headers values
func NewPostV1InstallerInstallerSlugInstallsBadRequest() *PostV1InstallerInstallerSlugInstallsBadRequest {
	return &PostV1InstallerInstallerSlugInstallsBadRequest{}
}

/*
PostV1InstallerInstallerSlugInstallsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1InstallerInstallerSlugInstallsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installer installer slug installs bad request response has a 2xx status code
func (o *PostV1InstallerInstallerSlugInstallsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installer installer slug installs bad request response has a 3xx status code
func (o *PostV1InstallerInstallerSlugInstallsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installer installer slug installs bad request response has a 4xx status code
func (o *PostV1InstallerInstallerSlugInstallsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installer installer slug installs bad request response has a 5xx status code
func (o *PostV1InstallerInstallerSlugInstallsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installer installer slug installs bad request response a status code equal to that given
func (o *PostV1InstallerInstallerSlugInstallsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 installer installer slug installs bad request response
func (o *PostV1InstallerInstallerSlugInstallsBadRequest) Code() int {
	return 400
}

func (o *PostV1InstallerInstallerSlugInstallsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallerInstallerSlugInstallsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallerInstallerSlugInstallsUnauthorized creates a PostV1InstallerInstallerSlugInstallsUnauthorized with default headers values
func NewPostV1InstallerInstallerSlugInstallsUnauthorized() *PostV1InstallerInstallerSlugInstallsUnauthorized {
	return &PostV1InstallerInstallerSlugInstallsUnauthorized{}
}

/*
PostV1InstallerInstallerSlugInstallsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1InstallerInstallerSlugInstallsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installer installer slug installs unauthorized response has a 2xx status code
func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installer installer slug installs unauthorized response has a 3xx status code
func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installer installer slug installs unauthorized response has a 4xx status code
func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installer installer slug installs unauthorized response has a 5xx status code
func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installer installer slug installs unauthorized response a status code equal to that given
func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 installer installer slug installs unauthorized response
func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) Code() int {
	return 401
}

func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallerInstallerSlugInstallsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallerInstallerSlugInstallsForbidden creates a PostV1InstallerInstallerSlugInstallsForbidden with default headers values
func NewPostV1InstallerInstallerSlugInstallsForbidden() *PostV1InstallerInstallerSlugInstallsForbidden {
	return &PostV1InstallerInstallerSlugInstallsForbidden{}
}

/*
PostV1InstallerInstallerSlugInstallsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostV1InstallerInstallerSlugInstallsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installer installer slug installs forbidden response has a 2xx status code
func (o *PostV1InstallerInstallerSlugInstallsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installer installer slug installs forbidden response has a 3xx status code
func (o *PostV1InstallerInstallerSlugInstallsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installer installer slug installs forbidden response has a 4xx status code
func (o *PostV1InstallerInstallerSlugInstallsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installer installer slug installs forbidden response has a 5xx status code
func (o *PostV1InstallerInstallerSlugInstallsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installer installer slug installs forbidden response a status code equal to that given
func (o *PostV1InstallerInstallerSlugInstallsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post v1 installer installer slug installs forbidden response
func (o *PostV1InstallerInstallerSlugInstallsForbidden) Code() int {
	return 403
}

func (o *PostV1InstallerInstallerSlugInstallsForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsForbidden) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallerInstallerSlugInstallsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallerInstallerSlugInstallsNotFound creates a PostV1InstallerInstallerSlugInstallsNotFound with default headers values
func NewPostV1InstallerInstallerSlugInstallsNotFound() *PostV1InstallerInstallerSlugInstallsNotFound {
	return &PostV1InstallerInstallerSlugInstallsNotFound{}
}

/*
PostV1InstallerInstallerSlugInstallsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostV1InstallerInstallerSlugInstallsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installer installer slug installs not found response has a 2xx status code
func (o *PostV1InstallerInstallerSlugInstallsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installer installer slug installs not found response has a 3xx status code
func (o *PostV1InstallerInstallerSlugInstallsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installer installer slug installs not found response has a 4xx status code
func (o *PostV1InstallerInstallerSlugInstallsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installer installer slug installs not found response has a 5xx status code
func (o *PostV1InstallerInstallerSlugInstallsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installer installer slug installs not found response a status code equal to that given
func (o *PostV1InstallerInstallerSlugInstallsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 installer installer slug installs not found response
func (o *PostV1InstallerInstallerSlugInstallsNotFound) Code() int {
	return 404
}

func (o *PostV1InstallerInstallerSlugInstallsNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsNotFound) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallerInstallerSlugInstallsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallerInstallerSlugInstallsInternalServerError creates a PostV1InstallerInstallerSlugInstallsInternalServerError with default headers values
func NewPostV1InstallerInstallerSlugInstallsInternalServerError() *PostV1InstallerInstallerSlugInstallsInternalServerError {
	return &PostV1InstallerInstallerSlugInstallsInternalServerError{}
}

/*
PostV1InstallerInstallerSlugInstallsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1InstallerInstallerSlugInstallsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installer installer slug installs internal server error response has a 2xx status code
func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installer installer slug installs internal server error response has a 3xx status code
func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installer installer slug installs internal server error response has a 4xx status code
func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 installer installer slug installs internal server error response has a 5xx status code
func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 installer installer slug installs internal server error response a status code equal to that given
func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 installer installer slug installs internal server error response
func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) Code() int {
	return 500
}

func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/installer/{installer_slug}/installs][%d] postV1InstallerInstallerSlugInstallsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallerInstallerSlugInstallsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
