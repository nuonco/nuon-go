// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetComponentLatestConfigReader is a Reader for the GetComponentLatestConfig structure.
type GetComponentLatestConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentLatestConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentLatestConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetComponentLatestConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetComponentLatestConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetComponentLatestConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentLatestConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetComponentLatestConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/components/{component_id}/configs/latest] GetComponentLatestConfig", response, response.Code())
	}
}

// NewGetComponentLatestConfigOK creates a GetComponentLatestConfigOK with default headers values
func NewGetComponentLatestConfigOK() *GetComponentLatestConfigOK {
	return &GetComponentLatestConfigOK{}
}

/*
GetComponentLatestConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetComponentLatestConfigOK struct {
	Payload *models.AppComponentConfigConnection
}

// IsSuccess returns true when this get component latest config o k response has a 2xx status code
func (o *GetComponentLatestConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component latest config o k response has a 3xx status code
func (o *GetComponentLatestConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component latest config o k response has a 4xx status code
func (o *GetComponentLatestConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component latest config o k response has a 5xx status code
func (o *GetComponentLatestConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component latest config o k response a status code equal to that given
func (o *GetComponentLatestConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component latest config o k response
func (o *GetComponentLatestConfigOK) Code() int {
	return 200
}

func (o *GetComponentLatestConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigOK  %+v", 200, o.Payload)
}

func (o *GetComponentLatestConfigOK) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigOK  %+v", 200, o.Payload)
}

func (o *GetComponentLatestConfigOK) GetPayload() *models.AppComponentConfigConnection {
	return o.Payload
}

func (o *GetComponentLatestConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppComponentConfigConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentLatestConfigBadRequest creates a GetComponentLatestConfigBadRequest with default headers values
func NewGetComponentLatestConfigBadRequest() *GetComponentLatestConfigBadRequest {
	return &GetComponentLatestConfigBadRequest{}
}

/*
GetComponentLatestConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetComponentLatestConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component latest config bad request response has a 2xx status code
func (o *GetComponentLatestConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component latest config bad request response has a 3xx status code
func (o *GetComponentLatestConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component latest config bad request response has a 4xx status code
func (o *GetComponentLatestConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component latest config bad request response has a 5xx status code
func (o *GetComponentLatestConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get component latest config bad request response a status code equal to that given
func (o *GetComponentLatestConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get component latest config bad request response
func (o *GetComponentLatestConfigBadRequest) Code() int {
	return 400
}

func (o *GetComponentLatestConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetComponentLatestConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetComponentLatestConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentLatestConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentLatestConfigUnauthorized creates a GetComponentLatestConfigUnauthorized with default headers values
func NewGetComponentLatestConfigUnauthorized() *GetComponentLatestConfigUnauthorized {
	return &GetComponentLatestConfigUnauthorized{}
}

/*
GetComponentLatestConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetComponentLatestConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component latest config unauthorized response has a 2xx status code
func (o *GetComponentLatestConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component latest config unauthorized response has a 3xx status code
func (o *GetComponentLatestConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component latest config unauthorized response has a 4xx status code
func (o *GetComponentLatestConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component latest config unauthorized response has a 5xx status code
func (o *GetComponentLatestConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get component latest config unauthorized response a status code equal to that given
func (o *GetComponentLatestConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get component latest config unauthorized response
func (o *GetComponentLatestConfigUnauthorized) Code() int {
	return 401
}

func (o *GetComponentLatestConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetComponentLatestConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetComponentLatestConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentLatestConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentLatestConfigForbidden creates a GetComponentLatestConfigForbidden with default headers values
func NewGetComponentLatestConfigForbidden() *GetComponentLatestConfigForbidden {
	return &GetComponentLatestConfigForbidden{}
}

/*
GetComponentLatestConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetComponentLatestConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component latest config forbidden response has a 2xx status code
func (o *GetComponentLatestConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component latest config forbidden response has a 3xx status code
func (o *GetComponentLatestConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component latest config forbidden response has a 4xx status code
func (o *GetComponentLatestConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component latest config forbidden response has a 5xx status code
func (o *GetComponentLatestConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component latest config forbidden response a status code equal to that given
func (o *GetComponentLatestConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component latest config forbidden response
func (o *GetComponentLatestConfigForbidden) Code() int {
	return 403
}

func (o *GetComponentLatestConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetComponentLatestConfigForbidden) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetComponentLatestConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentLatestConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentLatestConfigNotFound creates a GetComponentLatestConfigNotFound with default headers values
func NewGetComponentLatestConfigNotFound() *GetComponentLatestConfigNotFound {
	return &GetComponentLatestConfigNotFound{}
}

/*
GetComponentLatestConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetComponentLatestConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component latest config not found response has a 2xx status code
func (o *GetComponentLatestConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component latest config not found response has a 3xx status code
func (o *GetComponentLatestConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component latest config not found response has a 4xx status code
func (o *GetComponentLatestConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component latest config not found response has a 5xx status code
func (o *GetComponentLatestConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component latest config not found response a status code equal to that given
func (o *GetComponentLatestConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component latest config not found response
func (o *GetComponentLatestConfigNotFound) Code() int {
	return 404
}

func (o *GetComponentLatestConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetComponentLatestConfigNotFound) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetComponentLatestConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentLatestConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentLatestConfigInternalServerError creates a GetComponentLatestConfigInternalServerError with default headers values
func NewGetComponentLatestConfigInternalServerError() *GetComponentLatestConfigInternalServerError {
	return &GetComponentLatestConfigInternalServerError{}
}

/*
GetComponentLatestConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetComponentLatestConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component latest config internal server error response has a 2xx status code
func (o *GetComponentLatestConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component latest config internal server error response has a 3xx status code
func (o *GetComponentLatestConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component latest config internal server error response has a 4xx status code
func (o *GetComponentLatestConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component latest config internal server error response has a 5xx status code
func (o *GetComponentLatestConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get component latest config internal server error response a status code equal to that given
func (o *GetComponentLatestConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get component latest config internal server error response
func (o *GetComponentLatestConfigInternalServerError) Code() int {
	return 500
}

func (o *GetComponentLatestConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetComponentLatestConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/latest][%d] getComponentLatestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetComponentLatestConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentLatestConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
