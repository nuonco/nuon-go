// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppConfigSyncRunReader is a Reader for the GetAppConfigSyncRun structure.
type GetAppConfigSyncRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppConfigSyncRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppConfigSyncRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppConfigSyncRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppConfigSyncRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppConfigSyncRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppConfigSyncRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppConfigSyncRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}] GetAppConfigSyncRun", response, response.Code())
	}
}

// NewGetAppConfigSyncRunOK creates a GetAppConfigSyncRunOK with default headers values
func NewGetAppConfigSyncRunOK() *GetAppConfigSyncRunOK {
	return &GetAppConfigSyncRunOK{}
}

/*
GetAppConfigSyncRunOK describes a response with status code 200, with default header values.

OK
*/
type GetAppConfigSyncRunOK struct {
	Payload *models.AppAppConfigSyncRun
}

// IsSuccess returns true when this get app config sync run o k response has a 2xx status code
func (o *GetAppConfigSyncRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app config sync run o k response has a 3xx status code
func (o *GetAppConfigSyncRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app config sync run o k response has a 4xx status code
func (o *GetAppConfigSyncRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app config sync run o k response has a 5xx status code
func (o *GetAppConfigSyncRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app config sync run o k response a status code equal to that given
func (o *GetAppConfigSyncRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app config sync run o k response
func (o *GetAppConfigSyncRunOK) Code() int {
	return 200
}

func (o *GetAppConfigSyncRunOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunOK  %+v", 200, o.Payload)
}

func (o *GetAppConfigSyncRunOK) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunOK  %+v", 200, o.Payload)
}

func (o *GetAppConfigSyncRunOK) GetPayload() *models.AppAppConfigSyncRun {
	return o.Payload
}

func (o *GetAppConfigSyncRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAppConfigSyncRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigSyncRunBadRequest creates a GetAppConfigSyncRunBadRequest with default headers values
func NewGetAppConfigSyncRunBadRequest() *GetAppConfigSyncRunBadRequest {
	return &GetAppConfigSyncRunBadRequest{}
}

/*
GetAppConfigSyncRunBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppConfigSyncRunBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app config sync run bad request response has a 2xx status code
func (o *GetAppConfigSyncRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app config sync run bad request response has a 3xx status code
func (o *GetAppConfigSyncRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app config sync run bad request response has a 4xx status code
func (o *GetAppConfigSyncRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app config sync run bad request response has a 5xx status code
func (o *GetAppConfigSyncRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app config sync run bad request response a status code equal to that given
func (o *GetAppConfigSyncRunBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app config sync run bad request response
func (o *GetAppConfigSyncRunBadRequest) Code() int {
	return 400
}

func (o *GetAppConfigSyncRunBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppConfigSyncRunBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppConfigSyncRunBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppConfigSyncRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigSyncRunUnauthorized creates a GetAppConfigSyncRunUnauthorized with default headers values
func NewGetAppConfigSyncRunUnauthorized() *GetAppConfigSyncRunUnauthorized {
	return &GetAppConfigSyncRunUnauthorized{}
}

/*
GetAppConfigSyncRunUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppConfigSyncRunUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app config sync run unauthorized response has a 2xx status code
func (o *GetAppConfigSyncRunUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app config sync run unauthorized response has a 3xx status code
func (o *GetAppConfigSyncRunUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app config sync run unauthorized response has a 4xx status code
func (o *GetAppConfigSyncRunUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app config sync run unauthorized response has a 5xx status code
func (o *GetAppConfigSyncRunUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app config sync run unauthorized response a status code equal to that given
func (o *GetAppConfigSyncRunUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app config sync run unauthorized response
func (o *GetAppConfigSyncRunUnauthorized) Code() int {
	return 401
}

func (o *GetAppConfigSyncRunUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppConfigSyncRunUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppConfigSyncRunUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppConfigSyncRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigSyncRunForbidden creates a GetAppConfigSyncRunForbidden with default headers values
func NewGetAppConfigSyncRunForbidden() *GetAppConfigSyncRunForbidden {
	return &GetAppConfigSyncRunForbidden{}
}

/*
GetAppConfigSyncRunForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppConfigSyncRunForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app config sync run forbidden response has a 2xx status code
func (o *GetAppConfigSyncRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app config sync run forbidden response has a 3xx status code
func (o *GetAppConfigSyncRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app config sync run forbidden response has a 4xx status code
func (o *GetAppConfigSyncRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app config sync run forbidden response has a 5xx status code
func (o *GetAppConfigSyncRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app config sync run forbidden response a status code equal to that given
func (o *GetAppConfigSyncRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app config sync run forbidden response
func (o *GetAppConfigSyncRunForbidden) Code() int {
	return 403
}

func (o *GetAppConfigSyncRunForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunForbidden  %+v", 403, o.Payload)
}

func (o *GetAppConfigSyncRunForbidden) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunForbidden  %+v", 403, o.Payload)
}

func (o *GetAppConfigSyncRunForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppConfigSyncRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigSyncRunNotFound creates a GetAppConfigSyncRunNotFound with default headers values
func NewGetAppConfigSyncRunNotFound() *GetAppConfigSyncRunNotFound {
	return &GetAppConfigSyncRunNotFound{}
}

/*
GetAppConfigSyncRunNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppConfigSyncRunNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app config sync run not found response has a 2xx status code
func (o *GetAppConfigSyncRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app config sync run not found response has a 3xx status code
func (o *GetAppConfigSyncRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app config sync run not found response has a 4xx status code
func (o *GetAppConfigSyncRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app config sync run not found response has a 5xx status code
func (o *GetAppConfigSyncRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app config sync run not found response a status code equal to that given
func (o *GetAppConfigSyncRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app config sync run not found response
func (o *GetAppConfigSyncRunNotFound) Code() int {
	return 404
}

func (o *GetAppConfigSyncRunNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunNotFound  %+v", 404, o.Payload)
}

func (o *GetAppConfigSyncRunNotFound) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunNotFound  %+v", 404, o.Payload)
}

func (o *GetAppConfigSyncRunNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppConfigSyncRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppConfigSyncRunInternalServerError creates a GetAppConfigSyncRunInternalServerError with default headers values
func NewGetAppConfigSyncRunInternalServerError() *GetAppConfigSyncRunInternalServerError {
	return &GetAppConfigSyncRunInternalServerError{}
}

/*
GetAppConfigSyncRunInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppConfigSyncRunInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app config sync run internal server error response has a 2xx status code
func (o *GetAppConfigSyncRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app config sync run internal server error response has a 3xx status code
func (o *GetAppConfigSyncRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app config sync run internal server error response has a 4xx status code
func (o *GetAppConfigSyncRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app config sync run internal server error response has a 5xx status code
func (o *GetAppConfigSyncRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app config sync run internal server error response a status code equal to that given
func (o *GetAppConfigSyncRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app config sync run internal server error response
func (o *GetAppConfigSyncRunInternalServerError) Code() int {
	return 500
}

func (o *GetAppConfigSyncRunInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppConfigSyncRunInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}][%d] getAppConfigSyncRunInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppConfigSyncRunInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppConfigSyncRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
