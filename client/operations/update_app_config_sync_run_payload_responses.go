// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// UpdateAppConfigSyncRunPayloadReader is a Reader for the UpdateAppConfigSyncRunPayload structure.
type UpdateAppConfigSyncRunPayloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAppConfigSyncRunPayloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateAppConfigSyncRunPayloadCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAppConfigSyncRunPayloadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAppConfigSyncRunPayloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAppConfigSyncRunPayloadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAppConfigSyncRunPayloadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAppConfigSyncRunPayloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload] UpdateAppConfigSyncRunPayload", response, response.Code())
	}
}

// NewUpdateAppConfigSyncRunPayloadCreated creates a UpdateAppConfigSyncRunPayloadCreated with default headers values
func NewUpdateAppConfigSyncRunPayloadCreated() *UpdateAppConfigSyncRunPayloadCreated {
	return &UpdateAppConfigSyncRunPayloadCreated{}
}

/*
UpdateAppConfigSyncRunPayloadCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateAppConfigSyncRunPayloadCreated struct {
	Payload bool
}

// IsSuccess returns true when this update app config sync run payload created response has a 2xx status code
func (o *UpdateAppConfigSyncRunPayloadCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update app config sync run payload created response has a 3xx status code
func (o *UpdateAppConfigSyncRunPayloadCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config sync run payload created response has a 4xx status code
func (o *UpdateAppConfigSyncRunPayloadCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update app config sync run payload created response has a 5xx status code
func (o *UpdateAppConfigSyncRunPayloadCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config sync run payload created response a status code equal to that given
func (o *UpdateAppConfigSyncRunPayloadCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update app config sync run payload created response
func (o *UpdateAppConfigSyncRunPayloadCreated) Code() int {
	return 201
}

func (o *UpdateAppConfigSyncRunPayloadCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadCreated  %+v", 201, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadCreated) String() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadCreated  %+v", 201, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadCreated) GetPayload() bool {
	return o.Payload
}

func (o *UpdateAppConfigSyncRunPayloadCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigSyncRunPayloadBadRequest creates a UpdateAppConfigSyncRunPayloadBadRequest with default headers values
func NewUpdateAppConfigSyncRunPayloadBadRequest() *UpdateAppConfigSyncRunPayloadBadRequest {
	return &UpdateAppConfigSyncRunPayloadBadRequest{}
}

/*
UpdateAppConfigSyncRunPayloadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAppConfigSyncRunPayloadBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config sync run payload bad request response has a 2xx status code
func (o *UpdateAppConfigSyncRunPayloadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config sync run payload bad request response has a 3xx status code
func (o *UpdateAppConfigSyncRunPayloadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config sync run payload bad request response has a 4xx status code
func (o *UpdateAppConfigSyncRunPayloadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config sync run payload bad request response has a 5xx status code
func (o *UpdateAppConfigSyncRunPayloadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config sync run payload bad request response a status code equal to that given
func (o *UpdateAppConfigSyncRunPayloadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update app config sync run payload bad request response
func (o *UpdateAppConfigSyncRunPayloadBadRequest) Code() int {
	return 400
}

func (o *UpdateAppConfigSyncRunPayloadBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigSyncRunPayloadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigSyncRunPayloadUnauthorized creates a UpdateAppConfigSyncRunPayloadUnauthorized with default headers values
func NewUpdateAppConfigSyncRunPayloadUnauthorized() *UpdateAppConfigSyncRunPayloadUnauthorized {
	return &UpdateAppConfigSyncRunPayloadUnauthorized{}
}

/*
UpdateAppConfigSyncRunPayloadUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateAppConfigSyncRunPayloadUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config sync run payload unauthorized response has a 2xx status code
func (o *UpdateAppConfigSyncRunPayloadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config sync run payload unauthorized response has a 3xx status code
func (o *UpdateAppConfigSyncRunPayloadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config sync run payload unauthorized response has a 4xx status code
func (o *UpdateAppConfigSyncRunPayloadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config sync run payload unauthorized response has a 5xx status code
func (o *UpdateAppConfigSyncRunPayloadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config sync run payload unauthorized response a status code equal to that given
func (o *UpdateAppConfigSyncRunPayloadUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update app config sync run payload unauthorized response
func (o *UpdateAppConfigSyncRunPayloadUnauthorized) Code() int {
	return 401
}

func (o *UpdateAppConfigSyncRunPayloadUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigSyncRunPayloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigSyncRunPayloadForbidden creates a UpdateAppConfigSyncRunPayloadForbidden with default headers values
func NewUpdateAppConfigSyncRunPayloadForbidden() *UpdateAppConfigSyncRunPayloadForbidden {
	return &UpdateAppConfigSyncRunPayloadForbidden{}
}

/*
UpdateAppConfigSyncRunPayloadForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAppConfigSyncRunPayloadForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config sync run payload forbidden response has a 2xx status code
func (o *UpdateAppConfigSyncRunPayloadForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config sync run payload forbidden response has a 3xx status code
func (o *UpdateAppConfigSyncRunPayloadForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config sync run payload forbidden response has a 4xx status code
func (o *UpdateAppConfigSyncRunPayloadForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config sync run payload forbidden response has a 5xx status code
func (o *UpdateAppConfigSyncRunPayloadForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config sync run payload forbidden response a status code equal to that given
func (o *UpdateAppConfigSyncRunPayloadForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update app config sync run payload forbidden response
func (o *UpdateAppConfigSyncRunPayloadForbidden) Code() int {
	return 403
}

func (o *UpdateAppConfigSyncRunPayloadForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigSyncRunPayloadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigSyncRunPayloadNotFound creates a UpdateAppConfigSyncRunPayloadNotFound with default headers values
func NewUpdateAppConfigSyncRunPayloadNotFound() *UpdateAppConfigSyncRunPayloadNotFound {
	return &UpdateAppConfigSyncRunPayloadNotFound{}
}

/*
UpdateAppConfigSyncRunPayloadNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAppConfigSyncRunPayloadNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config sync run payload not found response has a 2xx status code
func (o *UpdateAppConfigSyncRunPayloadNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config sync run payload not found response has a 3xx status code
func (o *UpdateAppConfigSyncRunPayloadNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config sync run payload not found response has a 4xx status code
func (o *UpdateAppConfigSyncRunPayloadNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config sync run payload not found response has a 5xx status code
func (o *UpdateAppConfigSyncRunPayloadNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config sync run payload not found response a status code equal to that given
func (o *UpdateAppConfigSyncRunPayloadNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update app config sync run payload not found response
func (o *UpdateAppConfigSyncRunPayloadNotFound) Code() int {
	return 404
}

func (o *UpdateAppConfigSyncRunPayloadNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigSyncRunPayloadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigSyncRunPayloadInternalServerError creates a UpdateAppConfigSyncRunPayloadInternalServerError with default headers values
func NewUpdateAppConfigSyncRunPayloadInternalServerError() *UpdateAppConfigSyncRunPayloadInternalServerError {
	return &UpdateAppConfigSyncRunPayloadInternalServerError{}
}

/*
UpdateAppConfigSyncRunPayloadInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAppConfigSyncRunPayloadInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config sync run payload internal server error response has a 2xx status code
func (o *UpdateAppConfigSyncRunPayloadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config sync run payload internal server error response has a 3xx status code
func (o *UpdateAppConfigSyncRunPayloadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config sync run payload internal server error response has a 4xx status code
func (o *UpdateAppConfigSyncRunPayloadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update app config sync run payload internal server error response has a 5xx status code
func (o *UpdateAppConfigSyncRunPayloadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update app config sync run payload internal server error response a status code equal to that given
func (o *UpdateAppConfigSyncRunPayloadInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update app config sync run payload internal server error response
func (o *UpdateAppConfigSyncRunPayloadInternalServerError) Code() int {
	return 500
}

func (o *UpdateAppConfigSyncRunPayloadInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/apps/{app_id}/config-sync-run/{app_config_sync_run_id}/payload][%d] updateAppConfigSyncRunPayloadInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateAppConfigSyncRunPayloadInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigSyncRunPayloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
