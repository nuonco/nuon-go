// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetComponentConfigReader is a Reader for the GetComponentConfig structure.
type GetComponentConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetComponentConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetComponentConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetComponentConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetComponentConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/components/{component_id}/configs/{config_id}] GetComponentConfig", response, response.Code())
	}
}

// NewGetComponentConfigOK creates a GetComponentConfigOK with default headers values
func NewGetComponentConfigOK() *GetComponentConfigOK {
	return &GetComponentConfigOK{}
}

/*
GetComponentConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetComponentConfigOK struct {
	Payload *models.AppComponentConfigConnection
}

// IsSuccess returns true when this get component config o k response has a 2xx status code
func (o *GetComponentConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component config o k response has a 3xx status code
func (o *GetComponentConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config o k response has a 4xx status code
func (o *GetComponentConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component config o k response has a 5xx status code
func (o *GetComponentConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config o k response a status code equal to that given
func (o *GetComponentConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component config o k response
func (o *GetComponentConfigOK) Code() int {
	return 200
}

func (o *GetComponentConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigOK  %+v", 200, o.Payload)
}

func (o *GetComponentConfigOK) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigOK  %+v", 200, o.Payload)
}

func (o *GetComponentConfigOK) GetPayload() *models.AppComponentConfigConnection {
	return o.Payload
}

func (o *GetComponentConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppComponentConfigConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigBadRequest creates a GetComponentConfigBadRequest with default headers values
func NewGetComponentConfigBadRequest() *GetComponentConfigBadRequest {
	return &GetComponentConfigBadRequest{}
}

/*
GetComponentConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetComponentConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component config bad request response has a 2xx status code
func (o *GetComponentConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config bad request response has a 3xx status code
func (o *GetComponentConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config bad request response has a 4xx status code
func (o *GetComponentConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config bad request response has a 5xx status code
func (o *GetComponentConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config bad request response a status code equal to that given
func (o *GetComponentConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get component config bad request response
func (o *GetComponentConfigBadRequest) Code() int {
	return 400
}

func (o *GetComponentConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetComponentConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetComponentConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigUnauthorized creates a GetComponentConfigUnauthorized with default headers values
func NewGetComponentConfigUnauthorized() *GetComponentConfigUnauthorized {
	return &GetComponentConfigUnauthorized{}
}

/*
GetComponentConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetComponentConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component config unauthorized response has a 2xx status code
func (o *GetComponentConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config unauthorized response has a 3xx status code
func (o *GetComponentConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config unauthorized response has a 4xx status code
func (o *GetComponentConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config unauthorized response has a 5xx status code
func (o *GetComponentConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config unauthorized response a status code equal to that given
func (o *GetComponentConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get component config unauthorized response
func (o *GetComponentConfigUnauthorized) Code() int {
	return 401
}

func (o *GetComponentConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetComponentConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetComponentConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigForbidden creates a GetComponentConfigForbidden with default headers values
func NewGetComponentConfigForbidden() *GetComponentConfigForbidden {
	return &GetComponentConfigForbidden{}
}

/*
GetComponentConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetComponentConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component config forbidden response has a 2xx status code
func (o *GetComponentConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config forbidden response has a 3xx status code
func (o *GetComponentConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config forbidden response has a 4xx status code
func (o *GetComponentConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config forbidden response has a 5xx status code
func (o *GetComponentConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config forbidden response a status code equal to that given
func (o *GetComponentConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component config forbidden response
func (o *GetComponentConfigForbidden) Code() int {
	return 403
}

func (o *GetComponentConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetComponentConfigForbidden) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetComponentConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigNotFound creates a GetComponentConfigNotFound with default headers values
func NewGetComponentConfigNotFound() *GetComponentConfigNotFound {
	return &GetComponentConfigNotFound{}
}

/*
GetComponentConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetComponentConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component config not found response has a 2xx status code
func (o *GetComponentConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config not found response has a 3xx status code
func (o *GetComponentConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config not found response has a 4xx status code
func (o *GetComponentConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config not found response has a 5xx status code
func (o *GetComponentConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config not found response a status code equal to that given
func (o *GetComponentConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component config not found response
func (o *GetComponentConfigNotFound) Code() int {
	return 404
}

func (o *GetComponentConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetComponentConfigNotFound) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetComponentConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigInternalServerError creates a GetComponentConfigInternalServerError with default headers values
func NewGetComponentConfigInternalServerError() *GetComponentConfigInternalServerError {
	return &GetComponentConfigInternalServerError{}
}

/*
GetComponentConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetComponentConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get component config internal server error response has a 2xx status code
func (o *GetComponentConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config internal server error response has a 3xx status code
func (o *GetComponentConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config internal server error response has a 4xx status code
func (o *GetComponentConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component config internal server error response has a 5xx status code
func (o *GetComponentConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get component config internal server error response a status code equal to that given
func (o *GetComponentConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get component config internal server error response
func (o *GetComponentConfigInternalServerError) Code() int {
	return 500
}

func (o *GetComponentConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetComponentConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/configs/{config_id}][%d] getComponentConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetComponentConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetComponentConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
