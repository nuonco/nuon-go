// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PostV1AppsAppIDInstallerReader is a Reader for the PostV1AppsAppIDInstaller structure.
type PostV1AppsAppIDInstallerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1AppsAppIDInstallerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1AppsAppIDInstallerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1AppsAppIDInstallerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1AppsAppIDInstallerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostV1AppsAppIDInstallerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostV1AppsAppIDInstallerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1AppsAppIDInstallerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/apps/{app_id}/installer] PostV1AppsAppIDInstaller", response, response.Code())
	}
}

// NewPostV1AppsAppIDInstallerCreated creates a PostV1AppsAppIDInstallerCreated with default headers values
func NewPostV1AppsAppIDInstallerCreated() *PostV1AppsAppIDInstallerCreated {
	return &PostV1AppsAppIDInstallerCreated{}
}

/*
PostV1AppsAppIDInstallerCreated describes a response with status code 201, with default header values.

Created
*/
type PostV1AppsAppIDInstallerCreated struct {
	Payload *models.AppAppInstaller
}

// IsSuccess returns true when this post v1 apps app Id installer created response has a 2xx status code
func (o *PostV1AppsAppIDInstallerCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 apps app Id installer created response has a 3xx status code
func (o *PostV1AppsAppIDInstallerCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps app Id installer created response has a 4xx status code
func (o *PostV1AppsAppIDInstallerCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 apps app Id installer created response has a 5xx status code
func (o *PostV1AppsAppIDInstallerCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps app Id installer created response a status code equal to that given
func (o *PostV1AppsAppIDInstallerCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 apps app Id installer created response
func (o *PostV1AppsAppIDInstallerCreated) Code() int {
	return 201
}

func (o *PostV1AppsAppIDInstallerCreated) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerCreated  %+v", 201, o.Payload)
}

func (o *PostV1AppsAppIDInstallerCreated) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerCreated  %+v", 201, o.Payload)
}

func (o *PostV1AppsAppIDInstallerCreated) GetPayload() *models.AppAppInstaller {
	return o.Payload
}

func (o *PostV1AppsAppIDInstallerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAppInstaller)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsAppIDInstallerBadRequest creates a PostV1AppsAppIDInstallerBadRequest with default headers values
func NewPostV1AppsAppIDInstallerBadRequest() *PostV1AppsAppIDInstallerBadRequest {
	return &PostV1AppsAppIDInstallerBadRequest{}
}

/*
PostV1AppsAppIDInstallerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1AppsAppIDInstallerBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps app Id installer bad request response has a 2xx status code
func (o *PostV1AppsAppIDInstallerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps app Id installer bad request response has a 3xx status code
func (o *PostV1AppsAppIDInstallerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps app Id installer bad request response has a 4xx status code
func (o *PostV1AppsAppIDInstallerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps app Id installer bad request response has a 5xx status code
func (o *PostV1AppsAppIDInstallerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps app Id installer bad request response a status code equal to that given
func (o *PostV1AppsAppIDInstallerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 apps app Id installer bad request response
func (o *PostV1AppsAppIDInstallerBadRequest) Code() int {
	return 400
}

func (o *PostV1AppsAppIDInstallerBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1AppsAppIDInstallerBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1AppsAppIDInstallerBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsAppIDInstallerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsAppIDInstallerUnauthorized creates a PostV1AppsAppIDInstallerUnauthorized with default headers values
func NewPostV1AppsAppIDInstallerUnauthorized() *PostV1AppsAppIDInstallerUnauthorized {
	return &PostV1AppsAppIDInstallerUnauthorized{}
}

/*
PostV1AppsAppIDInstallerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1AppsAppIDInstallerUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps app Id installer unauthorized response has a 2xx status code
func (o *PostV1AppsAppIDInstallerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps app Id installer unauthorized response has a 3xx status code
func (o *PostV1AppsAppIDInstallerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps app Id installer unauthorized response has a 4xx status code
func (o *PostV1AppsAppIDInstallerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps app Id installer unauthorized response has a 5xx status code
func (o *PostV1AppsAppIDInstallerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps app Id installer unauthorized response a status code equal to that given
func (o *PostV1AppsAppIDInstallerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 apps app Id installer unauthorized response
func (o *PostV1AppsAppIDInstallerUnauthorized) Code() int {
	return 401
}

func (o *PostV1AppsAppIDInstallerUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1AppsAppIDInstallerUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1AppsAppIDInstallerUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsAppIDInstallerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsAppIDInstallerForbidden creates a PostV1AppsAppIDInstallerForbidden with default headers values
func NewPostV1AppsAppIDInstallerForbidden() *PostV1AppsAppIDInstallerForbidden {
	return &PostV1AppsAppIDInstallerForbidden{}
}

/*
PostV1AppsAppIDInstallerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostV1AppsAppIDInstallerForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps app Id installer forbidden response has a 2xx status code
func (o *PostV1AppsAppIDInstallerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps app Id installer forbidden response has a 3xx status code
func (o *PostV1AppsAppIDInstallerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps app Id installer forbidden response has a 4xx status code
func (o *PostV1AppsAppIDInstallerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps app Id installer forbidden response has a 5xx status code
func (o *PostV1AppsAppIDInstallerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps app Id installer forbidden response a status code equal to that given
func (o *PostV1AppsAppIDInstallerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post v1 apps app Id installer forbidden response
func (o *PostV1AppsAppIDInstallerForbidden) Code() int {
	return 403
}

func (o *PostV1AppsAppIDInstallerForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerForbidden  %+v", 403, o.Payload)
}

func (o *PostV1AppsAppIDInstallerForbidden) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerForbidden  %+v", 403, o.Payload)
}

func (o *PostV1AppsAppIDInstallerForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsAppIDInstallerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsAppIDInstallerNotFound creates a PostV1AppsAppIDInstallerNotFound with default headers values
func NewPostV1AppsAppIDInstallerNotFound() *PostV1AppsAppIDInstallerNotFound {
	return &PostV1AppsAppIDInstallerNotFound{}
}

/*
PostV1AppsAppIDInstallerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostV1AppsAppIDInstallerNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps app Id installer not found response has a 2xx status code
func (o *PostV1AppsAppIDInstallerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps app Id installer not found response has a 3xx status code
func (o *PostV1AppsAppIDInstallerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps app Id installer not found response has a 4xx status code
func (o *PostV1AppsAppIDInstallerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps app Id installer not found response has a 5xx status code
func (o *PostV1AppsAppIDInstallerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps app Id installer not found response a status code equal to that given
func (o *PostV1AppsAppIDInstallerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 apps app Id installer not found response
func (o *PostV1AppsAppIDInstallerNotFound) Code() int {
	return 404
}

func (o *PostV1AppsAppIDInstallerNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerNotFound  %+v", 404, o.Payload)
}

func (o *PostV1AppsAppIDInstallerNotFound) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerNotFound  %+v", 404, o.Payload)
}

func (o *PostV1AppsAppIDInstallerNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsAppIDInstallerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsAppIDInstallerInternalServerError creates a PostV1AppsAppIDInstallerInternalServerError with default headers values
func NewPostV1AppsAppIDInstallerInternalServerError() *PostV1AppsAppIDInstallerInternalServerError {
	return &PostV1AppsAppIDInstallerInternalServerError{}
}

/*
PostV1AppsAppIDInstallerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1AppsAppIDInstallerInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps app Id installer internal server error response has a 2xx status code
func (o *PostV1AppsAppIDInstallerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps app Id installer internal server error response has a 3xx status code
func (o *PostV1AppsAppIDInstallerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps app Id installer internal server error response has a 4xx status code
func (o *PostV1AppsAppIDInstallerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 apps app Id installer internal server error response has a 5xx status code
func (o *PostV1AppsAppIDInstallerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 apps app Id installer internal server error response a status code equal to that given
func (o *PostV1AppsAppIDInstallerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 apps app Id installer internal server error response
func (o *PostV1AppsAppIDInstallerInternalServerError) Code() int {
	return 500
}

func (o *PostV1AppsAppIDInstallerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1AppsAppIDInstallerInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/apps/{app_id}/installer][%d] postV1AppsAppIdInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1AppsAppIDInstallerInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsAppIDInstallerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
