// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetActionLatestConfigReader is a Reader for the GetActionLatestConfig structure.
type GetActionLatestConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionLatestConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionLatestConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetActionLatestConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetActionLatestConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetActionLatestConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetActionLatestConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetActionLatestConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config] GetActionLatestConfig", response, response.Code())
	}
}

// NewGetActionLatestConfigOK creates a GetActionLatestConfigOK with default headers values
func NewGetActionLatestConfigOK() *GetActionLatestConfigOK {
	return &GetActionLatestConfigOK{}
}

/*
GetActionLatestConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetActionLatestConfigOK struct {
	Payload *models.AppActionWorkflowConfig
}

// IsSuccess returns true when this get action latest config o k response has a 2xx status code
func (o *GetActionLatestConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get action latest config o k response has a 3xx status code
func (o *GetActionLatestConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action latest config o k response has a 4xx status code
func (o *GetActionLatestConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action latest config o k response has a 5xx status code
func (o *GetActionLatestConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get action latest config o k response a status code equal to that given
func (o *GetActionLatestConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get action latest config o k response
func (o *GetActionLatestConfigOK) Code() int {
	return 200
}

func (o *GetActionLatestConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigOK  %+v", 200, o.Payload)
}

func (o *GetActionLatestConfigOK) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigOK  %+v", 200, o.Payload)
}

func (o *GetActionLatestConfigOK) GetPayload() *models.AppActionWorkflowConfig {
	return o.Payload
}

func (o *GetActionLatestConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppActionWorkflowConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionLatestConfigBadRequest creates a GetActionLatestConfigBadRequest with default headers values
func NewGetActionLatestConfigBadRequest() *GetActionLatestConfigBadRequest {
	return &GetActionLatestConfigBadRequest{}
}

/*
GetActionLatestConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetActionLatestConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action latest config bad request response has a 2xx status code
func (o *GetActionLatestConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action latest config bad request response has a 3xx status code
func (o *GetActionLatestConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action latest config bad request response has a 4xx status code
func (o *GetActionLatestConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action latest config bad request response has a 5xx status code
func (o *GetActionLatestConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get action latest config bad request response a status code equal to that given
func (o *GetActionLatestConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get action latest config bad request response
func (o *GetActionLatestConfigBadRequest) Code() int {
	return 400
}

func (o *GetActionLatestConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetActionLatestConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetActionLatestConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionLatestConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionLatestConfigUnauthorized creates a GetActionLatestConfigUnauthorized with default headers values
func NewGetActionLatestConfigUnauthorized() *GetActionLatestConfigUnauthorized {
	return &GetActionLatestConfigUnauthorized{}
}

/*
GetActionLatestConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetActionLatestConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action latest config unauthorized response has a 2xx status code
func (o *GetActionLatestConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action latest config unauthorized response has a 3xx status code
func (o *GetActionLatestConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action latest config unauthorized response has a 4xx status code
func (o *GetActionLatestConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action latest config unauthorized response has a 5xx status code
func (o *GetActionLatestConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get action latest config unauthorized response a status code equal to that given
func (o *GetActionLatestConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get action latest config unauthorized response
func (o *GetActionLatestConfigUnauthorized) Code() int {
	return 401
}

func (o *GetActionLatestConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionLatestConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetActionLatestConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionLatestConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionLatestConfigForbidden creates a GetActionLatestConfigForbidden with default headers values
func NewGetActionLatestConfigForbidden() *GetActionLatestConfigForbidden {
	return &GetActionLatestConfigForbidden{}
}

/*
GetActionLatestConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetActionLatestConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action latest config forbidden response has a 2xx status code
func (o *GetActionLatestConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action latest config forbidden response has a 3xx status code
func (o *GetActionLatestConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action latest config forbidden response has a 4xx status code
func (o *GetActionLatestConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action latest config forbidden response has a 5xx status code
func (o *GetActionLatestConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get action latest config forbidden response a status code equal to that given
func (o *GetActionLatestConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get action latest config forbidden response
func (o *GetActionLatestConfigForbidden) Code() int {
	return 403
}

func (o *GetActionLatestConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetActionLatestConfigForbidden) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetActionLatestConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionLatestConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionLatestConfigNotFound creates a GetActionLatestConfigNotFound with default headers values
func NewGetActionLatestConfigNotFound() *GetActionLatestConfigNotFound {
	return &GetActionLatestConfigNotFound{}
}

/*
GetActionLatestConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetActionLatestConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action latest config not found response has a 2xx status code
func (o *GetActionLatestConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action latest config not found response has a 3xx status code
func (o *GetActionLatestConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action latest config not found response has a 4xx status code
func (o *GetActionLatestConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get action latest config not found response has a 5xx status code
func (o *GetActionLatestConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get action latest config not found response a status code equal to that given
func (o *GetActionLatestConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get action latest config not found response
func (o *GetActionLatestConfigNotFound) Code() int {
	return 404
}

func (o *GetActionLatestConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetActionLatestConfigNotFound) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetActionLatestConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionLatestConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionLatestConfigInternalServerError creates a GetActionLatestConfigInternalServerError with default headers values
func NewGetActionLatestConfigInternalServerError() *GetActionLatestConfigInternalServerError {
	return &GetActionLatestConfigInternalServerError{}
}

/*
GetActionLatestConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetActionLatestConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get action latest config internal server error response has a 2xx status code
func (o *GetActionLatestConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get action latest config internal server error response has a 3xx status code
func (o *GetActionLatestConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get action latest config internal server error response has a 4xx status code
func (o *GetActionLatestConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get action latest config internal server error response has a 5xx status code
func (o *GetActionLatestConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get action latest config internal server error response a status code equal to that given
func (o *GetActionLatestConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get action latest config internal server error response
func (o *GetActionLatestConfigInternalServerError) Code() int {
	return 500
}

func (o *GetActionLatestConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionLatestConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/actions/{action_id}/latest-config][%d] getActionLatestConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetActionLatestConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetActionLatestConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
