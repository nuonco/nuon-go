// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetRunnerJobCompositePlanReader is a Reader for the GetRunnerJobCompositePlan structure.
type GetRunnerJobCompositePlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerJobCompositePlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerJobCompositePlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerJobCompositePlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerJobCompositePlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerJobCompositePlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerJobCompositePlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerJobCompositePlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/runner-jobs/{runner_job_id}/composite-plan] GetRunnerJobCompositePlan", response, response.Code())
	}
}

// NewGetRunnerJobCompositePlanOK creates a GetRunnerJobCompositePlanOK with default headers values
func NewGetRunnerJobCompositePlanOK() *GetRunnerJobCompositePlanOK {
	return &GetRunnerJobCompositePlanOK{}
}

/*
GetRunnerJobCompositePlanOK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerJobCompositePlanOK struct {
	Payload *models.PlantypesCompositePlan
}

// IsSuccess returns true when this get runner job composite plan o k response has a 2xx status code
func (o *GetRunnerJobCompositePlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner job composite plan o k response has a 3xx status code
func (o *GetRunnerJobCompositePlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job composite plan o k response has a 4xx status code
func (o *GetRunnerJobCompositePlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner job composite plan o k response has a 5xx status code
func (o *GetRunnerJobCompositePlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job composite plan o k response a status code equal to that given
func (o *GetRunnerJobCompositePlanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner job composite plan o k response
func (o *GetRunnerJobCompositePlanOK) Code() int {
	return 200
}

func (o *GetRunnerJobCompositePlanOK) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanOK  %+v", 200, o.Payload)
}

func (o *GetRunnerJobCompositePlanOK) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanOK  %+v", 200, o.Payload)
}

func (o *GetRunnerJobCompositePlanOK) GetPayload() *models.PlantypesCompositePlan {
	return o.Payload
}

func (o *GetRunnerJobCompositePlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlantypesCompositePlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobCompositePlanBadRequest creates a GetRunnerJobCompositePlanBadRequest with default headers values
func NewGetRunnerJobCompositePlanBadRequest() *GetRunnerJobCompositePlanBadRequest {
	return &GetRunnerJobCompositePlanBadRequest{}
}

/*
GetRunnerJobCompositePlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerJobCompositePlanBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job composite plan bad request response has a 2xx status code
func (o *GetRunnerJobCompositePlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job composite plan bad request response has a 3xx status code
func (o *GetRunnerJobCompositePlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job composite plan bad request response has a 4xx status code
func (o *GetRunnerJobCompositePlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job composite plan bad request response has a 5xx status code
func (o *GetRunnerJobCompositePlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job composite plan bad request response a status code equal to that given
func (o *GetRunnerJobCompositePlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner job composite plan bad request response
func (o *GetRunnerJobCompositePlanBadRequest) Code() int {
	return 400
}

func (o *GetRunnerJobCompositePlanBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerJobCompositePlanBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerJobCompositePlanBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobCompositePlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobCompositePlanUnauthorized creates a GetRunnerJobCompositePlanUnauthorized with default headers values
func NewGetRunnerJobCompositePlanUnauthorized() *GetRunnerJobCompositePlanUnauthorized {
	return &GetRunnerJobCompositePlanUnauthorized{}
}

/*
GetRunnerJobCompositePlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerJobCompositePlanUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job composite plan unauthorized response has a 2xx status code
func (o *GetRunnerJobCompositePlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job composite plan unauthorized response has a 3xx status code
func (o *GetRunnerJobCompositePlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job composite plan unauthorized response has a 4xx status code
func (o *GetRunnerJobCompositePlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job composite plan unauthorized response has a 5xx status code
func (o *GetRunnerJobCompositePlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job composite plan unauthorized response a status code equal to that given
func (o *GetRunnerJobCompositePlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner job composite plan unauthorized response
func (o *GetRunnerJobCompositePlanUnauthorized) Code() int {
	return 401
}

func (o *GetRunnerJobCompositePlanUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerJobCompositePlanUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerJobCompositePlanUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobCompositePlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobCompositePlanForbidden creates a GetRunnerJobCompositePlanForbidden with default headers values
func NewGetRunnerJobCompositePlanForbidden() *GetRunnerJobCompositePlanForbidden {
	return &GetRunnerJobCompositePlanForbidden{}
}

/*
GetRunnerJobCompositePlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerJobCompositePlanForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job composite plan forbidden response has a 2xx status code
func (o *GetRunnerJobCompositePlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job composite plan forbidden response has a 3xx status code
func (o *GetRunnerJobCompositePlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job composite plan forbidden response has a 4xx status code
func (o *GetRunnerJobCompositePlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job composite plan forbidden response has a 5xx status code
func (o *GetRunnerJobCompositePlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job composite plan forbidden response a status code equal to that given
func (o *GetRunnerJobCompositePlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner job composite plan forbidden response
func (o *GetRunnerJobCompositePlanForbidden) Code() int {
	return 403
}

func (o *GetRunnerJobCompositePlanForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanForbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerJobCompositePlanForbidden) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanForbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerJobCompositePlanForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobCompositePlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobCompositePlanNotFound creates a GetRunnerJobCompositePlanNotFound with default headers values
func NewGetRunnerJobCompositePlanNotFound() *GetRunnerJobCompositePlanNotFound {
	return &GetRunnerJobCompositePlanNotFound{}
}

/*
GetRunnerJobCompositePlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerJobCompositePlanNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job composite plan not found response has a 2xx status code
func (o *GetRunnerJobCompositePlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job composite plan not found response has a 3xx status code
func (o *GetRunnerJobCompositePlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job composite plan not found response has a 4xx status code
func (o *GetRunnerJobCompositePlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job composite plan not found response has a 5xx status code
func (o *GetRunnerJobCompositePlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job composite plan not found response a status code equal to that given
func (o *GetRunnerJobCompositePlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner job composite plan not found response
func (o *GetRunnerJobCompositePlanNotFound) Code() int {
	return 404
}

func (o *GetRunnerJobCompositePlanNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanNotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerJobCompositePlanNotFound) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanNotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerJobCompositePlanNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobCompositePlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobCompositePlanInternalServerError creates a GetRunnerJobCompositePlanInternalServerError with default headers values
func NewGetRunnerJobCompositePlanInternalServerError() *GetRunnerJobCompositePlanInternalServerError {
	return &GetRunnerJobCompositePlanInternalServerError{}
}

/*
GetRunnerJobCompositePlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerJobCompositePlanInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job composite plan internal server error response has a 2xx status code
func (o *GetRunnerJobCompositePlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job composite plan internal server error response has a 3xx status code
func (o *GetRunnerJobCompositePlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job composite plan internal server error response has a 4xx status code
func (o *GetRunnerJobCompositePlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner job composite plan internal server error response has a 5xx status code
func (o *GetRunnerJobCompositePlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner job composite plan internal server error response a status code equal to that given
func (o *GetRunnerJobCompositePlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner job composite plan internal server error response
func (o *GetRunnerJobCompositePlanInternalServerError) Code() int {
	return 500
}

func (o *GetRunnerJobCompositePlanInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerJobCompositePlanInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/runner-jobs/{runner_job_id}/composite-plan][%d] getRunnerJobCompositePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerJobCompositePlanInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobCompositePlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
