// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionRunReader is a Reader for the GetInstallActionRun structure.
type GetInstallActionRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions/runs/{run_id}] GetInstallActionRun", response, response.Code())
	}
}

// NewGetInstallActionRunOK creates a GetInstallActionRunOK with default headers values
func NewGetInstallActionRunOK() *GetInstallActionRunOK {
	return &GetInstallActionRunOK{}
}

/*
GetInstallActionRunOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionRunOK struct {
	Payload *models.AppInstallActionWorkflowRun
}

// IsSuccess returns true when this get install action run o k response has a 2xx status code
func (o *GetInstallActionRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install action run o k response has a 3xx status code
func (o *GetInstallActionRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run o k response has a 4xx status code
func (o *GetInstallActionRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action run o k response has a 5xx status code
func (o *GetInstallActionRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run o k response a status code equal to that given
func (o *GetInstallActionRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install action run o k response
func (o *GetInstallActionRunOK) Code() int {
	return 200
}

func (o *GetInstallActionRunOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRunOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRunOK) GetPayload() *models.AppInstallActionWorkflowRun {
	return o.Payload
}

func (o *GetInstallActionRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallActionWorkflowRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunBadRequest creates a GetInstallActionRunBadRequest with default headers values
func NewGetInstallActionRunBadRequest() *GetInstallActionRunBadRequest {
	return &GetInstallActionRunBadRequest{}
}

/*
GetInstallActionRunBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionRunBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run bad request response has a 2xx status code
func (o *GetInstallActionRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run bad request response has a 3xx status code
func (o *GetInstallActionRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run bad request response has a 4xx status code
func (o *GetInstallActionRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run bad request response has a 5xx status code
func (o *GetInstallActionRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run bad request response a status code equal to that given
func (o *GetInstallActionRunBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install action run bad request response
func (o *GetInstallActionRunBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionRunBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRunBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRunBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunUnauthorized creates a GetInstallActionRunUnauthorized with default headers values
func NewGetInstallActionRunUnauthorized() *GetInstallActionRunUnauthorized {
	return &GetInstallActionRunUnauthorized{}
}

/*
GetInstallActionRunUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionRunUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run unauthorized response has a 2xx status code
func (o *GetInstallActionRunUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run unauthorized response has a 3xx status code
func (o *GetInstallActionRunUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run unauthorized response has a 4xx status code
func (o *GetInstallActionRunUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run unauthorized response has a 5xx status code
func (o *GetInstallActionRunUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run unauthorized response a status code equal to that given
func (o *GetInstallActionRunUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install action run unauthorized response
func (o *GetInstallActionRunUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionRunUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRunUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRunUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunForbidden creates a GetInstallActionRunForbidden with default headers values
func NewGetInstallActionRunForbidden() *GetInstallActionRunForbidden {
	return &GetInstallActionRunForbidden{}
}

/*
GetInstallActionRunForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionRunForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run forbidden response has a 2xx status code
func (o *GetInstallActionRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run forbidden response has a 3xx status code
func (o *GetInstallActionRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run forbidden response has a 4xx status code
func (o *GetInstallActionRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run forbidden response has a 5xx status code
func (o *GetInstallActionRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run forbidden response a status code equal to that given
func (o *GetInstallActionRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install action run forbidden response
func (o *GetInstallActionRunForbidden) Code() int {
	return 403
}

func (o *GetInstallActionRunForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRunForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRunForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunNotFound creates a GetInstallActionRunNotFound with default headers values
func NewGetInstallActionRunNotFound() *GetInstallActionRunNotFound {
	return &GetInstallActionRunNotFound{}
}

/*
GetInstallActionRunNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionRunNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run not found response has a 2xx status code
func (o *GetInstallActionRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run not found response has a 3xx status code
func (o *GetInstallActionRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run not found response has a 4xx status code
func (o *GetInstallActionRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run not found response has a 5xx status code
func (o *GetInstallActionRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run not found response a status code equal to that given
func (o *GetInstallActionRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install action run not found response
func (o *GetInstallActionRunNotFound) Code() int {
	return 404
}

func (o *GetInstallActionRunNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRunNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRunNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunInternalServerError creates a GetInstallActionRunInternalServerError with default headers values
func NewGetInstallActionRunInternalServerError() *GetInstallActionRunInternalServerError {
	return &GetInstallActionRunInternalServerError{}
}

/*
GetInstallActionRunInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionRunInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run internal server error response has a 2xx status code
func (o *GetInstallActionRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run internal server error response has a 3xx status code
func (o *GetInstallActionRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run internal server error response has a 4xx status code
func (o *GetInstallActionRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action run internal server error response has a 5xx status code
func (o *GetInstallActionRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install action run internal server error response a status code equal to that given
func (o *GetInstallActionRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install action run internal server error response
func (o *GetInstallActionRunInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionRunInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRunInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}][%d] getInstallActionRunInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRunInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
