// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallSandboxRunsReader is a Reader for the GetInstallSandboxRuns structure.
type GetInstallSandboxRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallSandboxRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallSandboxRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallSandboxRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallSandboxRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallSandboxRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallSandboxRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallSandboxRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/sandbox-runs] GetInstallSandboxRuns", response, response.Code())
	}
}

// NewGetInstallSandboxRunsOK creates a GetInstallSandboxRunsOK with default headers values
func NewGetInstallSandboxRunsOK() *GetInstallSandboxRunsOK {
	return &GetInstallSandboxRunsOK{}
}

/*
GetInstallSandboxRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallSandboxRunsOK struct {
	Payload []*models.AppInstallSandboxRun
}

// IsSuccess returns true when this get install sandbox runs o k response has a 2xx status code
func (o *GetInstallSandboxRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install sandbox runs o k response has a 3xx status code
func (o *GetInstallSandboxRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox runs o k response has a 4xx status code
func (o *GetInstallSandboxRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox runs o k response has a 5xx status code
func (o *GetInstallSandboxRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox runs o k response a status code equal to that given
func (o *GetInstallSandboxRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install sandbox runs o k response
func (o *GetInstallSandboxRunsOK) Code() int {
	return 200
}

func (o *GetInstallSandboxRunsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsOK %s", 200, payload)
}

func (o *GetInstallSandboxRunsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsOK %s", 200, payload)
}

func (o *GetInstallSandboxRunsOK) GetPayload() []*models.AppInstallSandboxRun {
	return o.Payload
}

func (o *GetInstallSandboxRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunsBadRequest creates a GetInstallSandboxRunsBadRequest with default headers values
func NewGetInstallSandboxRunsBadRequest() *GetInstallSandboxRunsBadRequest {
	return &GetInstallSandboxRunsBadRequest{}
}

/*
GetInstallSandboxRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallSandboxRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox runs bad request response has a 2xx status code
func (o *GetInstallSandboxRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox runs bad request response has a 3xx status code
func (o *GetInstallSandboxRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox runs bad request response has a 4xx status code
func (o *GetInstallSandboxRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox runs bad request response has a 5xx status code
func (o *GetInstallSandboxRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox runs bad request response a status code equal to that given
func (o *GetInstallSandboxRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install sandbox runs bad request response
func (o *GetInstallSandboxRunsBadRequest) Code() int {
	return 400
}

func (o *GetInstallSandboxRunsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsBadRequest %s", 400, payload)
}

func (o *GetInstallSandboxRunsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsBadRequest %s", 400, payload)
}

func (o *GetInstallSandboxRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunsUnauthorized creates a GetInstallSandboxRunsUnauthorized with default headers values
func NewGetInstallSandboxRunsUnauthorized() *GetInstallSandboxRunsUnauthorized {
	return &GetInstallSandboxRunsUnauthorized{}
}

/*
GetInstallSandboxRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallSandboxRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox runs unauthorized response has a 2xx status code
func (o *GetInstallSandboxRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox runs unauthorized response has a 3xx status code
func (o *GetInstallSandboxRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox runs unauthorized response has a 4xx status code
func (o *GetInstallSandboxRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox runs unauthorized response has a 5xx status code
func (o *GetInstallSandboxRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox runs unauthorized response a status code equal to that given
func (o *GetInstallSandboxRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install sandbox runs unauthorized response
func (o *GetInstallSandboxRunsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallSandboxRunsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsUnauthorized %s", 401, payload)
}

func (o *GetInstallSandboxRunsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsUnauthorized %s", 401, payload)
}

func (o *GetInstallSandboxRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunsForbidden creates a GetInstallSandboxRunsForbidden with default headers values
func NewGetInstallSandboxRunsForbidden() *GetInstallSandboxRunsForbidden {
	return &GetInstallSandboxRunsForbidden{}
}

/*
GetInstallSandboxRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallSandboxRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox runs forbidden response has a 2xx status code
func (o *GetInstallSandboxRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox runs forbidden response has a 3xx status code
func (o *GetInstallSandboxRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox runs forbidden response has a 4xx status code
func (o *GetInstallSandboxRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox runs forbidden response has a 5xx status code
func (o *GetInstallSandboxRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox runs forbidden response a status code equal to that given
func (o *GetInstallSandboxRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install sandbox runs forbidden response
func (o *GetInstallSandboxRunsForbidden) Code() int {
	return 403
}

func (o *GetInstallSandboxRunsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsForbidden %s", 403, payload)
}

func (o *GetInstallSandboxRunsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsForbidden %s", 403, payload)
}

func (o *GetInstallSandboxRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunsNotFound creates a GetInstallSandboxRunsNotFound with default headers values
func NewGetInstallSandboxRunsNotFound() *GetInstallSandboxRunsNotFound {
	return &GetInstallSandboxRunsNotFound{}
}

/*
GetInstallSandboxRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallSandboxRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox runs not found response has a 2xx status code
func (o *GetInstallSandboxRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox runs not found response has a 3xx status code
func (o *GetInstallSandboxRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox runs not found response has a 4xx status code
func (o *GetInstallSandboxRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox runs not found response has a 5xx status code
func (o *GetInstallSandboxRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox runs not found response a status code equal to that given
func (o *GetInstallSandboxRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install sandbox runs not found response
func (o *GetInstallSandboxRunsNotFound) Code() int {
	return 404
}

func (o *GetInstallSandboxRunsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsNotFound %s", 404, payload)
}

func (o *GetInstallSandboxRunsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsNotFound %s", 404, payload)
}

func (o *GetInstallSandboxRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunsInternalServerError creates a GetInstallSandboxRunsInternalServerError with default headers values
func NewGetInstallSandboxRunsInternalServerError() *GetInstallSandboxRunsInternalServerError {
	return &GetInstallSandboxRunsInternalServerError{}
}

/*
GetInstallSandboxRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallSandboxRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox runs internal server error response has a 2xx status code
func (o *GetInstallSandboxRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox runs internal server error response has a 3xx status code
func (o *GetInstallSandboxRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox runs internal server error response has a 4xx status code
func (o *GetInstallSandboxRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox runs internal server error response has a 5xx status code
func (o *GetInstallSandboxRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install sandbox runs internal server error response a status code equal to that given
func (o *GetInstallSandboxRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install sandbox runs internal server error response
func (o *GetInstallSandboxRunsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallSandboxRunsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsInternalServerError %s", 500, payload)
}

func (o *GetInstallSandboxRunsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getInstallSandboxRunsInternalServerError %s", 500, payload)
}

func (o *GetInstallSandboxRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
