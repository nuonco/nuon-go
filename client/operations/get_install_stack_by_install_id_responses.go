// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallStackByInstallIDReader is a Reader for the GetInstallStackByInstallID structure.
type GetInstallStackByInstallIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallStackByInstallIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallStackByInstallIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallStackByInstallIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallStackByInstallIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallStackByInstallIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallStackByInstallIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallStackByInstallIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/stack] GetInstallStackByInstallID", response, response.Code())
	}
}

// NewGetInstallStackByInstallIDOK creates a GetInstallStackByInstallIDOK with default headers values
func NewGetInstallStackByInstallIDOK() *GetInstallStackByInstallIDOK {
	return &GetInstallStackByInstallIDOK{}
}

/*
GetInstallStackByInstallIDOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallStackByInstallIDOK struct {
	Payload []*models.AppInstallStack
}

// IsSuccess returns true when this get install stack by install Id o k response has a 2xx status code
func (o *GetInstallStackByInstallIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install stack by install Id o k response has a 3xx status code
func (o *GetInstallStackByInstallIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack by install Id o k response has a 4xx status code
func (o *GetInstallStackByInstallIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install stack by install Id o k response has a 5xx status code
func (o *GetInstallStackByInstallIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack by install Id o k response a status code equal to that given
func (o *GetInstallStackByInstallIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install stack by install Id o k response
func (o *GetInstallStackByInstallIDOK) Code() int {
	return 200
}

func (o *GetInstallStackByInstallIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdOK  %+v", 200, o.Payload)
}

func (o *GetInstallStackByInstallIDOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdOK  %+v", 200, o.Payload)
}

func (o *GetInstallStackByInstallIDOK) GetPayload() []*models.AppInstallStack {
	return o.Payload
}

func (o *GetInstallStackByInstallIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackByInstallIDBadRequest creates a GetInstallStackByInstallIDBadRequest with default headers values
func NewGetInstallStackByInstallIDBadRequest() *GetInstallStackByInstallIDBadRequest {
	return &GetInstallStackByInstallIDBadRequest{}
}

/*
GetInstallStackByInstallIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallStackByInstallIDBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack by install Id bad request response has a 2xx status code
func (o *GetInstallStackByInstallIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack by install Id bad request response has a 3xx status code
func (o *GetInstallStackByInstallIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack by install Id bad request response has a 4xx status code
func (o *GetInstallStackByInstallIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack by install Id bad request response has a 5xx status code
func (o *GetInstallStackByInstallIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack by install Id bad request response a status code equal to that given
func (o *GetInstallStackByInstallIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install stack by install Id bad request response
func (o *GetInstallStackByInstallIDBadRequest) Code() int {
	return 400
}

func (o *GetInstallStackByInstallIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallStackByInstallIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallStackByInstallIDBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackByInstallIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackByInstallIDUnauthorized creates a GetInstallStackByInstallIDUnauthorized with default headers values
func NewGetInstallStackByInstallIDUnauthorized() *GetInstallStackByInstallIDUnauthorized {
	return &GetInstallStackByInstallIDUnauthorized{}
}

/*
GetInstallStackByInstallIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallStackByInstallIDUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack by install Id unauthorized response has a 2xx status code
func (o *GetInstallStackByInstallIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack by install Id unauthorized response has a 3xx status code
func (o *GetInstallStackByInstallIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack by install Id unauthorized response has a 4xx status code
func (o *GetInstallStackByInstallIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack by install Id unauthorized response has a 5xx status code
func (o *GetInstallStackByInstallIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack by install Id unauthorized response a status code equal to that given
func (o *GetInstallStackByInstallIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install stack by install Id unauthorized response
func (o *GetInstallStackByInstallIDUnauthorized) Code() int {
	return 401
}

func (o *GetInstallStackByInstallIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallStackByInstallIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallStackByInstallIDUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackByInstallIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackByInstallIDForbidden creates a GetInstallStackByInstallIDForbidden with default headers values
func NewGetInstallStackByInstallIDForbidden() *GetInstallStackByInstallIDForbidden {
	return &GetInstallStackByInstallIDForbidden{}
}

/*
GetInstallStackByInstallIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallStackByInstallIDForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack by install Id forbidden response has a 2xx status code
func (o *GetInstallStackByInstallIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack by install Id forbidden response has a 3xx status code
func (o *GetInstallStackByInstallIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack by install Id forbidden response has a 4xx status code
func (o *GetInstallStackByInstallIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack by install Id forbidden response has a 5xx status code
func (o *GetInstallStackByInstallIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack by install Id forbidden response a status code equal to that given
func (o *GetInstallStackByInstallIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install stack by install Id forbidden response
func (o *GetInstallStackByInstallIDForbidden) Code() int {
	return 403
}

func (o *GetInstallStackByInstallIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallStackByInstallIDForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallStackByInstallIDForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackByInstallIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackByInstallIDNotFound creates a GetInstallStackByInstallIDNotFound with default headers values
func NewGetInstallStackByInstallIDNotFound() *GetInstallStackByInstallIDNotFound {
	return &GetInstallStackByInstallIDNotFound{}
}

/*
GetInstallStackByInstallIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallStackByInstallIDNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack by install Id not found response has a 2xx status code
func (o *GetInstallStackByInstallIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack by install Id not found response has a 3xx status code
func (o *GetInstallStackByInstallIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack by install Id not found response has a 4xx status code
func (o *GetInstallStackByInstallIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack by install Id not found response has a 5xx status code
func (o *GetInstallStackByInstallIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack by install Id not found response a status code equal to that given
func (o *GetInstallStackByInstallIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install stack by install Id not found response
func (o *GetInstallStackByInstallIDNotFound) Code() int {
	return 404
}

func (o *GetInstallStackByInstallIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallStackByInstallIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallStackByInstallIDNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackByInstallIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackByInstallIDInternalServerError creates a GetInstallStackByInstallIDInternalServerError with default headers values
func NewGetInstallStackByInstallIDInternalServerError() *GetInstallStackByInstallIDInternalServerError {
	return &GetInstallStackByInstallIDInternalServerError{}
}

/*
GetInstallStackByInstallIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallStackByInstallIDInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack by install Id internal server error response has a 2xx status code
func (o *GetInstallStackByInstallIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack by install Id internal server error response has a 3xx status code
func (o *GetInstallStackByInstallIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack by install Id internal server error response has a 4xx status code
func (o *GetInstallStackByInstallIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install stack by install Id internal server error response has a 5xx status code
func (o *GetInstallStackByInstallIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install stack by install Id internal server error response a status code equal to that given
func (o *GetInstallStackByInstallIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install stack by install Id internal server error response
func (o *GetInstallStackByInstallIDInternalServerError) Code() int {
	return 500
}

func (o *GetInstallStackByInstallIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallStackByInstallIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/stack][%d] getInstallStackByInstallIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallStackByInstallIDInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackByInstallIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
