// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallReadmeReader is a Reader for the GetInstallReadme structure.
type GetInstallReadmeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallReadmeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallReadmeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 206:
		result := NewGetInstallReadmePartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallReadmeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallReadmeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallReadmeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallReadmeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallReadmeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/readme] GetInstallReadme", response, response.Code())
	}
}

// NewGetInstallReadmeOK creates a GetInstallReadmeOK with default headers values
func NewGetInstallReadmeOK() *GetInstallReadmeOK {
	return &GetInstallReadmeOK{}
}

/*
GetInstallReadmeOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallReadmeOK struct {
	Payload *models.ServiceReadme
}

// IsSuccess returns true when this get install readme o k response has a 2xx status code
func (o *GetInstallReadmeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install readme o k response has a 3xx status code
func (o *GetInstallReadmeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme o k response has a 4xx status code
func (o *GetInstallReadmeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install readme o k response has a 5xx status code
func (o *GetInstallReadmeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install readme o k response a status code equal to that given
func (o *GetInstallReadmeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install readme o k response
func (o *GetInstallReadmeOK) Code() int {
	return 200
}

func (o *GetInstallReadmeOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeOK  %+v", 200, o.Payload)
}

func (o *GetInstallReadmeOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeOK  %+v", 200, o.Payload)
}

func (o *GetInstallReadmeOK) GetPayload() *models.ServiceReadme {
	return o.Payload
}

func (o *GetInstallReadmeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceReadme)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallReadmePartialContent creates a GetInstallReadmePartialContent with default headers values
func NewGetInstallReadmePartialContent() *GetInstallReadmePartialContent {
	return &GetInstallReadmePartialContent{}
}

/*
GetInstallReadmePartialContent describes a response with status code 206, with default header values.

Partial Content
*/
type GetInstallReadmePartialContent struct {
	Payload *models.ServiceReadme
}

// IsSuccess returns true when this get install readme partial content response has a 2xx status code
func (o *GetInstallReadmePartialContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install readme partial content response has a 3xx status code
func (o *GetInstallReadmePartialContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme partial content response has a 4xx status code
func (o *GetInstallReadmePartialContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install readme partial content response has a 5xx status code
func (o *GetInstallReadmePartialContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get install readme partial content response a status code equal to that given
func (o *GetInstallReadmePartialContent) IsCode(code int) bool {
	return code == 206
}

// Code gets the status code for the get install readme partial content response
func (o *GetInstallReadmePartialContent) Code() int {
	return 206
}

func (o *GetInstallReadmePartialContent) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmePartialContent  %+v", 206, o.Payload)
}

func (o *GetInstallReadmePartialContent) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmePartialContent  %+v", 206, o.Payload)
}

func (o *GetInstallReadmePartialContent) GetPayload() *models.ServiceReadme {
	return o.Payload
}

func (o *GetInstallReadmePartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceReadme)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallReadmeBadRequest creates a GetInstallReadmeBadRequest with default headers values
func NewGetInstallReadmeBadRequest() *GetInstallReadmeBadRequest {
	return &GetInstallReadmeBadRequest{}
}

/*
GetInstallReadmeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallReadmeBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install readme bad request response has a 2xx status code
func (o *GetInstallReadmeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install readme bad request response has a 3xx status code
func (o *GetInstallReadmeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme bad request response has a 4xx status code
func (o *GetInstallReadmeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install readme bad request response has a 5xx status code
func (o *GetInstallReadmeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install readme bad request response a status code equal to that given
func (o *GetInstallReadmeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install readme bad request response
func (o *GetInstallReadmeBadRequest) Code() int {
	return 400
}

func (o *GetInstallReadmeBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallReadmeBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallReadmeBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallReadmeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallReadmeUnauthorized creates a GetInstallReadmeUnauthorized with default headers values
func NewGetInstallReadmeUnauthorized() *GetInstallReadmeUnauthorized {
	return &GetInstallReadmeUnauthorized{}
}

/*
GetInstallReadmeUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallReadmeUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install readme unauthorized response has a 2xx status code
func (o *GetInstallReadmeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install readme unauthorized response has a 3xx status code
func (o *GetInstallReadmeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme unauthorized response has a 4xx status code
func (o *GetInstallReadmeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install readme unauthorized response has a 5xx status code
func (o *GetInstallReadmeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install readme unauthorized response a status code equal to that given
func (o *GetInstallReadmeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install readme unauthorized response
func (o *GetInstallReadmeUnauthorized) Code() int {
	return 401
}

func (o *GetInstallReadmeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallReadmeUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallReadmeUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallReadmeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallReadmeForbidden creates a GetInstallReadmeForbidden with default headers values
func NewGetInstallReadmeForbidden() *GetInstallReadmeForbidden {
	return &GetInstallReadmeForbidden{}
}

/*
GetInstallReadmeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallReadmeForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install readme forbidden response has a 2xx status code
func (o *GetInstallReadmeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install readme forbidden response has a 3xx status code
func (o *GetInstallReadmeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme forbidden response has a 4xx status code
func (o *GetInstallReadmeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install readme forbidden response has a 5xx status code
func (o *GetInstallReadmeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install readme forbidden response a status code equal to that given
func (o *GetInstallReadmeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install readme forbidden response
func (o *GetInstallReadmeForbidden) Code() int {
	return 403
}

func (o *GetInstallReadmeForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallReadmeForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallReadmeForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallReadmeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallReadmeNotFound creates a GetInstallReadmeNotFound with default headers values
func NewGetInstallReadmeNotFound() *GetInstallReadmeNotFound {
	return &GetInstallReadmeNotFound{}
}

/*
GetInstallReadmeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallReadmeNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install readme not found response has a 2xx status code
func (o *GetInstallReadmeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install readme not found response has a 3xx status code
func (o *GetInstallReadmeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme not found response has a 4xx status code
func (o *GetInstallReadmeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install readme not found response has a 5xx status code
func (o *GetInstallReadmeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install readme not found response a status code equal to that given
func (o *GetInstallReadmeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install readme not found response
func (o *GetInstallReadmeNotFound) Code() int {
	return 404
}

func (o *GetInstallReadmeNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallReadmeNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallReadmeNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallReadmeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallReadmeInternalServerError creates a GetInstallReadmeInternalServerError with default headers values
func NewGetInstallReadmeInternalServerError() *GetInstallReadmeInternalServerError {
	return &GetInstallReadmeInternalServerError{}
}

/*
GetInstallReadmeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallReadmeInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install readme internal server error response has a 2xx status code
func (o *GetInstallReadmeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install readme internal server error response has a 3xx status code
func (o *GetInstallReadmeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install readme internal server error response has a 4xx status code
func (o *GetInstallReadmeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install readme internal server error response has a 5xx status code
func (o *GetInstallReadmeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install readme internal server error response a status code equal to that given
func (o *GetInstallReadmeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install readme internal server error response
func (o *GetInstallReadmeInternalServerError) Code() int {
	return 500
}

func (o *GetInstallReadmeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallReadmeInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/readme][%d] getInstallReadmeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallReadmeInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallReadmeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
