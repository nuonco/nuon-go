// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CompleteUserJourneyReader is a Reader for the CompleteUserJourney structure.
type CompleteUserJourneyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CompleteUserJourneyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCompleteUserJourneyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCompleteUserJourneyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCompleteUserJourneyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCompleteUserJourneyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCompleteUserJourneyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCompleteUserJourneyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/account/user-journeys/{journey_name}/complete] CompleteUserJourney", response, response.Code())
	}
}

// NewCompleteUserJourneyOK creates a CompleteUserJourneyOK with default headers values
func NewCompleteUserJourneyOK() *CompleteUserJourneyOK {
	return &CompleteUserJourneyOK{}
}

/*
CompleteUserJourneyOK describes a response with status code 200, with default header values.

OK
*/
type CompleteUserJourneyOK struct {
	Payload *models.AppAccount
}

// IsSuccess returns true when this complete user journey o k response has a 2xx status code
func (o *CompleteUserJourneyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this complete user journey o k response has a 3xx status code
func (o *CompleteUserJourneyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete user journey o k response has a 4xx status code
func (o *CompleteUserJourneyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete user journey o k response has a 5xx status code
func (o *CompleteUserJourneyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this complete user journey o k response a status code equal to that given
func (o *CompleteUserJourneyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the complete user journey o k response
func (o *CompleteUserJourneyOK) Code() int {
	return 200
}

func (o *CompleteUserJourneyOK) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyOK  %+v", 200, o.Payload)
}

func (o *CompleteUserJourneyOK) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyOK  %+v", 200, o.Payload)
}

func (o *CompleteUserJourneyOK) GetPayload() *models.AppAccount {
	return o.Payload
}

func (o *CompleteUserJourneyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteUserJourneyBadRequest creates a CompleteUserJourneyBadRequest with default headers values
func NewCompleteUserJourneyBadRequest() *CompleteUserJourneyBadRequest {
	return &CompleteUserJourneyBadRequest{}
}

/*
CompleteUserJourneyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CompleteUserJourneyBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this complete user journey bad request response has a 2xx status code
func (o *CompleteUserJourneyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete user journey bad request response has a 3xx status code
func (o *CompleteUserJourneyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete user journey bad request response has a 4xx status code
func (o *CompleteUserJourneyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete user journey bad request response has a 5xx status code
func (o *CompleteUserJourneyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this complete user journey bad request response a status code equal to that given
func (o *CompleteUserJourneyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the complete user journey bad request response
func (o *CompleteUserJourneyBadRequest) Code() int {
	return 400
}

func (o *CompleteUserJourneyBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyBadRequest  %+v", 400, o.Payload)
}

func (o *CompleteUserJourneyBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyBadRequest  %+v", 400, o.Payload)
}

func (o *CompleteUserJourneyBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CompleteUserJourneyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteUserJourneyUnauthorized creates a CompleteUserJourneyUnauthorized with default headers values
func NewCompleteUserJourneyUnauthorized() *CompleteUserJourneyUnauthorized {
	return &CompleteUserJourneyUnauthorized{}
}

/*
CompleteUserJourneyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CompleteUserJourneyUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this complete user journey unauthorized response has a 2xx status code
func (o *CompleteUserJourneyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete user journey unauthorized response has a 3xx status code
func (o *CompleteUserJourneyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete user journey unauthorized response has a 4xx status code
func (o *CompleteUserJourneyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete user journey unauthorized response has a 5xx status code
func (o *CompleteUserJourneyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this complete user journey unauthorized response a status code equal to that given
func (o *CompleteUserJourneyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the complete user journey unauthorized response
func (o *CompleteUserJourneyUnauthorized) Code() int {
	return 401
}

func (o *CompleteUserJourneyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyUnauthorized  %+v", 401, o.Payload)
}

func (o *CompleteUserJourneyUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyUnauthorized  %+v", 401, o.Payload)
}

func (o *CompleteUserJourneyUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CompleteUserJourneyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteUserJourneyForbidden creates a CompleteUserJourneyForbidden with default headers values
func NewCompleteUserJourneyForbidden() *CompleteUserJourneyForbidden {
	return &CompleteUserJourneyForbidden{}
}

/*
CompleteUserJourneyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CompleteUserJourneyForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this complete user journey forbidden response has a 2xx status code
func (o *CompleteUserJourneyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete user journey forbidden response has a 3xx status code
func (o *CompleteUserJourneyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete user journey forbidden response has a 4xx status code
func (o *CompleteUserJourneyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete user journey forbidden response has a 5xx status code
func (o *CompleteUserJourneyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this complete user journey forbidden response a status code equal to that given
func (o *CompleteUserJourneyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the complete user journey forbidden response
func (o *CompleteUserJourneyForbidden) Code() int {
	return 403
}

func (o *CompleteUserJourneyForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyForbidden  %+v", 403, o.Payload)
}

func (o *CompleteUserJourneyForbidden) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyForbidden  %+v", 403, o.Payload)
}

func (o *CompleteUserJourneyForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CompleteUserJourneyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteUserJourneyNotFound creates a CompleteUserJourneyNotFound with default headers values
func NewCompleteUserJourneyNotFound() *CompleteUserJourneyNotFound {
	return &CompleteUserJourneyNotFound{}
}

/*
CompleteUserJourneyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CompleteUserJourneyNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this complete user journey not found response has a 2xx status code
func (o *CompleteUserJourneyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete user journey not found response has a 3xx status code
func (o *CompleteUserJourneyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete user journey not found response has a 4xx status code
func (o *CompleteUserJourneyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete user journey not found response has a 5xx status code
func (o *CompleteUserJourneyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this complete user journey not found response a status code equal to that given
func (o *CompleteUserJourneyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the complete user journey not found response
func (o *CompleteUserJourneyNotFound) Code() int {
	return 404
}

func (o *CompleteUserJourneyNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyNotFound  %+v", 404, o.Payload)
}

func (o *CompleteUserJourneyNotFound) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyNotFound  %+v", 404, o.Payload)
}

func (o *CompleteUserJourneyNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CompleteUserJourneyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteUserJourneyInternalServerError creates a CompleteUserJourneyInternalServerError with default headers values
func NewCompleteUserJourneyInternalServerError() *CompleteUserJourneyInternalServerError {
	return &CompleteUserJourneyInternalServerError{}
}

/*
CompleteUserJourneyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CompleteUserJourneyInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this complete user journey internal server error response has a 2xx status code
func (o *CompleteUserJourneyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete user journey internal server error response has a 3xx status code
func (o *CompleteUserJourneyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete user journey internal server error response has a 4xx status code
func (o *CompleteUserJourneyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete user journey internal server error response has a 5xx status code
func (o *CompleteUserJourneyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this complete user journey internal server error response a status code equal to that given
func (o *CompleteUserJourneyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the complete user journey internal server error response
func (o *CompleteUserJourneyInternalServerError) Code() int {
	return 500
}

func (o *CompleteUserJourneyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyInternalServerError  %+v", 500, o.Payload)
}

func (o *CompleteUserJourneyInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/complete][%d] completeUserJourneyInternalServerError  %+v", 500, o.Payload)
}

func (o *CompleteUserJourneyInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CompleteUserJourneyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
