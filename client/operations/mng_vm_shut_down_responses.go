// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// MngVMShutDownReader is a Reader for the MngVMShutDown structure.
type MngVMShutDownReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MngVMShutDownReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewMngVMShutDownCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMngVMShutDownBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMngVMShutDownUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMngVMShutDownForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMngVMShutDownNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMngVMShutDownInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/runners/{runner_id}/mng/shutdown-vm] MngVMShutDown", response, response.Code())
	}
}

// NewMngVMShutDownCreated creates a MngVMShutDownCreated with default headers values
func NewMngVMShutDownCreated() *MngVMShutDownCreated {
	return &MngVMShutDownCreated{}
}

/*
MngVMShutDownCreated describes a response with status code 201, with default header values.

Created
*/
type MngVMShutDownCreated struct {
	Payload bool
}

// IsSuccess returns true when this mng Vm shut down created response has a 2xx status code
func (o *MngVMShutDownCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this mng Vm shut down created response has a 3xx status code
func (o *MngVMShutDownCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mng Vm shut down created response has a 4xx status code
func (o *MngVMShutDownCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this mng Vm shut down created response has a 5xx status code
func (o *MngVMShutDownCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this mng Vm shut down created response a status code equal to that given
func (o *MngVMShutDownCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the mng Vm shut down created response
func (o *MngVMShutDownCreated) Code() int {
	return 201
}

func (o *MngVMShutDownCreated) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownCreated  %+v", 201, o.Payload)
}

func (o *MngVMShutDownCreated) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownCreated  %+v", 201, o.Payload)
}

func (o *MngVMShutDownCreated) GetPayload() bool {
	return o.Payload
}

func (o *MngVMShutDownCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMngVMShutDownBadRequest creates a MngVMShutDownBadRequest with default headers values
func NewMngVMShutDownBadRequest() *MngVMShutDownBadRequest {
	return &MngVMShutDownBadRequest{}
}

/*
MngVMShutDownBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type MngVMShutDownBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this mng Vm shut down bad request response has a 2xx status code
func (o *MngVMShutDownBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this mng Vm shut down bad request response has a 3xx status code
func (o *MngVMShutDownBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mng Vm shut down bad request response has a 4xx status code
func (o *MngVMShutDownBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this mng Vm shut down bad request response has a 5xx status code
func (o *MngVMShutDownBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this mng Vm shut down bad request response a status code equal to that given
func (o *MngVMShutDownBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the mng Vm shut down bad request response
func (o *MngVMShutDownBadRequest) Code() int {
	return 400
}

func (o *MngVMShutDownBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownBadRequest  %+v", 400, o.Payload)
}

func (o *MngVMShutDownBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownBadRequest  %+v", 400, o.Payload)
}

func (o *MngVMShutDownBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *MngVMShutDownBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMngVMShutDownUnauthorized creates a MngVMShutDownUnauthorized with default headers values
func NewMngVMShutDownUnauthorized() *MngVMShutDownUnauthorized {
	return &MngVMShutDownUnauthorized{}
}

/*
MngVMShutDownUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type MngVMShutDownUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this mng Vm shut down unauthorized response has a 2xx status code
func (o *MngVMShutDownUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this mng Vm shut down unauthorized response has a 3xx status code
func (o *MngVMShutDownUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mng Vm shut down unauthorized response has a 4xx status code
func (o *MngVMShutDownUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this mng Vm shut down unauthorized response has a 5xx status code
func (o *MngVMShutDownUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this mng Vm shut down unauthorized response a status code equal to that given
func (o *MngVMShutDownUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the mng Vm shut down unauthorized response
func (o *MngVMShutDownUnauthorized) Code() int {
	return 401
}

func (o *MngVMShutDownUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownUnauthorized  %+v", 401, o.Payload)
}

func (o *MngVMShutDownUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownUnauthorized  %+v", 401, o.Payload)
}

func (o *MngVMShutDownUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *MngVMShutDownUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMngVMShutDownForbidden creates a MngVMShutDownForbidden with default headers values
func NewMngVMShutDownForbidden() *MngVMShutDownForbidden {
	return &MngVMShutDownForbidden{}
}

/*
MngVMShutDownForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type MngVMShutDownForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this mng Vm shut down forbidden response has a 2xx status code
func (o *MngVMShutDownForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this mng Vm shut down forbidden response has a 3xx status code
func (o *MngVMShutDownForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mng Vm shut down forbidden response has a 4xx status code
func (o *MngVMShutDownForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this mng Vm shut down forbidden response has a 5xx status code
func (o *MngVMShutDownForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this mng Vm shut down forbidden response a status code equal to that given
func (o *MngVMShutDownForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the mng Vm shut down forbidden response
func (o *MngVMShutDownForbidden) Code() int {
	return 403
}

func (o *MngVMShutDownForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownForbidden  %+v", 403, o.Payload)
}

func (o *MngVMShutDownForbidden) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownForbidden  %+v", 403, o.Payload)
}

func (o *MngVMShutDownForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *MngVMShutDownForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMngVMShutDownNotFound creates a MngVMShutDownNotFound with default headers values
func NewMngVMShutDownNotFound() *MngVMShutDownNotFound {
	return &MngVMShutDownNotFound{}
}

/*
MngVMShutDownNotFound describes a response with status code 404, with default header values.

Not Found
*/
type MngVMShutDownNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this mng Vm shut down not found response has a 2xx status code
func (o *MngVMShutDownNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this mng Vm shut down not found response has a 3xx status code
func (o *MngVMShutDownNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mng Vm shut down not found response has a 4xx status code
func (o *MngVMShutDownNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this mng Vm shut down not found response has a 5xx status code
func (o *MngVMShutDownNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this mng Vm shut down not found response a status code equal to that given
func (o *MngVMShutDownNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the mng Vm shut down not found response
func (o *MngVMShutDownNotFound) Code() int {
	return 404
}

func (o *MngVMShutDownNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownNotFound  %+v", 404, o.Payload)
}

func (o *MngVMShutDownNotFound) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownNotFound  %+v", 404, o.Payload)
}

func (o *MngVMShutDownNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *MngVMShutDownNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMngVMShutDownInternalServerError creates a MngVMShutDownInternalServerError with default headers values
func NewMngVMShutDownInternalServerError() *MngVMShutDownInternalServerError {
	return &MngVMShutDownInternalServerError{}
}

/*
MngVMShutDownInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type MngVMShutDownInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this mng Vm shut down internal server error response has a 2xx status code
func (o *MngVMShutDownInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this mng Vm shut down internal server error response has a 3xx status code
func (o *MngVMShutDownInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this mng Vm shut down internal server error response has a 4xx status code
func (o *MngVMShutDownInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this mng Vm shut down internal server error response has a 5xx status code
func (o *MngVMShutDownInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this mng Vm shut down internal server error response a status code equal to that given
func (o *MngVMShutDownInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the mng Vm shut down internal server error response
func (o *MngVMShutDownInternalServerError) Code() int {
	return 500
}

func (o *MngVMShutDownInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownInternalServerError  %+v", 500, o.Payload)
}

func (o *MngVMShutDownInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/mng/shutdown-vm][%d] mngVmShutDownInternalServerError  %+v", 500, o.Payload)
}

func (o *MngVMShutDownInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *MngVMShutDownInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
