// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetRunnerJobV2Reader is a Reader for the GetRunnerJobV2 structure.
type GetRunnerJobV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerJobV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerJobV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerJobV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerJobV2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerJobV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerJobV2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerJobV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/runners/{runner_id}/jobs/{job_id}] GetRunnerJobV2", response, response.Code())
	}
}

// NewGetRunnerJobV2OK creates a GetRunnerJobV2OK with default headers values
func NewGetRunnerJobV2OK() *GetRunnerJobV2OK {
	return &GetRunnerJobV2OK{}
}

/*
GetRunnerJobV2OK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerJobV2OK struct {
	Payload *models.AppRunnerJob
}

// IsSuccess returns true when this get runner job v2 o k response has a 2xx status code
func (o *GetRunnerJobV2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner job v2 o k response has a 3xx status code
func (o *GetRunnerJobV2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job v2 o k response has a 4xx status code
func (o *GetRunnerJobV2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner job v2 o k response has a 5xx status code
func (o *GetRunnerJobV2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job v2 o k response a status code equal to that given
func (o *GetRunnerJobV2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner job v2 o k response
func (o *GetRunnerJobV2OK) Code() int {
	return 200
}

func (o *GetRunnerJobV2OK) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2OK  %+v", 200, o.Payload)
}

func (o *GetRunnerJobV2OK) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2OK  %+v", 200, o.Payload)
}

func (o *GetRunnerJobV2OK) GetPayload() *models.AppRunnerJob {
	return o.Payload
}

func (o *GetRunnerJobV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppRunnerJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobV2BadRequest creates a GetRunnerJobV2BadRequest with default headers values
func NewGetRunnerJobV2BadRequest() *GetRunnerJobV2BadRequest {
	return &GetRunnerJobV2BadRequest{}
}

/*
GetRunnerJobV2BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerJobV2BadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job v2 bad request response has a 2xx status code
func (o *GetRunnerJobV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job v2 bad request response has a 3xx status code
func (o *GetRunnerJobV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job v2 bad request response has a 4xx status code
func (o *GetRunnerJobV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job v2 bad request response has a 5xx status code
func (o *GetRunnerJobV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job v2 bad request response a status code equal to that given
func (o *GetRunnerJobV2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner job v2 bad request response
func (o *GetRunnerJobV2BadRequest) Code() int {
	return 400
}

func (o *GetRunnerJobV2BadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2BadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerJobV2BadRequest) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2BadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerJobV2BadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobV2Unauthorized creates a GetRunnerJobV2Unauthorized with default headers values
func NewGetRunnerJobV2Unauthorized() *GetRunnerJobV2Unauthorized {
	return &GetRunnerJobV2Unauthorized{}
}

/*
GetRunnerJobV2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerJobV2Unauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job v2 unauthorized response has a 2xx status code
func (o *GetRunnerJobV2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job v2 unauthorized response has a 3xx status code
func (o *GetRunnerJobV2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job v2 unauthorized response has a 4xx status code
func (o *GetRunnerJobV2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job v2 unauthorized response has a 5xx status code
func (o *GetRunnerJobV2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job v2 unauthorized response a status code equal to that given
func (o *GetRunnerJobV2Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner job v2 unauthorized response
func (o *GetRunnerJobV2Unauthorized) Code() int {
	return 401
}

func (o *GetRunnerJobV2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2Unauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerJobV2Unauthorized) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2Unauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerJobV2Unauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobV2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobV2Forbidden creates a GetRunnerJobV2Forbidden with default headers values
func NewGetRunnerJobV2Forbidden() *GetRunnerJobV2Forbidden {
	return &GetRunnerJobV2Forbidden{}
}

/*
GetRunnerJobV2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerJobV2Forbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job v2 forbidden response has a 2xx status code
func (o *GetRunnerJobV2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job v2 forbidden response has a 3xx status code
func (o *GetRunnerJobV2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job v2 forbidden response has a 4xx status code
func (o *GetRunnerJobV2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job v2 forbidden response has a 5xx status code
func (o *GetRunnerJobV2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job v2 forbidden response a status code equal to that given
func (o *GetRunnerJobV2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner job v2 forbidden response
func (o *GetRunnerJobV2Forbidden) Code() int {
	return 403
}

func (o *GetRunnerJobV2Forbidden) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2Forbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerJobV2Forbidden) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2Forbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerJobV2Forbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobV2NotFound creates a GetRunnerJobV2NotFound with default headers values
func NewGetRunnerJobV2NotFound() *GetRunnerJobV2NotFound {
	return &GetRunnerJobV2NotFound{}
}

/*
GetRunnerJobV2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerJobV2NotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job v2 not found response has a 2xx status code
func (o *GetRunnerJobV2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job v2 not found response has a 3xx status code
func (o *GetRunnerJobV2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job v2 not found response has a 4xx status code
func (o *GetRunnerJobV2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner job v2 not found response has a 5xx status code
func (o *GetRunnerJobV2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner job v2 not found response a status code equal to that given
func (o *GetRunnerJobV2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner job v2 not found response
func (o *GetRunnerJobV2NotFound) Code() int {
	return 404
}

func (o *GetRunnerJobV2NotFound) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2NotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerJobV2NotFound) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2NotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerJobV2NotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobV2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerJobV2InternalServerError creates a GetRunnerJobV2InternalServerError with default headers values
func NewGetRunnerJobV2InternalServerError() *GetRunnerJobV2InternalServerError {
	return &GetRunnerJobV2InternalServerError{}
}

/*
GetRunnerJobV2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerJobV2InternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner job v2 internal server error response has a 2xx status code
func (o *GetRunnerJobV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner job v2 internal server error response has a 3xx status code
func (o *GetRunnerJobV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner job v2 internal server error response has a 4xx status code
func (o *GetRunnerJobV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner job v2 internal server error response has a 5xx status code
func (o *GetRunnerJobV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner job v2 internal server error response a status code equal to that given
func (o *GetRunnerJobV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner job v2 internal server error response
func (o *GetRunnerJobV2InternalServerError) Code() int {
	return 500
}

func (o *GetRunnerJobV2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2InternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerJobV2InternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/jobs/{job_id}][%d] getRunnerJobV2InternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerJobV2InternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerJobV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
