// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetFlowReader is a Reader for the GetFlow structure.
type GetFlowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFlowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFlowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFlowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFlowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFlowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFlowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFlowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/flows/{flow_id}] GetFlow", response, response.Code())
	}
}

// NewGetFlowOK creates a GetFlowOK with default headers values
func NewGetFlowOK() *GetFlowOK {
	return &GetFlowOK{}
}

/*
GetFlowOK describes a response with status code 200, with default header values.

OK
*/
type GetFlowOK struct {
	Payload *models.AppInstallWorkflow
}

// IsSuccess returns true when this get flow o k response has a 2xx status code
func (o *GetFlowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get flow o k response has a 3xx status code
func (o *GetFlowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow o k response has a 4xx status code
func (o *GetFlowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow o k response has a 5xx status code
func (o *GetFlowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow o k response a status code equal to that given
func (o *GetFlowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get flow o k response
func (o *GetFlowOK) Code() int {
	return 200
}

func (o *GetFlowOK) Error() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowOK  %+v", 200, o.Payload)
}

func (o *GetFlowOK) String() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowOK  %+v", 200, o.Payload)
}

func (o *GetFlowOK) GetPayload() *models.AppInstallWorkflow {
	return o.Payload
}

func (o *GetFlowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowBadRequest creates a GetFlowBadRequest with default headers values
func NewGetFlowBadRequest() *GetFlowBadRequest {
	return &GetFlowBadRequest{}
}

/*
GetFlowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFlowBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get flow bad request response has a 2xx status code
func (o *GetFlowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow bad request response has a 3xx status code
func (o *GetFlowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow bad request response has a 4xx status code
func (o *GetFlowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow bad request response has a 5xx status code
func (o *GetFlowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow bad request response a status code equal to that given
func (o *GetFlowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get flow bad request response
func (o *GetFlowBadRequest) Code() int {
	return 400
}

func (o *GetFlowBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowBadRequest  %+v", 400, o.Payload)
}

func (o *GetFlowBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetFlowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowUnauthorized creates a GetFlowUnauthorized with default headers values
func NewGetFlowUnauthorized() *GetFlowUnauthorized {
	return &GetFlowUnauthorized{}
}

/*
GetFlowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFlowUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get flow unauthorized response has a 2xx status code
func (o *GetFlowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow unauthorized response has a 3xx status code
func (o *GetFlowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow unauthorized response has a 4xx status code
func (o *GetFlowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow unauthorized response has a 5xx status code
func (o *GetFlowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow unauthorized response a status code equal to that given
func (o *GetFlowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get flow unauthorized response
func (o *GetFlowUnauthorized) Code() int {
	return 401
}

func (o *GetFlowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFlowUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetFlowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowForbidden creates a GetFlowForbidden with default headers values
func NewGetFlowForbidden() *GetFlowForbidden {
	return &GetFlowForbidden{}
}

/*
GetFlowForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFlowForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get flow forbidden response has a 2xx status code
func (o *GetFlowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow forbidden response has a 3xx status code
func (o *GetFlowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow forbidden response has a 4xx status code
func (o *GetFlowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow forbidden response has a 5xx status code
func (o *GetFlowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow forbidden response a status code equal to that given
func (o *GetFlowForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get flow forbidden response
func (o *GetFlowForbidden) Code() int {
	return 403
}

func (o *GetFlowForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowForbidden) String() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowForbidden  %+v", 403, o.Payload)
}

func (o *GetFlowForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetFlowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowNotFound creates a GetFlowNotFound with default headers values
func NewGetFlowNotFound() *GetFlowNotFound {
	return &GetFlowNotFound{}
}

/*
GetFlowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFlowNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get flow not found response has a 2xx status code
func (o *GetFlowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow not found response has a 3xx status code
func (o *GetFlowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow not found response has a 4xx status code
func (o *GetFlowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get flow not found response has a 5xx status code
func (o *GetFlowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get flow not found response a status code equal to that given
func (o *GetFlowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get flow not found response
func (o *GetFlowNotFound) Code() int {
	return 404
}

func (o *GetFlowNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowNotFound) String() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowNotFound  %+v", 404, o.Payload)
}

func (o *GetFlowNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetFlowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFlowInternalServerError creates a GetFlowInternalServerError with default headers values
func NewGetFlowInternalServerError() *GetFlowInternalServerError {
	return &GetFlowInternalServerError{}
}

/*
GetFlowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFlowInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get flow internal server error response has a 2xx status code
func (o *GetFlowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get flow internal server error response has a 3xx status code
func (o *GetFlowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get flow internal server error response has a 4xx status code
func (o *GetFlowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get flow internal server error response has a 5xx status code
func (o *GetFlowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get flow internal server error response a status code equal to that given
func (o *GetFlowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get flow internal server error response
func (o *GetFlowInternalServerError) Code() int {
	return 500
}

func (o *GetFlowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/flows/{flow_id}][%d] getFlowInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFlowInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetFlowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
