// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1ComponentsComponentIDBuildsBuildIDPlanReader is a Reader for the GetV1ComponentsComponentIDBuildsBuildIDPlan structure.
type GetV1ComponentsComponentIDBuildsBuildIDPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1ComponentsComponentIDBuildsBuildIDPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1ComponentsComponentIDBuildsBuildIDPlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1ComponentsComponentIDBuildsBuildIDPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/components/{component_id}/builds/{build_id}/plan] GetV1ComponentsComponentIDBuildsBuildIDPlan", response, response.Code())
	}
}

// NewGetV1ComponentsComponentIDBuildsBuildIDPlanOK creates a GetV1ComponentsComponentIDBuildsBuildIDPlanOK with default headers values
func NewGetV1ComponentsComponentIDBuildsBuildIDPlanOK() *GetV1ComponentsComponentIDBuildsBuildIDPlanOK {
	return &GetV1ComponentsComponentIDBuildsBuildIDPlanOK{}
}

/*
GetV1ComponentsComponentIDBuildsBuildIDPlanOK describes a response with status code 200, with default header values.

OK
*/
type GetV1ComponentsComponentIDBuildsBuildIDPlanOK struct {
	Payload *models.Planv1Plan
}

// IsSuccess returns true when this get v1 components component Id builds build Id plan o k response has a 2xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 components component Id builds build Id plan o k response has a 3xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 components component Id builds build Id plan o k response has a 4xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 components component Id builds build Id plan o k response has a 5xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 components component Id builds build Id plan o k response a status code equal to that given
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 components component Id builds build Id plan o k response
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) Code() int {
	return 200
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanOK  %+v", 200, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanOK  %+v", 200, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) GetPayload() *models.Planv1Plan {
	return o.Payload
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Planv1Plan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest creates a GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest with default headers values
func NewGetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest() *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest {
	return &GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest{}
}

/*
GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 components component Id builds build Id plan bad request response has a 2xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 components component Id builds build Id plan bad request response has a 3xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 components component Id builds build Id plan bad request response has a 4xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 components component Id builds build Id plan bad request response has a 5xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 components component Id builds build Id plan bad request response a status code equal to that given
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 components component Id builds build Id plan bad request response
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) Code() int {
	return 400
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized creates a GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized with default headers values
func NewGetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized() *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized {
	return &GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized{}
}

/*
GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 components component Id builds build Id plan unauthorized response has a 2xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 components component Id builds build Id plan unauthorized response has a 3xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 components component Id builds build Id plan unauthorized response has a 4xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 components component Id builds build Id plan unauthorized response has a 5xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 components component Id builds build Id plan unauthorized response a status code equal to that given
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 components component Id builds build Id plan unauthorized response
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) Code() int {
	return 401
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ComponentsComponentIDBuildsBuildIDPlanForbidden creates a GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden with default headers values
func NewGetV1ComponentsComponentIDBuildsBuildIDPlanForbidden() *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden {
	return &GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden{}
}

/*
GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 components component Id builds build Id plan forbidden response has a 2xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 components component Id builds build Id plan forbidden response has a 3xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 components component Id builds build Id plan forbidden response has a 4xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 components component Id builds build Id plan forbidden response has a 5xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 components component Id builds build Id plan forbidden response a status code equal to that given
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 components component Id builds build Id plan forbidden response
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) Code() int {
	return 403
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanForbidden  %+v", 403, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanForbidden  %+v", 403, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ComponentsComponentIDBuildsBuildIDPlanNotFound creates a GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound with default headers values
func NewGetV1ComponentsComponentIDBuildsBuildIDPlanNotFound() *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound {
	return &GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound{}
}

/*
GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 components component Id builds build Id plan not found response has a 2xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 components component Id builds build Id plan not found response has a 3xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 components component Id builds build Id plan not found response has a 4xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 components component Id builds build Id plan not found response has a 5xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 components component Id builds build Id plan not found response a status code equal to that given
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 components component Id builds build Id plan not found response
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) Code() int {
	return 404
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanNotFound  %+v", 404, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanNotFound  %+v", 404, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError creates a GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError with default headers values
func NewGetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError() *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError {
	return &GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError{}
}

/*
GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 components component Id builds build Id plan internal server error response has a 2xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 components component Id builds build Id plan internal server error response has a 3xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 components component Id builds build Id plan internal server error response has a 4xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 components component Id builds build Id plan internal server error response has a 5xx status code
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 components component Id builds build Id plan internal server error response a status code equal to that given
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 components component Id builds build Id plan internal server error response
func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) Code() int {
	return 500
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/components/{component_id}/builds/{build_id}/plan][%d] getV1ComponentsComponentIdBuildsBuildIdPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1ComponentsComponentIDBuildsBuildIDPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
