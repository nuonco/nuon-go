// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionsLatestRunsReader is a Reader for the GetInstallActionsLatestRuns structure.
type GetInstallActionsLatestRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionsLatestRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionsLatestRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionsLatestRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionsLatestRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionsLatestRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionsLatestRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionsLatestRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions/latest-runs] GetInstallActionsLatestRuns", response, response.Code())
	}
}

// NewGetInstallActionsLatestRunsOK creates a GetInstallActionsLatestRunsOK with default headers values
func NewGetInstallActionsLatestRunsOK() *GetInstallActionsLatestRunsOK {
	return &GetInstallActionsLatestRunsOK{}
}

/*
GetInstallActionsLatestRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionsLatestRunsOK struct {
	Payload []*models.AppInstallActionWorkflow
}

// IsSuccess returns true when this get install actions latest runs o k response has a 2xx status code
func (o *GetInstallActionsLatestRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install actions latest runs o k response has a 3xx status code
func (o *GetInstallActionsLatestRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions latest runs o k response has a 4xx status code
func (o *GetInstallActionsLatestRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install actions latest runs o k response has a 5xx status code
func (o *GetInstallActionsLatestRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions latest runs o k response a status code equal to that given
func (o *GetInstallActionsLatestRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install actions latest runs o k response
func (o *GetInstallActionsLatestRunsOK) Code() int {
	return 200
}

func (o *GetInstallActionsLatestRunsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionsLatestRunsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionsLatestRunsOK) GetPayload() []*models.AppInstallActionWorkflow {
	return o.Payload
}

func (o *GetInstallActionsLatestRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsLatestRunsBadRequest creates a GetInstallActionsLatestRunsBadRequest with default headers values
func NewGetInstallActionsLatestRunsBadRequest() *GetInstallActionsLatestRunsBadRequest {
	return &GetInstallActionsLatestRunsBadRequest{}
}

/*
GetInstallActionsLatestRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionsLatestRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions latest runs bad request response has a 2xx status code
func (o *GetInstallActionsLatestRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions latest runs bad request response has a 3xx status code
func (o *GetInstallActionsLatestRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions latest runs bad request response has a 4xx status code
func (o *GetInstallActionsLatestRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions latest runs bad request response has a 5xx status code
func (o *GetInstallActionsLatestRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions latest runs bad request response a status code equal to that given
func (o *GetInstallActionsLatestRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install actions latest runs bad request response
func (o *GetInstallActionsLatestRunsBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionsLatestRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionsLatestRunsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionsLatestRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsLatestRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsLatestRunsUnauthorized creates a GetInstallActionsLatestRunsUnauthorized with default headers values
func NewGetInstallActionsLatestRunsUnauthorized() *GetInstallActionsLatestRunsUnauthorized {
	return &GetInstallActionsLatestRunsUnauthorized{}
}

/*
GetInstallActionsLatestRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionsLatestRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions latest runs unauthorized response has a 2xx status code
func (o *GetInstallActionsLatestRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions latest runs unauthorized response has a 3xx status code
func (o *GetInstallActionsLatestRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions latest runs unauthorized response has a 4xx status code
func (o *GetInstallActionsLatestRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions latest runs unauthorized response has a 5xx status code
func (o *GetInstallActionsLatestRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions latest runs unauthorized response a status code equal to that given
func (o *GetInstallActionsLatestRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install actions latest runs unauthorized response
func (o *GetInstallActionsLatestRunsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionsLatestRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionsLatestRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionsLatestRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsLatestRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsLatestRunsForbidden creates a GetInstallActionsLatestRunsForbidden with default headers values
func NewGetInstallActionsLatestRunsForbidden() *GetInstallActionsLatestRunsForbidden {
	return &GetInstallActionsLatestRunsForbidden{}
}

/*
GetInstallActionsLatestRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionsLatestRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions latest runs forbidden response has a 2xx status code
func (o *GetInstallActionsLatestRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions latest runs forbidden response has a 3xx status code
func (o *GetInstallActionsLatestRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions latest runs forbidden response has a 4xx status code
func (o *GetInstallActionsLatestRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions latest runs forbidden response has a 5xx status code
func (o *GetInstallActionsLatestRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions latest runs forbidden response a status code equal to that given
func (o *GetInstallActionsLatestRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install actions latest runs forbidden response
func (o *GetInstallActionsLatestRunsForbidden) Code() int {
	return 403
}

func (o *GetInstallActionsLatestRunsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionsLatestRunsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionsLatestRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsLatestRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsLatestRunsNotFound creates a GetInstallActionsLatestRunsNotFound with default headers values
func NewGetInstallActionsLatestRunsNotFound() *GetInstallActionsLatestRunsNotFound {
	return &GetInstallActionsLatestRunsNotFound{}
}

/*
GetInstallActionsLatestRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionsLatestRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions latest runs not found response has a 2xx status code
func (o *GetInstallActionsLatestRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions latest runs not found response has a 3xx status code
func (o *GetInstallActionsLatestRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions latest runs not found response has a 4xx status code
func (o *GetInstallActionsLatestRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions latest runs not found response has a 5xx status code
func (o *GetInstallActionsLatestRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions latest runs not found response a status code equal to that given
func (o *GetInstallActionsLatestRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install actions latest runs not found response
func (o *GetInstallActionsLatestRunsNotFound) Code() int {
	return 404
}

func (o *GetInstallActionsLatestRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionsLatestRunsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionsLatestRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsLatestRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsLatestRunsInternalServerError creates a GetInstallActionsLatestRunsInternalServerError with default headers values
func NewGetInstallActionsLatestRunsInternalServerError() *GetInstallActionsLatestRunsInternalServerError {
	return &GetInstallActionsLatestRunsInternalServerError{}
}

/*
GetInstallActionsLatestRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionsLatestRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions latest runs internal server error response has a 2xx status code
func (o *GetInstallActionsLatestRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions latest runs internal server error response has a 3xx status code
func (o *GetInstallActionsLatestRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions latest runs internal server error response has a 4xx status code
func (o *GetInstallActionsLatestRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install actions latest runs internal server error response has a 5xx status code
func (o *GetInstallActionsLatestRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install actions latest runs internal server error response a status code equal to that given
func (o *GetInstallActionsLatestRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install actions latest runs internal server error response
func (o *GetInstallActionsLatestRunsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionsLatestRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionsLatestRunsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/latest-runs][%d] getInstallActionsLatestRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionsLatestRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsLatestRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
