// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetRunnerRecentHealthChecksReader is a Reader for the GetRunnerRecentHealthChecks structure.
type GetRunnerRecentHealthChecksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerRecentHealthChecksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerRecentHealthChecksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerRecentHealthChecksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerRecentHealthChecksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerRecentHealthChecksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerRecentHealthChecksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerRecentHealthChecksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/runners/{runner_id}/recent-health-checks] GetRunnerRecentHealthChecks", response, response.Code())
	}
}

// NewGetRunnerRecentHealthChecksOK creates a GetRunnerRecentHealthChecksOK with default headers values
func NewGetRunnerRecentHealthChecksOK() *GetRunnerRecentHealthChecksOK {
	return &GetRunnerRecentHealthChecksOK{}
}

/*
GetRunnerRecentHealthChecksOK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerRecentHealthChecksOK struct {
	Payload []*models.AppRunnerHealthCheck
}

// IsSuccess returns true when this get runner recent health checks o k response has a 2xx status code
func (o *GetRunnerRecentHealthChecksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner recent health checks o k response has a 3xx status code
func (o *GetRunnerRecentHealthChecksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent health checks o k response has a 4xx status code
func (o *GetRunnerRecentHealthChecksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner recent health checks o k response has a 5xx status code
func (o *GetRunnerRecentHealthChecksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent health checks o k response a status code equal to that given
func (o *GetRunnerRecentHealthChecksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner recent health checks o k response
func (o *GetRunnerRecentHealthChecksOK) Code() int {
	return 200
}

func (o *GetRunnerRecentHealthChecksOK) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksOK  %+v", 200, o.Payload)
}

func (o *GetRunnerRecentHealthChecksOK) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksOK  %+v", 200, o.Payload)
}

func (o *GetRunnerRecentHealthChecksOK) GetPayload() []*models.AppRunnerHealthCheck {
	return o.Payload
}

func (o *GetRunnerRecentHealthChecksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHealthChecksBadRequest creates a GetRunnerRecentHealthChecksBadRequest with default headers values
func NewGetRunnerRecentHealthChecksBadRequest() *GetRunnerRecentHealthChecksBadRequest {
	return &GetRunnerRecentHealthChecksBadRequest{}
}

/*
GetRunnerRecentHealthChecksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerRecentHealthChecksBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent health checks bad request response has a 2xx status code
func (o *GetRunnerRecentHealthChecksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent health checks bad request response has a 3xx status code
func (o *GetRunnerRecentHealthChecksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent health checks bad request response has a 4xx status code
func (o *GetRunnerRecentHealthChecksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent health checks bad request response has a 5xx status code
func (o *GetRunnerRecentHealthChecksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent health checks bad request response a status code equal to that given
func (o *GetRunnerRecentHealthChecksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner recent health checks bad request response
func (o *GetRunnerRecentHealthChecksBadRequest) Code() int {
	return 400
}

func (o *GetRunnerRecentHealthChecksBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerRecentHealthChecksBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksBadRequest  %+v", 400, o.Payload)
}

func (o *GetRunnerRecentHealthChecksBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHealthChecksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHealthChecksUnauthorized creates a GetRunnerRecentHealthChecksUnauthorized with default headers values
func NewGetRunnerRecentHealthChecksUnauthorized() *GetRunnerRecentHealthChecksUnauthorized {
	return &GetRunnerRecentHealthChecksUnauthorized{}
}

/*
GetRunnerRecentHealthChecksUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerRecentHealthChecksUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent health checks unauthorized response has a 2xx status code
func (o *GetRunnerRecentHealthChecksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent health checks unauthorized response has a 3xx status code
func (o *GetRunnerRecentHealthChecksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent health checks unauthorized response has a 4xx status code
func (o *GetRunnerRecentHealthChecksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent health checks unauthorized response has a 5xx status code
func (o *GetRunnerRecentHealthChecksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent health checks unauthorized response a status code equal to that given
func (o *GetRunnerRecentHealthChecksUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner recent health checks unauthorized response
func (o *GetRunnerRecentHealthChecksUnauthorized) Code() int {
	return 401
}

func (o *GetRunnerRecentHealthChecksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerRecentHealthChecksUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRunnerRecentHealthChecksUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHealthChecksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHealthChecksForbidden creates a GetRunnerRecentHealthChecksForbidden with default headers values
func NewGetRunnerRecentHealthChecksForbidden() *GetRunnerRecentHealthChecksForbidden {
	return &GetRunnerRecentHealthChecksForbidden{}
}

/*
GetRunnerRecentHealthChecksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerRecentHealthChecksForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent health checks forbidden response has a 2xx status code
func (o *GetRunnerRecentHealthChecksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent health checks forbidden response has a 3xx status code
func (o *GetRunnerRecentHealthChecksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent health checks forbidden response has a 4xx status code
func (o *GetRunnerRecentHealthChecksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent health checks forbidden response has a 5xx status code
func (o *GetRunnerRecentHealthChecksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent health checks forbidden response a status code equal to that given
func (o *GetRunnerRecentHealthChecksForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner recent health checks forbidden response
func (o *GetRunnerRecentHealthChecksForbidden) Code() int {
	return 403
}

func (o *GetRunnerRecentHealthChecksForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksForbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerRecentHealthChecksForbidden) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksForbidden  %+v", 403, o.Payload)
}

func (o *GetRunnerRecentHealthChecksForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHealthChecksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHealthChecksNotFound creates a GetRunnerRecentHealthChecksNotFound with default headers values
func NewGetRunnerRecentHealthChecksNotFound() *GetRunnerRecentHealthChecksNotFound {
	return &GetRunnerRecentHealthChecksNotFound{}
}

/*
GetRunnerRecentHealthChecksNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerRecentHealthChecksNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent health checks not found response has a 2xx status code
func (o *GetRunnerRecentHealthChecksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent health checks not found response has a 3xx status code
func (o *GetRunnerRecentHealthChecksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent health checks not found response has a 4xx status code
func (o *GetRunnerRecentHealthChecksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner recent health checks not found response has a 5xx status code
func (o *GetRunnerRecentHealthChecksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner recent health checks not found response a status code equal to that given
func (o *GetRunnerRecentHealthChecksNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner recent health checks not found response
func (o *GetRunnerRecentHealthChecksNotFound) Code() int {
	return 404
}

func (o *GetRunnerRecentHealthChecksNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksNotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerRecentHealthChecksNotFound) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksNotFound  %+v", 404, o.Payload)
}

func (o *GetRunnerRecentHealthChecksNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHealthChecksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerRecentHealthChecksInternalServerError creates a GetRunnerRecentHealthChecksInternalServerError with default headers values
func NewGetRunnerRecentHealthChecksInternalServerError() *GetRunnerRecentHealthChecksInternalServerError {
	return &GetRunnerRecentHealthChecksInternalServerError{}
}

/*
GetRunnerRecentHealthChecksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerRecentHealthChecksInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner recent health checks internal server error response has a 2xx status code
func (o *GetRunnerRecentHealthChecksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner recent health checks internal server error response has a 3xx status code
func (o *GetRunnerRecentHealthChecksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner recent health checks internal server error response has a 4xx status code
func (o *GetRunnerRecentHealthChecksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner recent health checks internal server error response has a 5xx status code
func (o *GetRunnerRecentHealthChecksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner recent health checks internal server error response a status code equal to that given
func (o *GetRunnerRecentHealthChecksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner recent health checks internal server error response
func (o *GetRunnerRecentHealthChecksInternalServerError) Code() int {
	return 500
}

func (o *GetRunnerRecentHealthChecksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerRecentHealthChecksInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/recent-health-checks][%d] getRunnerRecentHealthChecksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRunnerRecentHealthChecksInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerRecentHealthChecksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
