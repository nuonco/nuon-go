// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteAppInstallerReader is a Reader for the DeleteAppInstaller structure.
type DeleteAppInstallerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAppInstallerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAppInstallerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAppInstallerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAppInstallerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAppInstallerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAppInstallerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAppInstallerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/installers/{installer_id}] DeleteAppInstaller", response, response.Code())
	}
}

// NewDeleteAppInstallerOK creates a DeleteAppInstallerOK with default headers values
func NewDeleteAppInstallerOK() *DeleteAppInstallerOK {
	return &DeleteAppInstallerOK{}
}

/*
DeleteAppInstallerOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAppInstallerOK struct {
	Payload bool
}

// IsSuccess returns true when this delete app installer o k response has a 2xx status code
func (o *DeleteAppInstallerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete app installer o k response has a 3xx status code
func (o *DeleteAppInstallerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app installer o k response has a 4xx status code
func (o *DeleteAppInstallerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete app installer o k response has a 5xx status code
func (o *DeleteAppInstallerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app installer o k response a status code equal to that given
func (o *DeleteAppInstallerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete app installer o k response
func (o *DeleteAppInstallerOK) Code() int {
	return 200
}

func (o *DeleteAppInstallerOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerOK  %+v", 200, o.Payload)
}

func (o *DeleteAppInstallerOK) String() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerOK  %+v", 200, o.Payload)
}

func (o *DeleteAppInstallerOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteAppInstallerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppInstallerBadRequest creates a DeleteAppInstallerBadRequest with default headers values
func NewDeleteAppInstallerBadRequest() *DeleteAppInstallerBadRequest {
	return &DeleteAppInstallerBadRequest{}
}

/*
DeleteAppInstallerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAppInstallerBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app installer bad request response has a 2xx status code
func (o *DeleteAppInstallerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app installer bad request response has a 3xx status code
func (o *DeleteAppInstallerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app installer bad request response has a 4xx status code
func (o *DeleteAppInstallerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app installer bad request response has a 5xx status code
func (o *DeleteAppInstallerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app installer bad request response a status code equal to that given
func (o *DeleteAppInstallerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete app installer bad request response
func (o *DeleteAppInstallerBadRequest) Code() int {
	return 400
}

func (o *DeleteAppInstallerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAppInstallerBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAppInstallerBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppInstallerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppInstallerUnauthorized creates a DeleteAppInstallerUnauthorized with default headers values
func NewDeleteAppInstallerUnauthorized() *DeleteAppInstallerUnauthorized {
	return &DeleteAppInstallerUnauthorized{}
}

/*
DeleteAppInstallerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAppInstallerUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app installer unauthorized response has a 2xx status code
func (o *DeleteAppInstallerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app installer unauthorized response has a 3xx status code
func (o *DeleteAppInstallerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app installer unauthorized response has a 4xx status code
func (o *DeleteAppInstallerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app installer unauthorized response has a 5xx status code
func (o *DeleteAppInstallerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app installer unauthorized response a status code equal to that given
func (o *DeleteAppInstallerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete app installer unauthorized response
func (o *DeleteAppInstallerUnauthorized) Code() int {
	return 401
}

func (o *DeleteAppInstallerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAppInstallerUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAppInstallerUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppInstallerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppInstallerForbidden creates a DeleteAppInstallerForbidden with default headers values
func NewDeleteAppInstallerForbidden() *DeleteAppInstallerForbidden {
	return &DeleteAppInstallerForbidden{}
}

/*
DeleteAppInstallerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAppInstallerForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app installer forbidden response has a 2xx status code
func (o *DeleteAppInstallerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app installer forbidden response has a 3xx status code
func (o *DeleteAppInstallerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app installer forbidden response has a 4xx status code
func (o *DeleteAppInstallerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app installer forbidden response has a 5xx status code
func (o *DeleteAppInstallerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app installer forbidden response a status code equal to that given
func (o *DeleteAppInstallerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete app installer forbidden response
func (o *DeleteAppInstallerForbidden) Code() int {
	return 403
}

func (o *DeleteAppInstallerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAppInstallerForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAppInstallerForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppInstallerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppInstallerNotFound creates a DeleteAppInstallerNotFound with default headers values
func NewDeleteAppInstallerNotFound() *DeleteAppInstallerNotFound {
	return &DeleteAppInstallerNotFound{}
}

/*
DeleteAppInstallerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAppInstallerNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app installer not found response has a 2xx status code
func (o *DeleteAppInstallerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app installer not found response has a 3xx status code
func (o *DeleteAppInstallerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app installer not found response has a 4xx status code
func (o *DeleteAppInstallerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app installer not found response has a 5xx status code
func (o *DeleteAppInstallerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app installer not found response a status code equal to that given
func (o *DeleteAppInstallerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete app installer not found response
func (o *DeleteAppInstallerNotFound) Code() int {
	return 404
}

func (o *DeleteAppInstallerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAppInstallerNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAppInstallerNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppInstallerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppInstallerInternalServerError creates a DeleteAppInstallerInternalServerError with default headers values
func NewDeleteAppInstallerInternalServerError() *DeleteAppInstallerInternalServerError {
	return &DeleteAppInstallerInternalServerError{}
}

/*
DeleteAppInstallerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAppInstallerInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app installer internal server error response has a 2xx status code
func (o *DeleteAppInstallerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app installer internal server error response has a 3xx status code
func (o *DeleteAppInstallerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app installer internal server error response has a 4xx status code
func (o *DeleteAppInstallerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete app installer internal server error response has a 5xx status code
func (o *DeleteAppInstallerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete app installer internal server error response a status code equal to that given
func (o *DeleteAppInstallerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete app installer internal server error response
func (o *DeleteAppInstallerInternalServerError) Code() int {
	return 500
}

func (o *DeleteAppInstallerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAppInstallerInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/installers/{installer_id}][%d] deleteAppInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAppInstallerInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppInstallerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
