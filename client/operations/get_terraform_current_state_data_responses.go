// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetTerraformCurrentStateDataReader is a Reader for the GetTerraformCurrentStateData structure.
type GetTerraformCurrentStateDataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTerraformCurrentStateDataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTerraformCurrentStateDataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTerraformCurrentStateDataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTerraformCurrentStateDataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTerraformCurrentStateDataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTerraformCurrentStateDataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTerraformCurrentStateDataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/terraform-backend] GetTerraformCurrentStateData", response, response.Code())
	}
}

// NewGetTerraformCurrentStateDataOK creates a GetTerraformCurrentStateDataOK with default headers values
func NewGetTerraformCurrentStateDataOK() *GetTerraformCurrentStateDataOK {
	return &GetTerraformCurrentStateDataOK{}
}

/*
GetTerraformCurrentStateDataOK describes a response with status code 200, with default header values.

OK
*/
type GetTerraformCurrentStateDataOK struct {
	Payload *models.AppTerraformWorkspaceState
}

// IsSuccess returns true when this get terraform current state data o k response has a 2xx status code
func (o *GetTerraformCurrentStateDataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get terraform current state data o k response has a 3xx status code
func (o *GetTerraformCurrentStateDataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform current state data o k response has a 4xx status code
func (o *GetTerraformCurrentStateDataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get terraform current state data o k response has a 5xx status code
func (o *GetTerraformCurrentStateDataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform current state data o k response a status code equal to that given
func (o *GetTerraformCurrentStateDataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get terraform current state data o k response
func (o *GetTerraformCurrentStateDataOK) Code() int {
	return 200
}

func (o *GetTerraformCurrentStateDataOK) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataOK  %+v", 200, o.Payload)
}

func (o *GetTerraformCurrentStateDataOK) String() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataOK  %+v", 200, o.Payload)
}

func (o *GetTerraformCurrentStateDataOK) GetPayload() *models.AppTerraformWorkspaceState {
	return o.Payload
}

func (o *GetTerraformCurrentStateDataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppTerraformWorkspaceState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformCurrentStateDataBadRequest creates a GetTerraformCurrentStateDataBadRequest with default headers values
func NewGetTerraformCurrentStateDataBadRequest() *GetTerraformCurrentStateDataBadRequest {
	return &GetTerraformCurrentStateDataBadRequest{}
}

/*
GetTerraformCurrentStateDataBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTerraformCurrentStateDataBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform current state data bad request response has a 2xx status code
func (o *GetTerraformCurrentStateDataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform current state data bad request response has a 3xx status code
func (o *GetTerraformCurrentStateDataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform current state data bad request response has a 4xx status code
func (o *GetTerraformCurrentStateDataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform current state data bad request response has a 5xx status code
func (o *GetTerraformCurrentStateDataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform current state data bad request response a status code equal to that given
func (o *GetTerraformCurrentStateDataBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get terraform current state data bad request response
func (o *GetTerraformCurrentStateDataBadRequest) Code() int {
	return 400
}

func (o *GetTerraformCurrentStateDataBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataBadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformCurrentStateDataBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataBadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformCurrentStateDataBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformCurrentStateDataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformCurrentStateDataUnauthorized creates a GetTerraformCurrentStateDataUnauthorized with default headers values
func NewGetTerraformCurrentStateDataUnauthorized() *GetTerraformCurrentStateDataUnauthorized {
	return &GetTerraformCurrentStateDataUnauthorized{}
}

/*
GetTerraformCurrentStateDataUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTerraformCurrentStateDataUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform current state data unauthorized response has a 2xx status code
func (o *GetTerraformCurrentStateDataUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform current state data unauthorized response has a 3xx status code
func (o *GetTerraformCurrentStateDataUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform current state data unauthorized response has a 4xx status code
func (o *GetTerraformCurrentStateDataUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform current state data unauthorized response has a 5xx status code
func (o *GetTerraformCurrentStateDataUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform current state data unauthorized response a status code equal to that given
func (o *GetTerraformCurrentStateDataUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get terraform current state data unauthorized response
func (o *GetTerraformCurrentStateDataUnauthorized) Code() int {
	return 401
}

func (o *GetTerraformCurrentStateDataUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTerraformCurrentStateDataUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTerraformCurrentStateDataUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformCurrentStateDataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformCurrentStateDataForbidden creates a GetTerraformCurrentStateDataForbidden with default headers values
func NewGetTerraformCurrentStateDataForbidden() *GetTerraformCurrentStateDataForbidden {
	return &GetTerraformCurrentStateDataForbidden{}
}

/*
GetTerraformCurrentStateDataForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTerraformCurrentStateDataForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform current state data forbidden response has a 2xx status code
func (o *GetTerraformCurrentStateDataForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform current state data forbidden response has a 3xx status code
func (o *GetTerraformCurrentStateDataForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform current state data forbidden response has a 4xx status code
func (o *GetTerraformCurrentStateDataForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform current state data forbidden response has a 5xx status code
func (o *GetTerraformCurrentStateDataForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform current state data forbidden response a status code equal to that given
func (o *GetTerraformCurrentStateDataForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get terraform current state data forbidden response
func (o *GetTerraformCurrentStateDataForbidden) Code() int {
	return 403
}

func (o *GetTerraformCurrentStateDataForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataForbidden  %+v", 403, o.Payload)
}

func (o *GetTerraformCurrentStateDataForbidden) String() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataForbidden  %+v", 403, o.Payload)
}

func (o *GetTerraformCurrentStateDataForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformCurrentStateDataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformCurrentStateDataNotFound creates a GetTerraformCurrentStateDataNotFound with default headers values
func NewGetTerraformCurrentStateDataNotFound() *GetTerraformCurrentStateDataNotFound {
	return &GetTerraformCurrentStateDataNotFound{}
}

/*
GetTerraformCurrentStateDataNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTerraformCurrentStateDataNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform current state data not found response has a 2xx status code
func (o *GetTerraformCurrentStateDataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform current state data not found response has a 3xx status code
func (o *GetTerraformCurrentStateDataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform current state data not found response has a 4xx status code
func (o *GetTerraformCurrentStateDataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform current state data not found response has a 5xx status code
func (o *GetTerraformCurrentStateDataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform current state data not found response a status code equal to that given
func (o *GetTerraformCurrentStateDataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get terraform current state data not found response
func (o *GetTerraformCurrentStateDataNotFound) Code() int {
	return 404
}

func (o *GetTerraformCurrentStateDataNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataNotFound  %+v", 404, o.Payload)
}

func (o *GetTerraformCurrentStateDataNotFound) String() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataNotFound  %+v", 404, o.Payload)
}

func (o *GetTerraformCurrentStateDataNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformCurrentStateDataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformCurrentStateDataInternalServerError creates a GetTerraformCurrentStateDataInternalServerError with default headers values
func NewGetTerraformCurrentStateDataInternalServerError() *GetTerraformCurrentStateDataInternalServerError {
	return &GetTerraformCurrentStateDataInternalServerError{}
}

/*
GetTerraformCurrentStateDataInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTerraformCurrentStateDataInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get terraform current state data internal server error response has a 2xx status code
func (o *GetTerraformCurrentStateDataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform current state data internal server error response has a 3xx status code
func (o *GetTerraformCurrentStateDataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform current state data internal server error response has a 4xx status code
func (o *GetTerraformCurrentStateDataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get terraform current state data internal server error response has a 5xx status code
func (o *GetTerraformCurrentStateDataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get terraform current state data internal server error response a status code equal to that given
func (o *GetTerraformCurrentStateDataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get terraform current state data internal server error response
func (o *GetTerraformCurrentStateDataInternalServerError) Code() int {
	return 500
}

func (o *GetTerraformCurrentStateDataInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTerraformCurrentStateDataInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/terraform-backend][%d] getTerraformCurrentStateDataInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTerraformCurrentStateDataInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetTerraformCurrentStateDataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
