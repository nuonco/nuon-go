// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// SetAppConfigStatusReader is a Reader for the SetAppConfigStatus structure.
type SetAppConfigStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetAppConfigStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetAppConfigStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetAppConfigStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetAppConfigStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetAppConfigStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetAppConfigStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetAppConfigStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status] SetAppConfigStatus", response, response.Code())
	}
}

// NewSetAppConfigStatusOK creates a SetAppConfigStatusOK with default headers values
func NewSetAppConfigStatusOK() *SetAppConfigStatusOK {
	return &SetAppConfigStatusOK{}
}

/*
SetAppConfigStatusOK describes a response with status code 200, with default header values.

OK
*/
type SetAppConfigStatusOK struct {
	Payload bool
}

// IsSuccess returns true when this set app config status o k response has a 2xx status code
func (o *SetAppConfigStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set app config status o k response has a 3xx status code
func (o *SetAppConfigStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set app config status o k response has a 4xx status code
func (o *SetAppConfigStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set app config status o k response has a 5xx status code
func (o *SetAppConfigStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set app config status o k response a status code equal to that given
func (o *SetAppConfigStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set app config status o k response
func (o *SetAppConfigStatusOK) Code() int {
	return 200
}

func (o *SetAppConfigStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusOK %s", 200, payload)
}

func (o *SetAppConfigStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusOK %s", 200, payload)
}

func (o *SetAppConfigStatusOK) GetPayload() bool {
	return o.Payload
}

func (o *SetAppConfigStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAppConfigStatusBadRequest creates a SetAppConfigStatusBadRequest with default headers values
func NewSetAppConfigStatusBadRequest() *SetAppConfigStatusBadRequest {
	return &SetAppConfigStatusBadRequest{}
}

/*
SetAppConfigStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SetAppConfigStatusBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this set app config status bad request response has a 2xx status code
func (o *SetAppConfigStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set app config status bad request response has a 3xx status code
func (o *SetAppConfigStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set app config status bad request response has a 4xx status code
func (o *SetAppConfigStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set app config status bad request response has a 5xx status code
func (o *SetAppConfigStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set app config status bad request response a status code equal to that given
func (o *SetAppConfigStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set app config status bad request response
func (o *SetAppConfigStatusBadRequest) Code() int {
	return 400
}

func (o *SetAppConfigStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusBadRequest %s", 400, payload)
}

func (o *SetAppConfigStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusBadRequest %s", 400, payload)
}

func (o *SetAppConfigStatusBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *SetAppConfigStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAppConfigStatusUnauthorized creates a SetAppConfigStatusUnauthorized with default headers values
func NewSetAppConfigStatusUnauthorized() *SetAppConfigStatusUnauthorized {
	return &SetAppConfigStatusUnauthorized{}
}

/*
SetAppConfigStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetAppConfigStatusUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this set app config status unauthorized response has a 2xx status code
func (o *SetAppConfigStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set app config status unauthorized response has a 3xx status code
func (o *SetAppConfigStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set app config status unauthorized response has a 4xx status code
func (o *SetAppConfigStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set app config status unauthorized response has a 5xx status code
func (o *SetAppConfigStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set app config status unauthorized response a status code equal to that given
func (o *SetAppConfigStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set app config status unauthorized response
func (o *SetAppConfigStatusUnauthorized) Code() int {
	return 401
}

func (o *SetAppConfigStatusUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusUnauthorized %s", 401, payload)
}

func (o *SetAppConfigStatusUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusUnauthorized %s", 401, payload)
}

func (o *SetAppConfigStatusUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *SetAppConfigStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAppConfigStatusForbidden creates a SetAppConfigStatusForbidden with default headers values
func NewSetAppConfigStatusForbidden() *SetAppConfigStatusForbidden {
	return &SetAppConfigStatusForbidden{}
}

/*
SetAppConfigStatusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetAppConfigStatusForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this set app config status forbidden response has a 2xx status code
func (o *SetAppConfigStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set app config status forbidden response has a 3xx status code
func (o *SetAppConfigStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set app config status forbidden response has a 4xx status code
func (o *SetAppConfigStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set app config status forbidden response has a 5xx status code
func (o *SetAppConfigStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set app config status forbidden response a status code equal to that given
func (o *SetAppConfigStatusForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set app config status forbidden response
func (o *SetAppConfigStatusForbidden) Code() int {
	return 403
}

func (o *SetAppConfigStatusForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusForbidden %s", 403, payload)
}

func (o *SetAppConfigStatusForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusForbidden %s", 403, payload)
}

func (o *SetAppConfigStatusForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *SetAppConfigStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAppConfigStatusNotFound creates a SetAppConfigStatusNotFound with default headers values
func NewSetAppConfigStatusNotFound() *SetAppConfigStatusNotFound {
	return &SetAppConfigStatusNotFound{}
}

/*
SetAppConfigStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetAppConfigStatusNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this set app config status not found response has a 2xx status code
func (o *SetAppConfigStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set app config status not found response has a 3xx status code
func (o *SetAppConfigStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set app config status not found response has a 4xx status code
func (o *SetAppConfigStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set app config status not found response has a 5xx status code
func (o *SetAppConfigStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set app config status not found response a status code equal to that given
func (o *SetAppConfigStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set app config status not found response
func (o *SetAppConfigStatusNotFound) Code() int {
	return 404
}

func (o *SetAppConfigStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusNotFound %s", 404, payload)
}

func (o *SetAppConfigStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusNotFound %s", 404, payload)
}

func (o *SetAppConfigStatusNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *SetAppConfigStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAppConfigStatusInternalServerError creates a SetAppConfigStatusInternalServerError with default headers values
func NewSetAppConfigStatusInternalServerError() *SetAppConfigStatusInternalServerError {
	return &SetAppConfigStatusInternalServerError{}
}

/*
SetAppConfigStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SetAppConfigStatusInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this set app config status internal server error response has a 2xx status code
func (o *SetAppConfigStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set app config status internal server error response has a 3xx status code
func (o *SetAppConfigStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set app config status internal server error response has a 4xx status code
func (o *SetAppConfigStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set app config status internal server error response has a 5xx status code
func (o *SetAppConfigStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set app config status internal server error response a status code equal to that given
func (o *SetAppConfigStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set app config status internal server error response
func (o *SetAppConfigStatusInternalServerError) Code() int {
	return 500
}

func (o *SetAppConfigStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusInternalServerError %s", 500, payload)
}

func (o *SetAppConfigStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/set-status][%d] setAppConfigStatusInternalServerError %s", 500, payload)
}

func (o *SetAppConfigStatusInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *SetAppConfigStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
