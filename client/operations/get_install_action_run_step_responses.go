// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionRunStepReader is a Reader for the GetInstallActionRunStep structure.
type GetInstallActionRunStepReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionRunStepReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionRunStepOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionRunStepBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionRunStepUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionRunStepForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionRunStepNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionRunStepInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}] GetInstallActionRunStep", response, response.Code())
	}
}

// NewGetInstallActionRunStepOK creates a GetInstallActionRunStepOK with default headers values
func NewGetInstallActionRunStepOK() *GetInstallActionRunStepOK {
	return &GetInstallActionRunStepOK{}
}

/*
GetInstallActionRunStepOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionRunStepOK struct {
	Payload *models.AppInstallActionWorkflowRunStep
}

// IsSuccess returns true when this get install action run step o k response has a 2xx status code
func (o *GetInstallActionRunStepOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install action run step o k response has a 3xx status code
func (o *GetInstallActionRunStepOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run step o k response has a 4xx status code
func (o *GetInstallActionRunStepOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action run step o k response has a 5xx status code
func (o *GetInstallActionRunStepOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run step o k response a status code equal to that given
func (o *GetInstallActionRunStepOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install action run step o k response
func (o *GetInstallActionRunStepOK) Code() int {
	return 200
}

func (o *GetInstallActionRunStepOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRunStepOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRunStepOK) GetPayload() *models.AppInstallActionWorkflowRunStep {
	return o.Payload
}

func (o *GetInstallActionRunStepOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallActionWorkflowRunStep)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunStepBadRequest creates a GetInstallActionRunStepBadRequest with default headers values
func NewGetInstallActionRunStepBadRequest() *GetInstallActionRunStepBadRequest {
	return &GetInstallActionRunStepBadRequest{}
}

/*
GetInstallActionRunStepBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionRunStepBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run step bad request response has a 2xx status code
func (o *GetInstallActionRunStepBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run step bad request response has a 3xx status code
func (o *GetInstallActionRunStepBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run step bad request response has a 4xx status code
func (o *GetInstallActionRunStepBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run step bad request response has a 5xx status code
func (o *GetInstallActionRunStepBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run step bad request response a status code equal to that given
func (o *GetInstallActionRunStepBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install action run step bad request response
func (o *GetInstallActionRunStepBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionRunStepBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRunStepBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRunStepBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunStepBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunStepUnauthorized creates a GetInstallActionRunStepUnauthorized with default headers values
func NewGetInstallActionRunStepUnauthorized() *GetInstallActionRunStepUnauthorized {
	return &GetInstallActionRunStepUnauthorized{}
}

/*
GetInstallActionRunStepUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionRunStepUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run step unauthorized response has a 2xx status code
func (o *GetInstallActionRunStepUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run step unauthorized response has a 3xx status code
func (o *GetInstallActionRunStepUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run step unauthorized response has a 4xx status code
func (o *GetInstallActionRunStepUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run step unauthorized response has a 5xx status code
func (o *GetInstallActionRunStepUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run step unauthorized response a status code equal to that given
func (o *GetInstallActionRunStepUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install action run step unauthorized response
func (o *GetInstallActionRunStepUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionRunStepUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRunStepUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRunStepUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunStepUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunStepForbidden creates a GetInstallActionRunStepForbidden with default headers values
func NewGetInstallActionRunStepForbidden() *GetInstallActionRunStepForbidden {
	return &GetInstallActionRunStepForbidden{}
}

/*
GetInstallActionRunStepForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionRunStepForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run step forbidden response has a 2xx status code
func (o *GetInstallActionRunStepForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run step forbidden response has a 3xx status code
func (o *GetInstallActionRunStepForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run step forbidden response has a 4xx status code
func (o *GetInstallActionRunStepForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run step forbidden response has a 5xx status code
func (o *GetInstallActionRunStepForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run step forbidden response a status code equal to that given
func (o *GetInstallActionRunStepForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install action run step forbidden response
func (o *GetInstallActionRunStepForbidden) Code() int {
	return 403
}

func (o *GetInstallActionRunStepForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRunStepForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRunStepForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunStepForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunStepNotFound creates a GetInstallActionRunStepNotFound with default headers values
func NewGetInstallActionRunStepNotFound() *GetInstallActionRunStepNotFound {
	return &GetInstallActionRunStepNotFound{}
}

/*
GetInstallActionRunStepNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionRunStepNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run step not found response has a 2xx status code
func (o *GetInstallActionRunStepNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run step not found response has a 3xx status code
func (o *GetInstallActionRunStepNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run step not found response has a 4xx status code
func (o *GetInstallActionRunStepNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action run step not found response has a 5xx status code
func (o *GetInstallActionRunStepNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action run step not found response a status code equal to that given
func (o *GetInstallActionRunStepNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install action run step not found response
func (o *GetInstallActionRunStepNotFound) Code() int {
	return 404
}

func (o *GetInstallActionRunStepNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRunStepNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRunStepNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunStepNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunStepInternalServerError creates a GetInstallActionRunStepInternalServerError with default headers values
func NewGetInstallActionRunStepInternalServerError() *GetInstallActionRunStepInternalServerError {
	return &GetInstallActionRunStepInternalServerError{}
}

/*
GetInstallActionRunStepInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionRunStepInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action run step internal server error response has a 2xx status code
func (o *GetInstallActionRunStepInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action run step internal server error response has a 3xx status code
func (o *GetInstallActionRunStepInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action run step internal server error response has a 4xx status code
func (o *GetInstallActionRunStepInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action run step internal server error response has a 5xx status code
func (o *GetInstallActionRunStepInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install action run step internal server error response a status code equal to that given
func (o *GetInstallActionRunStepInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install action run step internal server error response
func (o *GetInstallActionRunStepInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionRunStepInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRunStepInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs/{run_id}/steps/{step_id}][%d] getInstallActionRunStepInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRunStepInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunStepInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
