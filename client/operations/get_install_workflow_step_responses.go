// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallWorkflowStepReader is a Reader for the GetInstallWorkflowStep structure.
type GetInstallWorkflowStepReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallWorkflowStepReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallWorkflowStepOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallWorkflowStepBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallWorkflowStepUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallWorkflowStepForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallWorkflowStepNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallWorkflowStepInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}] GetInstallWorkflowStep", response, response.Code())
	}
}

// NewGetInstallWorkflowStepOK creates a GetInstallWorkflowStepOK with default headers values
func NewGetInstallWorkflowStepOK() *GetInstallWorkflowStepOK {
	return &GetInstallWorkflowStepOK{}
}

/*
GetInstallWorkflowStepOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallWorkflowStepOK struct {
	Payload []*models.AppWorkflowStep
}

// IsSuccess returns true when this get install workflow step o k response has a 2xx status code
func (o *GetInstallWorkflowStepOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install workflow step o k response has a 3xx status code
func (o *GetInstallWorkflowStepOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install workflow step o k response has a 4xx status code
func (o *GetInstallWorkflowStepOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install workflow step o k response has a 5xx status code
func (o *GetInstallWorkflowStepOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install workflow step o k response a status code equal to that given
func (o *GetInstallWorkflowStepOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install workflow step o k response
func (o *GetInstallWorkflowStepOK) Code() int {
	return 200
}

func (o *GetInstallWorkflowStepOK) Error() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepOK  %+v", 200, o.Payload)
}

func (o *GetInstallWorkflowStepOK) String() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepOK  %+v", 200, o.Payload)
}

func (o *GetInstallWorkflowStepOK) GetPayload() []*models.AppWorkflowStep {
	return o.Payload
}

func (o *GetInstallWorkflowStepOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallWorkflowStepBadRequest creates a GetInstallWorkflowStepBadRequest with default headers values
func NewGetInstallWorkflowStepBadRequest() *GetInstallWorkflowStepBadRequest {
	return &GetInstallWorkflowStepBadRequest{}
}

/*
GetInstallWorkflowStepBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallWorkflowStepBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install workflow step bad request response has a 2xx status code
func (o *GetInstallWorkflowStepBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install workflow step bad request response has a 3xx status code
func (o *GetInstallWorkflowStepBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install workflow step bad request response has a 4xx status code
func (o *GetInstallWorkflowStepBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install workflow step bad request response has a 5xx status code
func (o *GetInstallWorkflowStepBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install workflow step bad request response a status code equal to that given
func (o *GetInstallWorkflowStepBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install workflow step bad request response
func (o *GetInstallWorkflowStepBadRequest) Code() int {
	return 400
}

func (o *GetInstallWorkflowStepBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallWorkflowStepBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallWorkflowStepBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallWorkflowStepBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallWorkflowStepUnauthorized creates a GetInstallWorkflowStepUnauthorized with default headers values
func NewGetInstallWorkflowStepUnauthorized() *GetInstallWorkflowStepUnauthorized {
	return &GetInstallWorkflowStepUnauthorized{}
}

/*
GetInstallWorkflowStepUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallWorkflowStepUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install workflow step unauthorized response has a 2xx status code
func (o *GetInstallWorkflowStepUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install workflow step unauthorized response has a 3xx status code
func (o *GetInstallWorkflowStepUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install workflow step unauthorized response has a 4xx status code
func (o *GetInstallWorkflowStepUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install workflow step unauthorized response has a 5xx status code
func (o *GetInstallWorkflowStepUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install workflow step unauthorized response a status code equal to that given
func (o *GetInstallWorkflowStepUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install workflow step unauthorized response
func (o *GetInstallWorkflowStepUnauthorized) Code() int {
	return 401
}

func (o *GetInstallWorkflowStepUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallWorkflowStepUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallWorkflowStepUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallWorkflowStepUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallWorkflowStepForbidden creates a GetInstallWorkflowStepForbidden with default headers values
func NewGetInstallWorkflowStepForbidden() *GetInstallWorkflowStepForbidden {
	return &GetInstallWorkflowStepForbidden{}
}

/*
GetInstallWorkflowStepForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallWorkflowStepForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install workflow step forbidden response has a 2xx status code
func (o *GetInstallWorkflowStepForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install workflow step forbidden response has a 3xx status code
func (o *GetInstallWorkflowStepForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install workflow step forbidden response has a 4xx status code
func (o *GetInstallWorkflowStepForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install workflow step forbidden response has a 5xx status code
func (o *GetInstallWorkflowStepForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install workflow step forbidden response a status code equal to that given
func (o *GetInstallWorkflowStepForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install workflow step forbidden response
func (o *GetInstallWorkflowStepForbidden) Code() int {
	return 403
}

func (o *GetInstallWorkflowStepForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallWorkflowStepForbidden) String() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallWorkflowStepForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallWorkflowStepForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallWorkflowStepNotFound creates a GetInstallWorkflowStepNotFound with default headers values
func NewGetInstallWorkflowStepNotFound() *GetInstallWorkflowStepNotFound {
	return &GetInstallWorkflowStepNotFound{}
}

/*
GetInstallWorkflowStepNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallWorkflowStepNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install workflow step not found response has a 2xx status code
func (o *GetInstallWorkflowStepNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install workflow step not found response has a 3xx status code
func (o *GetInstallWorkflowStepNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install workflow step not found response has a 4xx status code
func (o *GetInstallWorkflowStepNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install workflow step not found response has a 5xx status code
func (o *GetInstallWorkflowStepNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install workflow step not found response a status code equal to that given
func (o *GetInstallWorkflowStepNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install workflow step not found response
func (o *GetInstallWorkflowStepNotFound) Code() int {
	return 404
}

func (o *GetInstallWorkflowStepNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallWorkflowStepNotFound) String() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallWorkflowStepNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallWorkflowStepNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallWorkflowStepInternalServerError creates a GetInstallWorkflowStepInternalServerError with default headers values
func NewGetInstallWorkflowStepInternalServerError() *GetInstallWorkflowStepInternalServerError {
	return &GetInstallWorkflowStepInternalServerError{}
}

/*
GetInstallWorkflowStepInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallWorkflowStepInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install workflow step internal server error response has a 2xx status code
func (o *GetInstallWorkflowStepInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install workflow step internal server error response has a 3xx status code
func (o *GetInstallWorkflowStepInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install workflow step internal server error response has a 4xx status code
func (o *GetInstallWorkflowStepInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install workflow step internal server error response has a 5xx status code
func (o *GetInstallWorkflowStepInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install workflow step internal server error response a status code equal to that given
func (o *GetInstallWorkflowStepInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install workflow step internal server error response
func (o *GetInstallWorkflowStepInternalServerError) Code() int {
	return 500
}

func (o *GetInstallWorkflowStepInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallWorkflowStepInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/install-workflows/{install_workflow_id}/steps/{install_workflow_step_id}][%d] getInstallWorkflowStepInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallWorkflowStepInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallWorkflowStepInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
