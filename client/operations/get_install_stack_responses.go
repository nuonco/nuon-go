// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallStackReader is a Reader for the GetInstallStack structure.
type GetInstallStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallStackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallStackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallStackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/stacks/{stack_id}] GetInstallStack", response, response.Code())
	}
}

// NewGetInstallStackOK creates a GetInstallStackOK with default headers values
func NewGetInstallStackOK() *GetInstallStackOK {
	return &GetInstallStackOK{}
}

/*
GetInstallStackOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallStackOK struct {
	Payload *models.AppInstallStack
}

// IsSuccess returns true when this get install stack o k response has a 2xx status code
func (o *GetInstallStackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install stack o k response has a 3xx status code
func (o *GetInstallStackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack o k response has a 4xx status code
func (o *GetInstallStackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install stack o k response has a 5xx status code
func (o *GetInstallStackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack o k response a status code equal to that given
func (o *GetInstallStackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install stack o k response
func (o *GetInstallStackOK) Code() int {
	return 200
}

func (o *GetInstallStackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackOK %s", 200, payload)
}

func (o *GetInstallStackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackOK %s", 200, payload)
}

func (o *GetInstallStackOK) GetPayload() *models.AppInstallStack {
	return o.Payload
}

func (o *GetInstallStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallStack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackBadRequest creates a GetInstallStackBadRequest with default headers values
func NewGetInstallStackBadRequest() *GetInstallStackBadRequest {
	return &GetInstallStackBadRequest{}
}

/*
GetInstallStackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallStackBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack bad request response has a 2xx status code
func (o *GetInstallStackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack bad request response has a 3xx status code
func (o *GetInstallStackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack bad request response has a 4xx status code
func (o *GetInstallStackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack bad request response has a 5xx status code
func (o *GetInstallStackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack bad request response a status code equal to that given
func (o *GetInstallStackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install stack bad request response
func (o *GetInstallStackBadRequest) Code() int {
	return 400
}

func (o *GetInstallStackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackBadRequest %s", 400, payload)
}

func (o *GetInstallStackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackBadRequest %s", 400, payload)
}

func (o *GetInstallStackBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackUnauthorized creates a GetInstallStackUnauthorized with default headers values
func NewGetInstallStackUnauthorized() *GetInstallStackUnauthorized {
	return &GetInstallStackUnauthorized{}
}

/*
GetInstallStackUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallStackUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack unauthorized response has a 2xx status code
func (o *GetInstallStackUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack unauthorized response has a 3xx status code
func (o *GetInstallStackUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack unauthorized response has a 4xx status code
func (o *GetInstallStackUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack unauthorized response has a 5xx status code
func (o *GetInstallStackUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack unauthorized response a status code equal to that given
func (o *GetInstallStackUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install stack unauthorized response
func (o *GetInstallStackUnauthorized) Code() int {
	return 401
}

func (o *GetInstallStackUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackUnauthorized %s", 401, payload)
}

func (o *GetInstallStackUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackUnauthorized %s", 401, payload)
}

func (o *GetInstallStackUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackForbidden creates a GetInstallStackForbidden with default headers values
func NewGetInstallStackForbidden() *GetInstallStackForbidden {
	return &GetInstallStackForbidden{}
}

/*
GetInstallStackForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallStackForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack forbidden response has a 2xx status code
func (o *GetInstallStackForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack forbidden response has a 3xx status code
func (o *GetInstallStackForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack forbidden response has a 4xx status code
func (o *GetInstallStackForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack forbidden response has a 5xx status code
func (o *GetInstallStackForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack forbidden response a status code equal to that given
func (o *GetInstallStackForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install stack forbidden response
func (o *GetInstallStackForbidden) Code() int {
	return 403
}

func (o *GetInstallStackForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackForbidden %s", 403, payload)
}

func (o *GetInstallStackForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackForbidden %s", 403, payload)
}

func (o *GetInstallStackForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackNotFound creates a GetInstallStackNotFound with default headers values
func NewGetInstallStackNotFound() *GetInstallStackNotFound {
	return &GetInstallStackNotFound{}
}

/*
GetInstallStackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallStackNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack not found response has a 2xx status code
func (o *GetInstallStackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack not found response has a 3xx status code
func (o *GetInstallStackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack not found response has a 4xx status code
func (o *GetInstallStackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install stack not found response has a 5xx status code
func (o *GetInstallStackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install stack not found response a status code equal to that given
func (o *GetInstallStackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install stack not found response
func (o *GetInstallStackNotFound) Code() int {
	return 404
}

func (o *GetInstallStackNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackNotFound %s", 404, payload)
}

func (o *GetInstallStackNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackNotFound %s", 404, payload)
}

func (o *GetInstallStackNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallStackInternalServerError creates a GetInstallStackInternalServerError with default headers values
func NewGetInstallStackInternalServerError() *GetInstallStackInternalServerError {
	return &GetInstallStackInternalServerError{}
}

/*
GetInstallStackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallStackInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install stack internal server error response has a 2xx status code
func (o *GetInstallStackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install stack internal server error response has a 3xx status code
func (o *GetInstallStackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install stack internal server error response has a 4xx status code
func (o *GetInstallStackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install stack internal server error response has a 5xx status code
func (o *GetInstallStackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install stack internal server error response a status code equal to that given
func (o *GetInstallStackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install stack internal server error response
func (o *GetInstallStackInternalServerError) Code() int {
	return 500
}

func (o *GetInstallStackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackInternalServerError %s", 500, payload)
}

func (o *GetInstallStackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/stacks/{stack_id}][%d] getInstallStackInternalServerError %s", 500, payload)
}

func (o *GetInstallStackInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallStackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
