// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallersInstallerSlugReader is a Reader for the GetV1InstallersInstallerSlug structure.
type GetV1InstallersInstallerSlugReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallersInstallerSlugReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallersInstallerSlugOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallersInstallerSlugBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallersInstallerSlugUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallersInstallerSlugForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallersInstallerSlugNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallersInstallerSlugInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installers/{installer_slug}] GetV1InstallersInstallerSlug", response, response.Code())
	}
}

// NewGetV1InstallersInstallerSlugOK creates a GetV1InstallersInstallerSlugOK with default headers values
func NewGetV1InstallersInstallerSlugOK() *GetV1InstallersInstallerSlugOK {
	return &GetV1InstallersInstallerSlugOK{}
}

/*
GetV1InstallersInstallerSlugOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallersInstallerSlugOK struct {
	Payload *models.ServiceAppInstaller
}

// IsSuccess returns true when this get v1 installers installer slug o k response has a 2xx status code
func (o *GetV1InstallersInstallerSlugOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installers installer slug o k response has a 3xx status code
func (o *GetV1InstallersInstallerSlugOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installers installer slug o k response has a 4xx status code
func (o *GetV1InstallersInstallerSlugOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installers installer slug o k response has a 5xx status code
func (o *GetV1InstallersInstallerSlugOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installers installer slug o k response a status code equal to that given
func (o *GetV1InstallersInstallerSlugOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installers installer slug o k response
func (o *GetV1InstallersInstallerSlugOK) Code() int {
	return 200
}

func (o *GetV1InstallersInstallerSlugOK) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallersInstallerSlugOK) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallersInstallerSlugOK) GetPayload() *models.ServiceAppInstaller {
	return o.Payload
}

func (o *GetV1InstallersInstallerSlugOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceAppInstaller)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallersInstallerSlugBadRequest creates a GetV1InstallersInstallerSlugBadRequest with default headers values
func NewGetV1InstallersInstallerSlugBadRequest() *GetV1InstallersInstallerSlugBadRequest {
	return &GetV1InstallersInstallerSlugBadRequest{}
}

/*
GetV1InstallersInstallerSlugBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallersInstallerSlugBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installers installer slug bad request response has a 2xx status code
func (o *GetV1InstallersInstallerSlugBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installers installer slug bad request response has a 3xx status code
func (o *GetV1InstallersInstallerSlugBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installers installer slug bad request response has a 4xx status code
func (o *GetV1InstallersInstallerSlugBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installers installer slug bad request response has a 5xx status code
func (o *GetV1InstallersInstallerSlugBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installers installer slug bad request response a status code equal to that given
func (o *GetV1InstallersInstallerSlugBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installers installer slug bad request response
func (o *GetV1InstallersInstallerSlugBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallersInstallerSlugBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallersInstallerSlugBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallersInstallerSlugBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallersInstallerSlugBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallersInstallerSlugUnauthorized creates a GetV1InstallersInstallerSlugUnauthorized with default headers values
func NewGetV1InstallersInstallerSlugUnauthorized() *GetV1InstallersInstallerSlugUnauthorized {
	return &GetV1InstallersInstallerSlugUnauthorized{}
}

/*
GetV1InstallersInstallerSlugUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallersInstallerSlugUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installers installer slug unauthorized response has a 2xx status code
func (o *GetV1InstallersInstallerSlugUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installers installer slug unauthorized response has a 3xx status code
func (o *GetV1InstallersInstallerSlugUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installers installer slug unauthorized response has a 4xx status code
func (o *GetV1InstallersInstallerSlugUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installers installer slug unauthorized response has a 5xx status code
func (o *GetV1InstallersInstallerSlugUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installers installer slug unauthorized response a status code equal to that given
func (o *GetV1InstallersInstallerSlugUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installers installer slug unauthorized response
func (o *GetV1InstallersInstallerSlugUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallersInstallerSlugUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallersInstallerSlugUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallersInstallerSlugUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallersInstallerSlugUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallersInstallerSlugForbidden creates a GetV1InstallersInstallerSlugForbidden with default headers values
func NewGetV1InstallersInstallerSlugForbidden() *GetV1InstallersInstallerSlugForbidden {
	return &GetV1InstallersInstallerSlugForbidden{}
}

/*
GetV1InstallersInstallerSlugForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallersInstallerSlugForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installers installer slug forbidden response has a 2xx status code
func (o *GetV1InstallersInstallerSlugForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installers installer slug forbidden response has a 3xx status code
func (o *GetV1InstallersInstallerSlugForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installers installer slug forbidden response has a 4xx status code
func (o *GetV1InstallersInstallerSlugForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installers installer slug forbidden response has a 5xx status code
func (o *GetV1InstallersInstallerSlugForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installers installer slug forbidden response a status code equal to that given
func (o *GetV1InstallersInstallerSlugForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installers installer slug forbidden response
func (o *GetV1InstallersInstallerSlugForbidden) Code() int {
	return 403
}

func (o *GetV1InstallersInstallerSlugForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallersInstallerSlugForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallersInstallerSlugForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallersInstallerSlugForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallersInstallerSlugNotFound creates a GetV1InstallersInstallerSlugNotFound with default headers values
func NewGetV1InstallersInstallerSlugNotFound() *GetV1InstallersInstallerSlugNotFound {
	return &GetV1InstallersInstallerSlugNotFound{}
}

/*
GetV1InstallersInstallerSlugNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallersInstallerSlugNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installers installer slug not found response has a 2xx status code
func (o *GetV1InstallersInstallerSlugNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installers installer slug not found response has a 3xx status code
func (o *GetV1InstallersInstallerSlugNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installers installer slug not found response has a 4xx status code
func (o *GetV1InstallersInstallerSlugNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installers installer slug not found response has a 5xx status code
func (o *GetV1InstallersInstallerSlugNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installers installer slug not found response a status code equal to that given
func (o *GetV1InstallersInstallerSlugNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installers installer slug not found response
func (o *GetV1InstallersInstallerSlugNotFound) Code() int {
	return 404
}

func (o *GetV1InstallersInstallerSlugNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallersInstallerSlugNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallersInstallerSlugNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallersInstallerSlugNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallersInstallerSlugInternalServerError creates a GetV1InstallersInstallerSlugInternalServerError with default headers values
func NewGetV1InstallersInstallerSlugInternalServerError() *GetV1InstallersInstallerSlugInternalServerError {
	return &GetV1InstallersInstallerSlugInternalServerError{}
}

/*
GetV1InstallersInstallerSlugInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallersInstallerSlugInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installers installer slug internal server error response has a 2xx status code
func (o *GetV1InstallersInstallerSlugInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installers installer slug internal server error response has a 3xx status code
func (o *GetV1InstallersInstallerSlugInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installers installer slug internal server error response has a 4xx status code
func (o *GetV1InstallersInstallerSlugInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installers installer slug internal server error response has a 5xx status code
func (o *GetV1InstallersInstallerSlugInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installers installer slug internal server error response a status code equal to that given
func (o *GetV1InstallersInstallerSlugInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installers installer slug internal server error response
func (o *GetV1InstallersInstallerSlugInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallersInstallerSlugInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallersInstallerSlugInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_slug}][%d] getV1InstallersInstallerSlugInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallersInstallerSlugInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallersInstallerSlugInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
