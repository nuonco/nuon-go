// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionWorkflowRunsReader is a Reader for the GetInstallActionWorkflowRuns structure.
type GetInstallActionWorkflowRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionWorkflowRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionWorkflowRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionWorkflowRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionWorkflowRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionWorkflowRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionWorkflowRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionWorkflowRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/action-workflows/runs] GetInstallActionWorkflowRuns", response, response.Code())
	}
}

// NewGetInstallActionWorkflowRunsOK creates a GetInstallActionWorkflowRunsOK with default headers values
func NewGetInstallActionWorkflowRunsOK() *GetInstallActionWorkflowRunsOK {
	return &GetInstallActionWorkflowRunsOK{}
}

/*
GetInstallActionWorkflowRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionWorkflowRunsOK struct {
	Payload []*models.AppInstallActionWorkflowRun
}

// IsSuccess returns true when this get install action workflow runs o k response has a 2xx status code
func (o *GetInstallActionWorkflowRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install action workflow runs o k response has a 3xx status code
func (o *GetInstallActionWorkflowRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action workflow runs o k response has a 4xx status code
func (o *GetInstallActionWorkflowRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action workflow runs o k response has a 5xx status code
func (o *GetInstallActionWorkflowRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action workflow runs o k response a status code equal to that given
func (o *GetInstallActionWorkflowRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install action workflow runs o k response
func (o *GetInstallActionWorkflowRunsOK) Code() int {
	return 200
}

func (o *GetInstallActionWorkflowRunsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionWorkflowRunsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionWorkflowRunsOK) GetPayload() []*models.AppInstallActionWorkflowRun {
	return o.Payload
}

func (o *GetInstallActionWorkflowRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionWorkflowRunsBadRequest creates a GetInstallActionWorkflowRunsBadRequest with default headers values
func NewGetInstallActionWorkflowRunsBadRequest() *GetInstallActionWorkflowRunsBadRequest {
	return &GetInstallActionWorkflowRunsBadRequest{}
}

/*
GetInstallActionWorkflowRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionWorkflowRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action workflow runs bad request response has a 2xx status code
func (o *GetInstallActionWorkflowRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action workflow runs bad request response has a 3xx status code
func (o *GetInstallActionWorkflowRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action workflow runs bad request response has a 4xx status code
func (o *GetInstallActionWorkflowRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action workflow runs bad request response has a 5xx status code
func (o *GetInstallActionWorkflowRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action workflow runs bad request response a status code equal to that given
func (o *GetInstallActionWorkflowRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install action workflow runs bad request response
func (o *GetInstallActionWorkflowRunsBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionWorkflowRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionWorkflowRunsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionWorkflowRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionWorkflowRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionWorkflowRunsUnauthorized creates a GetInstallActionWorkflowRunsUnauthorized with default headers values
func NewGetInstallActionWorkflowRunsUnauthorized() *GetInstallActionWorkflowRunsUnauthorized {
	return &GetInstallActionWorkflowRunsUnauthorized{}
}

/*
GetInstallActionWorkflowRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionWorkflowRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action workflow runs unauthorized response has a 2xx status code
func (o *GetInstallActionWorkflowRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action workflow runs unauthorized response has a 3xx status code
func (o *GetInstallActionWorkflowRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action workflow runs unauthorized response has a 4xx status code
func (o *GetInstallActionWorkflowRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action workflow runs unauthorized response has a 5xx status code
func (o *GetInstallActionWorkflowRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action workflow runs unauthorized response a status code equal to that given
func (o *GetInstallActionWorkflowRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install action workflow runs unauthorized response
func (o *GetInstallActionWorkflowRunsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionWorkflowRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionWorkflowRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionWorkflowRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionWorkflowRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionWorkflowRunsForbidden creates a GetInstallActionWorkflowRunsForbidden with default headers values
func NewGetInstallActionWorkflowRunsForbidden() *GetInstallActionWorkflowRunsForbidden {
	return &GetInstallActionWorkflowRunsForbidden{}
}

/*
GetInstallActionWorkflowRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionWorkflowRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action workflow runs forbidden response has a 2xx status code
func (o *GetInstallActionWorkflowRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action workflow runs forbidden response has a 3xx status code
func (o *GetInstallActionWorkflowRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action workflow runs forbidden response has a 4xx status code
func (o *GetInstallActionWorkflowRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action workflow runs forbidden response has a 5xx status code
func (o *GetInstallActionWorkflowRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action workflow runs forbidden response a status code equal to that given
func (o *GetInstallActionWorkflowRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install action workflow runs forbidden response
func (o *GetInstallActionWorkflowRunsForbidden) Code() int {
	return 403
}

func (o *GetInstallActionWorkflowRunsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionWorkflowRunsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionWorkflowRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionWorkflowRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionWorkflowRunsNotFound creates a GetInstallActionWorkflowRunsNotFound with default headers values
func NewGetInstallActionWorkflowRunsNotFound() *GetInstallActionWorkflowRunsNotFound {
	return &GetInstallActionWorkflowRunsNotFound{}
}

/*
GetInstallActionWorkflowRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionWorkflowRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action workflow runs not found response has a 2xx status code
func (o *GetInstallActionWorkflowRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action workflow runs not found response has a 3xx status code
func (o *GetInstallActionWorkflowRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action workflow runs not found response has a 4xx status code
func (o *GetInstallActionWorkflowRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action workflow runs not found response has a 5xx status code
func (o *GetInstallActionWorkflowRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action workflow runs not found response a status code equal to that given
func (o *GetInstallActionWorkflowRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install action workflow runs not found response
func (o *GetInstallActionWorkflowRunsNotFound) Code() int {
	return 404
}

func (o *GetInstallActionWorkflowRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionWorkflowRunsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionWorkflowRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionWorkflowRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionWorkflowRunsInternalServerError creates a GetInstallActionWorkflowRunsInternalServerError with default headers values
func NewGetInstallActionWorkflowRunsInternalServerError() *GetInstallActionWorkflowRunsInternalServerError {
	return &GetInstallActionWorkflowRunsInternalServerError{}
}

/*
GetInstallActionWorkflowRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionWorkflowRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action workflow runs internal server error response has a 2xx status code
func (o *GetInstallActionWorkflowRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action workflow runs internal server error response has a 3xx status code
func (o *GetInstallActionWorkflowRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action workflow runs internal server error response has a 4xx status code
func (o *GetInstallActionWorkflowRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action workflow runs internal server error response has a 5xx status code
func (o *GetInstallActionWorkflowRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install action workflow runs internal server error response a status code equal to that given
func (o *GetInstallActionWorkflowRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install action workflow runs internal server error response
func (o *GetInstallActionWorkflowRunsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionWorkflowRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionWorkflowRunsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/action-workflows/runs][%d] getInstallActionWorkflowRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionWorkflowRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionWorkflowRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
