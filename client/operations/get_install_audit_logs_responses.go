// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallAuditLogsReader is a Reader for the GetInstallAuditLogs structure.
type GetInstallAuditLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallAuditLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallAuditLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallAuditLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallAuditLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallAuditLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallAuditLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallAuditLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/audit_logs] GetInstallAuditLogs", response, response.Code())
	}
}

// NewGetInstallAuditLogsOK creates a GetInstallAuditLogsOK with default headers values
func NewGetInstallAuditLogsOK() *GetInstallAuditLogsOK {
	return &GetInstallAuditLogsOK{}
}

/*
GetInstallAuditLogsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallAuditLogsOK struct {
	Payload []*models.AppInstallAuditLog
}

// IsSuccess returns true when this get install audit logs o k response has a 2xx status code
func (o *GetInstallAuditLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install audit logs o k response has a 3xx status code
func (o *GetInstallAuditLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install audit logs o k response has a 4xx status code
func (o *GetInstallAuditLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install audit logs o k response has a 5xx status code
func (o *GetInstallAuditLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install audit logs o k response a status code equal to that given
func (o *GetInstallAuditLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install audit logs o k response
func (o *GetInstallAuditLogsOK) Code() int {
	return 200
}

func (o *GetInstallAuditLogsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsOK  %+v", 200, o.Payload)
}

func (o *GetInstallAuditLogsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsOK  %+v", 200, o.Payload)
}

func (o *GetInstallAuditLogsOK) GetPayload() []*models.AppInstallAuditLog {
	return o.Payload
}

func (o *GetInstallAuditLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallAuditLogsBadRequest creates a GetInstallAuditLogsBadRequest with default headers values
func NewGetInstallAuditLogsBadRequest() *GetInstallAuditLogsBadRequest {
	return &GetInstallAuditLogsBadRequest{}
}

/*
GetInstallAuditLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallAuditLogsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install audit logs bad request response has a 2xx status code
func (o *GetInstallAuditLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install audit logs bad request response has a 3xx status code
func (o *GetInstallAuditLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install audit logs bad request response has a 4xx status code
func (o *GetInstallAuditLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install audit logs bad request response has a 5xx status code
func (o *GetInstallAuditLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install audit logs bad request response a status code equal to that given
func (o *GetInstallAuditLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install audit logs bad request response
func (o *GetInstallAuditLogsBadRequest) Code() int {
	return 400
}

func (o *GetInstallAuditLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallAuditLogsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallAuditLogsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallAuditLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallAuditLogsUnauthorized creates a GetInstallAuditLogsUnauthorized with default headers values
func NewGetInstallAuditLogsUnauthorized() *GetInstallAuditLogsUnauthorized {
	return &GetInstallAuditLogsUnauthorized{}
}

/*
GetInstallAuditLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallAuditLogsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install audit logs unauthorized response has a 2xx status code
func (o *GetInstallAuditLogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install audit logs unauthorized response has a 3xx status code
func (o *GetInstallAuditLogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install audit logs unauthorized response has a 4xx status code
func (o *GetInstallAuditLogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install audit logs unauthorized response has a 5xx status code
func (o *GetInstallAuditLogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install audit logs unauthorized response a status code equal to that given
func (o *GetInstallAuditLogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install audit logs unauthorized response
func (o *GetInstallAuditLogsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallAuditLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallAuditLogsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallAuditLogsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallAuditLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallAuditLogsForbidden creates a GetInstallAuditLogsForbidden with default headers values
func NewGetInstallAuditLogsForbidden() *GetInstallAuditLogsForbidden {
	return &GetInstallAuditLogsForbidden{}
}

/*
GetInstallAuditLogsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallAuditLogsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install audit logs forbidden response has a 2xx status code
func (o *GetInstallAuditLogsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install audit logs forbidden response has a 3xx status code
func (o *GetInstallAuditLogsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install audit logs forbidden response has a 4xx status code
func (o *GetInstallAuditLogsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install audit logs forbidden response has a 5xx status code
func (o *GetInstallAuditLogsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install audit logs forbidden response a status code equal to that given
func (o *GetInstallAuditLogsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install audit logs forbidden response
func (o *GetInstallAuditLogsForbidden) Code() int {
	return 403
}

func (o *GetInstallAuditLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallAuditLogsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallAuditLogsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallAuditLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallAuditLogsNotFound creates a GetInstallAuditLogsNotFound with default headers values
func NewGetInstallAuditLogsNotFound() *GetInstallAuditLogsNotFound {
	return &GetInstallAuditLogsNotFound{}
}

/*
GetInstallAuditLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallAuditLogsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install audit logs not found response has a 2xx status code
func (o *GetInstallAuditLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install audit logs not found response has a 3xx status code
func (o *GetInstallAuditLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install audit logs not found response has a 4xx status code
func (o *GetInstallAuditLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install audit logs not found response has a 5xx status code
func (o *GetInstallAuditLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install audit logs not found response a status code equal to that given
func (o *GetInstallAuditLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install audit logs not found response
func (o *GetInstallAuditLogsNotFound) Code() int {
	return 404
}

func (o *GetInstallAuditLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallAuditLogsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallAuditLogsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallAuditLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallAuditLogsInternalServerError creates a GetInstallAuditLogsInternalServerError with default headers values
func NewGetInstallAuditLogsInternalServerError() *GetInstallAuditLogsInternalServerError {
	return &GetInstallAuditLogsInternalServerError{}
}

/*
GetInstallAuditLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallAuditLogsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install audit logs internal server error response has a 2xx status code
func (o *GetInstallAuditLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install audit logs internal server error response has a 3xx status code
func (o *GetInstallAuditLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install audit logs internal server error response has a 4xx status code
func (o *GetInstallAuditLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install audit logs internal server error response has a 5xx status code
func (o *GetInstallAuditLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install audit logs internal server error response a status code equal to that given
func (o *GetInstallAuditLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install audit logs internal server error response
func (o *GetInstallAuditLogsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallAuditLogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallAuditLogsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/audit_logs][%d] getInstallAuditLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallAuditLogsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallAuditLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
