// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetCLIConfigReader is a Reader for the GetCLIConfig structure.
type GetCLIConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCLIConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCLIConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCLIConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCLIConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCLIConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCLIConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCLIConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/general/cli-config] GetCLIConfig", response, response.Code())
	}
}

// NewGetCLIConfigOK creates a GetCLIConfigOK with default headers values
func NewGetCLIConfigOK() *GetCLIConfigOK {
	return &GetCLIConfigOK{}
}

/*
GetCLIConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetCLIConfigOK struct {
	Payload *models.ServiceCLIConfig
}

// IsSuccess returns true when this get c l i config o k response has a 2xx status code
func (o *GetCLIConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c l i config o k response has a 3xx status code
func (o *GetCLIConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c l i config o k response has a 4xx status code
func (o *GetCLIConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c l i config o k response has a 5xx status code
func (o *GetCLIConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c l i config o k response a status code equal to that given
func (o *GetCLIConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c l i config o k response
func (o *GetCLIConfigOK) Code() int {
	return 200
}

func (o *GetCLIConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigOK %s", 200, payload)
}

func (o *GetCLIConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigOK %s", 200, payload)
}

func (o *GetCLIConfigOK) GetPayload() *models.ServiceCLIConfig {
	return o.Payload
}

func (o *GetCLIConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceCLIConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCLIConfigBadRequest creates a GetCLIConfigBadRequest with default headers values
func NewGetCLIConfigBadRequest() *GetCLIConfigBadRequest {
	return &GetCLIConfigBadRequest{}
}

/*
GetCLIConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCLIConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get c l i config bad request response has a 2xx status code
func (o *GetCLIConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c l i config bad request response has a 3xx status code
func (o *GetCLIConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c l i config bad request response has a 4xx status code
func (o *GetCLIConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c l i config bad request response has a 5xx status code
func (o *GetCLIConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get c l i config bad request response a status code equal to that given
func (o *GetCLIConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get c l i config bad request response
func (o *GetCLIConfigBadRequest) Code() int {
	return 400
}

func (o *GetCLIConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigBadRequest %s", 400, payload)
}

func (o *GetCLIConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigBadRequest %s", 400, payload)
}

func (o *GetCLIConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetCLIConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCLIConfigUnauthorized creates a GetCLIConfigUnauthorized with default headers values
func NewGetCLIConfigUnauthorized() *GetCLIConfigUnauthorized {
	return &GetCLIConfigUnauthorized{}
}

/*
GetCLIConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCLIConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get c l i config unauthorized response has a 2xx status code
func (o *GetCLIConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c l i config unauthorized response has a 3xx status code
func (o *GetCLIConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c l i config unauthorized response has a 4xx status code
func (o *GetCLIConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c l i config unauthorized response has a 5xx status code
func (o *GetCLIConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get c l i config unauthorized response a status code equal to that given
func (o *GetCLIConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get c l i config unauthorized response
func (o *GetCLIConfigUnauthorized) Code() int {
	return 401
}

func (o *GetCLIConfigUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigUnauthorized %s", 401, payload)
}

func (o *GetCLIConfigUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigUnauthorized %s", 401, payload)
}

func (o *GetCLIConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetCLIConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCLIConfigForbidden creates a GetCLIConfigForbidden with default headers values
func NewGetCLIConfigForbidden() *GetCLIConfigForbidden {
	return &GetCLIConfigForbidden{}
}

/*
GetCLIConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCLIConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get c l i config forbidden response has a 2xx status code
func (o *GetCLIConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c l i config forbidden response has a 3xx status code
func (o *GetCLIConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c l i config forbidden response has a 4xx status code
func (o *GetCLIConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c l i config forbidden response has a 5xx status code
func (o *GetCLIConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get c l i config forbidden response a status code equal to that given
func (o *GetCLIConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get c l i config forbidden response
func (o *GetCLIConfigForbidden) Code() int {
	return 403
}

func (o *GetCLIConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigForbidden %s", 403, payload)
}

func (o *GetCLIConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigForbidden %s", 403, payload)
}

func (o *GetCLIConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetCLIConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCLIConfigNotFound creates a GetCLIConfigNotFound with default headers values
func NewGetCLIConfigNotFound() *GetCLIConfigNotFound {
	return &GetCLIConfigNotFound{}
}

/*
GetCLIConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCLIConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get c l i config not found response has a 2xx status code
func (o *GetCLIConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c l i config not found response has a 3xx status code
func (o *GetCLIConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c l i config not found response has a 4xx status code
func (o *GetCLIConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c l i config not found response has a 5xx status code
func (o *GetCLIConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get c l i config not found response a status code equal to that given
func (o *GetCLIConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get c l i config not found response
func (o *GetCLIConfigNotFound) Code() int {
	return 404
}

func (o *GetCLIConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigNotFound %s", 404, payload)
}

func (o *GetCLIConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigNotFound %s", 404, payload)
}

func (o *GetCLIConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetCLIConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCLIConfigInternalServerError creates a GetCLIConfigInternalServerError with default headers values
func NewGetCLIConfigInternalServerError() *GetCLIConfigInternalServerError {
	return &GetCLIConfigInternalServerError{}
}

/*
GetCLIConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCLIConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get c l i config internal server error response has a 2xx status code
func (o *GetCLIConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c l i config internal server error response has a 3xx status code
func (o *GetCLIConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c l i config internal server error response has a 4xx status code
func (o *GetCLIConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c l i config internal server error response has a 5xx status code
func (o *GetCLIConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get c l i config internal server error response a status code equal to that given
func (o *GetCLIConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get c l i config internal server error response
func (o *GetCLIConfigInternalServerError) Code() int {
	return 500
}

func (o *GetCLIConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigInternalServerError %s", 500, payload)
}

func (o *GetCLIConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getCLIConfigInternalServerError %s", 500, payload)
}

func (o *GetCLIConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetCLIConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
