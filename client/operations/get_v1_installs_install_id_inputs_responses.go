// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallsInstallIDInputsReader is a Reader for the GetV1InstallsInstallIDInputs structure.
type GetV1InstallsInstallIDInputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallsInstallIDInputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallsInstallIDInputsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallsInstallIDInputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallsInstallIDInputsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallsInstallIDInputsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallsInstallIDInputsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallsInstallIDInputsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/inputs] GetV1InstallsInstallIDInputs", response, response.Code())
	}
}

// NewGetV1InstallsInstallIDInputsOK creates a GetV1InstallsInstallIDInputsOK with default headers values
func NewGetV1InstallsInstallIDInputsOK() *GetV1InstallsInstallIDInputsOK {
	return &GetV1InstallsInstallIDInputsOK{}
}

/*
GetV1InstallsInstallIDInputsOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallsInstallIDInputsOK struct {
	Payload []*models.AppInstallInputs
}

// IsSuccess returns true when this get v1 installs install Id inputs o k response has a 2xx status code
func (o *GetV1InstallsInstallIDInputsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installs install Id inputs o k response has a 3xx status code
func (o *GetV1InstallsInstallIDInputsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id inputs o k response has a 4xx status code
func (o *GetV1InstallsInstallIDInputsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id inputs o k response has a 5xx status code
func (o *GetV1InstallsInstallIDInputsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id inputs o k response a status code equal to that given
func (o *GetV1InstallsInstallIDInputsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installs install Id inputs o k response
func (o *GetV1InstallsInstallIDInputsOK) Code() int {
	return 200
}

func (o *GetV1InstallsInstallIDInputsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsOK) GetPayload() []*models.AppInstallInputs {
	return o.Payload
}

func (o *GetV1InstallsInstallIDInputsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDInputsBadRequest creates a GetV1InstallsInstallIDInputsBadRequest with default headers values
func NewGetV1InstallsInstallIDInputsBadRequest() *GetV1InstallsInstallIDInputsBadRequest {
	return &GetV1InstallsInstallIDInputsBadRequest{}
}

/*
GetV1InstallsInstallIDInputsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallsInstallIDInputsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id inputs bad request response has a 2xx status code
func (o *GetV1InstallsInstallIDInputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id inputs bad request response has a 3xx status code
func (o *GetV1InstallsInstallIDInputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id inputs bad request response has a 4xx status code
func (o *GetV1InstallsInstallIDInputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id inputs bad request response has a 5xx status code
func (o *GetV1InstallsInstallIDInputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id inputs bad request response a status code equal to that given
func (o *GetV1InstallsInstallIDInputsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installs install Id inputs bad request response
func (o *GetV1InstallsInstallIDInputsBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallsInstallIDInputsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDInputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDInputsUnauthorized creates a GetV1InstallsInstallIDInputsUnauthorized with default headers values
func NewGetV1InstallsInstallIDInputsUnauthorized() *GetV1InstallsInstallIDInputsUnauthorized {
	return &GetV1InstallsInstallIDInputsUnauthorized{}
}

/*
GetV1InstallsInstallIDInputsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallsInstallIDInputsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id inputs unauthorized response has a 2xx status code
func (o *GetV1InstallsInstallIDInputsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id inputs unauthorized response has a 3xx status code
func (o *GetV1InstallsInstallIDInputsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id inputs unauthorized response has a 4xx status code
func (o *GetV1InstallsInstallIDInputsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id inputs unauthorized response has a 5xx status code
func (o *GetV1InstallsInstallIDInputsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id inputs unauthorized response a status code equal to that given
func (o *GetV1InstallsInstallIDInputsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installs install Id inputs unauthorized response
func (o *GetV1InstallsInstallIDInputsUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallsInstallIDInputsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDInputsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDInputsForbidden creates a GetV1InstallsInstallIDInputsForbidden with default headers values
func NewGetV1InstallsInstallIDInputsForbidden() *GetV1InstallsInstallIDInputsForbidden {
	return &GetV1InstallsInstallIDInputsForbidden{}
}

/*
GetV1InstallsInstallIDInputsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallsInstallIDInputsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id inputs forbidden response has a 2xx status code
func (o *GetV1InstallsInstallIDInputsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id inputs forbidden response has a 3xx status code
func (o *GetV1InstallsInstallIDInputsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id inputs forbidden response has a 4xx status code
func (o *GetV1InstallsInstallIDInputsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id inputs forbidden response has a 5xx status code
func (o *GetV1InstallsInstallIDInputsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id inputs forbidden response a status code equal to that given
func (o *GetV1InstallsInstallIDInputsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installs install Id inputs forbidden response
func (o *GetV1InstallsInstallIDInputsForbidden) Code() int {
	return 403
}

func (o *GetV1InstallsInstallIDInputsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDInputsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDInputsNotFound creates a GetV1InstallsInstallIDInputsNotFound with default headers values
func NewGetV1InstallsInstallIDInputsNotFound() *GetV1InstallsInstallIDInputsNotFound {
	return &GetV1InstallsInstallIDInputsNotFound{}
}

/*
GetV1InstallsInstallIDInputsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallsInstallIDInputsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id inputs not found response has a 2xx status code
func (o *GetV1InstallsInstallIDInputsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id inputs not found response has a 3xx status code
func (o *GetV1InstallsInstallIDInputsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id inputs not found response has a 4xx status code
func (o *GetV1InstallsInstallIDInputsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id inputs not found response has a 5xx status code
func (o *GetV1InstallsInstallIDInputsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id inputs not found response a status code equal to that given
func (o *GetV1InstallsInstallIDInputsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installs install Id inputs not found response
func (o *GetV1InstallsInstallIDInputsNotFound) Code() int {
	return 404
}

func (o *GetV1InstallsInstallIDInputsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDInputsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDInputsInternalServerError creates a GetV1InstallsInstallIDInputsInternalServerError with default headers values
func NewGetV1InstallsInstallIDInputsInternalServerError() *GetV1InstallsInstallIDInputsInternalServerError {
	return &GetV1InstallsInstallIDInputsInternalServerError{}
}

/*
GetV1InstallsInstallIDInputsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallsInstallIDInputsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id inputs internal server error response has a 2xx status code
func (o *GetV1InstallsInstallIDInputsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id inputs internal server error response has a 3xx status code
func (o *GetV1InstallsInstallIDInputsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id inputs internal server error response has a 4xx status code
func (o *GetV1InstallsInstallIDInputsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id inputs internal server error response has a 5xx status code
func (o *GetV1InstallsInstallIDInputsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installs install Id inputs internal server error response a status code equal to that given
func (o *GetV1InstallsInstallIDInputsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installs install Id inputs internal server error response
func (o *GetV1InstallsInstallIDInputsInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallsInstallIDInputsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/inputs][%d] getV1InstallsInstallIdInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDInputsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDInputsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
