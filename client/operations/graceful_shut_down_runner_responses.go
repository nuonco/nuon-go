// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GracefulShutDownRunnerReader is a Reader for the GracefulShutDownRunner structure.
type GracefulShutDownRunnerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GracefulShutDownRunnerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewGracefulShutDownRunnerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGracefulShutDownRunnerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGracefulShutDownRunnerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGracefulShutDownRunnerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGracefulShutDownRunnerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGracefulShutDownRunnerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/runners/{runner_id}/graceful-shutdown] GracefulShutDownRunner", response, response.Code())
	}
}

// NewGracefulShutDownRunnerCreated creates a GracefulShutDownRunnerCreated with default headers values
func NewGracefulShutDownRunnerCreated() *GracefulShutDownRunnerCreated {
	return &GracefulShutDownRunnerCreated{}
}

/*
GracefulShutDownRunnerCreated describes a response with status code 201, with default header values.

Created
*/
type GracefulShutDownRunnerCreated struct {
	Payload bool
}

// IsSuccess returns true when this graceful shut down runner created response has a 2xx status code
func (o *GracefulShutDownRunnerCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this graceful shut down runner created response has a 3xx status code
func (o *GracefulShutDownRunnerCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this graceful shut down runner created response has a 4xx status code
func (o *GracefulShutDownRunnerCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this graceful shut down runner created response has a 5xx status code
func (o *GracefulShutDownRunnerCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this graceful shut down runner created response a status code equal to that given
func (o *GracefulShutDownRunnerCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the graceful shut down runner created response
func (o *GracefulShutDownRunnerCreated) Code() int {
	return 201
}

func (o *GracefulShutDownRunnerCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerCreated %s", 201, payload)
}

func (o *GracefulShutDownRunnerCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerCreated %s", 201, payload)
}

func (o *GracefulShutDownRunnerCreated) GetPayload() bool {
	return o.Payload
}

func (o *GracefulShutDownRunnerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGracefulShutDownRunnerBadRequest creates a GracefulShutDownRunnerBadRequest with default headers values
func NewGracefulShutDownRunnerBadRequest() *GracefulShutDownRunnerBadRequest {
	return &GracefulShutDownRunnerBadRequest{}
}

/*
GracefulShutDownRunnerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GracefulShutDownRunnerBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this graceful shut down runner bad request response has a 2xx status code
func (o *GracefulShutDownRunnerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this graceful shut down runner bad request response has a 3xx status code
func (o *GracefulShutDownRunnerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this graceful shut down runner bad request response has a 4xx status code
func (o *GracefulShutDownRunnerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this graceful shut down runner bad request response has a 5xx status code
func (o *GracefulShutDownRunnerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this graceful shut down runner bad request response a status code equal to that given
func (o *GracefulShutDownRunnerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the graceful shut down runner bad request response
func (o *GracefulShutDownRunnerBadRequest) Code() int {
	return 400
}

func (o *GracefulShutDownRunnerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerBadRequest %s", 400, payload)
}

func (o *GracefulShutDownRunnerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerBadRequest %s", 400, payload)
}

func (o *GracefulShutDownRunnerBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GracefulShutDownRunnerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGracefulShutDownRunnerUnauthorized creates a GracefulShutDownRunnerUnauthorized with default headers values
func NewGracefulShutDownRunnerUnauthorized() *GracefulShutDownRunnerUnauthorized {
	return &GracefulShutDownRunnerUnauthorized{}
}

/*
GracefulShutDownRunnerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GracefulShutDownRunnerUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this graceful shut down runner unauthorized response has a 2xx status code
func (o *GracefulShutDownRunnerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this graceful shut down runner unauthorized response has a 3xx status code
func (o *GracefulShutDownRunnerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this graceful shut down runner unauthorized response has a 4xx status code
func (o *GracefulShutDownRunnerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this graceful shut down runner unauthorized response has a 5xx status code
func (o *GracefulShutDownRunnerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this graceful shut down runner unauthorized response a status code equal to that given
func (o *GracefulShutDownRunnerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the graceful shut down runner unauthorized response
func (o *GracefulShutDownRunnerUnauthorized) Code() int {
	return 401
}

func (o *GracefulShutDownRunnerUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerUnauthorized %s", 401, payload)
}

func (o *GracefulShutDownRunnerUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerUnauthorized %s", 401, payload)
}

func (o *GracefulShutDownRunnerUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GracefulShutDownRunnerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGracefulShutDownRunnerForbidden creates a GracefulShutDownRunnerForbidden with default headers values
func NewGracefulShutDownRunnerForbidden() *GracefulShutDownRunnerForbidden {
	return &GracefulShutDownRunnerForbidden{}
}

/*
GracefulShutDownRunnerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GracefulShutDownRunnerForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this graceful shut down runner forbidden response has a 2xx status code
func (o *GracefulShutDownRunnerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this graceful shut down runner forbidden response has a 3xx status code
func (o *GracefulShutDownRunnerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this graceful shut down runner forbidden response has a 4xx status code
func (o *GracefulShutDownRunnerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this graceful shut down runner forbidden response has a 5xx status code
func (o *GracefulShutDownRunnerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this graceful shut down runner forbidden response a status code equal to that given
func (o *GracefulShutDownRunnerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the graceful shut down runner forbidden response
func (o *GracefulShutDownRunnerForbidden) Code() int {
	return 403
}

func (o *GracefulShutDownRunnerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerForbidden %s", 403, payload)
}

func (o *GracefulShutDownRunnerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerForbidden %s", 403, payload)
}

func (o *GracefulShutDownRunnerForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GracefulShutDownRunnerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGracefulShutDownRunnerNotFound creates a GracefulShutDownRunnerNotFound with default headers values
func NewGracefulShutDownRunnerNotFound() *GracefulShutDownRunnerNotFound {
	return &GracefulShutDownRunnerNotFound{}
}

/*
GracefulShutDownRunnerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GracefulShutDownRunnerNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this graceful shut down runner not found response has a 2xx status code
func (o *GracefulShutDownRunnerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this graceful shut down runner not found response has a 3xx status code
func (o *GracefulShutDownRunnerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this graceful shut down runner not found response has a 4xx status code
func (o *GracefulShutDownRunnerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this graceful shut down runner not found response has a 5xx status code
func (o *GracefulShutDownRunnerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this graceful shut down runner not found response a status code equal to that given
func (o *GracefulShutDownRunnerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the graceful shut down runner not found response
func (o *GracefulShutDownRunnerNotFound) Code() int {
	return 404
}

func (o *GracefulShutDownRunnerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerNotFound %s", 404, payload)
}

func (o *GracefulShutDownRunnerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerNotFound %s", 404, payload)
}

func (o *GracefulShutDownRunnerNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GracefulShutDownRunnerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGracefulShutDownRunnerInternalServerError creates a GracefulShutDownRunnerInternalServerError with default headers values
func NewGracefulShutDownRunnerInternalServerError() *GracefulShutDownRunnerInternalServerError {
	return &GracefulShutDownRunnerInternalServerError{}
}

/*
GracefulShutDownRunnerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GracefulShutDownRunnerInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this graceful shut down runner internal server error response has a 2xx status code
func (o *GracefulShutDownRunnerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this graceful shut down runner internal server error response has a 3xx status code
func (o *GracefulShutDownRunnerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this graceful shut down runner internal server error response has a 4xx status code
func (o *GracefulShutDownRunnerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this graceful shut down runner internal server error response has a 5xx status code
func (o *GracefulShutDownRunnerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this graceful shut down runner internal server error response a status code equal to that given
func (o *GracefulShutDownRunnerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the graceful shut down runner internal server error response
func (o *GracefulShutDownRunnerInternalServerError) Code() int {
	return 500
}

func (o *GracefulShutDownRunnerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerInternalServerError %s", 500, payload)
}

func (o *GracefulShutDownRunnerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/graceful-shutdown][%d] gracefulShutDownRunnerInternalServerError %s", 500, payload)
}

func (o *GracefulShutDownRunnerInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GracefulShutDownRunnerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
