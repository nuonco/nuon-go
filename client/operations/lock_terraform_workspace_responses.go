// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// LockTerraformWorkspaceReader is a Reader for the LockTerraformWorkspace structure.
type LockTerraformWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LockTerraformWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLockTerraformWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLockTerraformWorkspaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLockTerraformWorkspaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLockTerraformWorkspaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLockTerraformWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLockTerraformWorkspaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/terraform-workspaces/{workspace_id}/lock] LockTerraformWorkspace", response, response.Code())
	}
}

// NewLockTerraformWorkspaceOK creates a LockTerraformWorkspaceOK with default headers values
func NewLockTerraformWorkspaceOK() *LockTerraformWorkspaceOK {
	return &LockTerraformWorkspaceOK{}
}

/*
LockTerraformWorkspaceOK describes a response with status code 200, with default header values.

OK
*/
type LockTerraformWorkspaceOK struct {
	Payload *models.AppTerraformWorkspaceState
}

// IsSuccess returns true when this lock terraform workspace o k response has a 2xx status code
func (o *LockTerraformWorkspaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this lock terraform workspace o k response has a 3xx status code
func (o *LockTerraformWorkspaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lock terraform workspace o k response has a 4xx status code
func (o *LockTerraformWorkspaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this lock terraform workspace o k response has a 5xx status code
func (o *LockTerraformWorkspaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this lock terraform workspace o k response a status code equal to that given
func (o *LockTerraformWorkspaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the lock terraform workspace o k response
func (o *LockTerraformWorkspaceOK) Code() int {
	return 200
}

func (o *LockTerraformWorkspaceOK) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceOK  %+v", 200, o.Payload)
}

func (o *LockTerraformWorkspaceOK) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceOK  %+v", 200, o.Payload)
}

func (o *LockTerraformWorkspaceOK) GetPayload() *models.AppTerraformWorkspaceState {
	return o.Payload
}

func (o *LockTerraformWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppTerraformWorkspaceState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLockTerraformWorkspaceBadRequest creates a LockTerraformWorkspaceBadRequest with default headers values
func NewLockTerraformWorkspaceBadRequest() *LockTerraformWorkspaceBadRequest {
	return &LockTerraformWorkspaceBadRequest{}
}

/*
LockTerraformWorkspaceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type LockTerraformWorkspaceBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this lock terraform workspace bad request response has a 2xx status code
func (o *LockTerraformWorkspaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lock terraform workspace bad request response has a 3xx status code
func (o *LockTerraformWorkspaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lock terraform workspace bad request response has a 4xx status code
func (o *LockTerraformWorkspaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this lock terraform workspace bad request response has a 5xx status code
func (o *LockTerraformWorkspaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this lock terraform workspace bad request response a status code equal to that given
func (o *LockTerraformWorkspaceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the lock terraform workspace bad request response
func (o *LockTerraformWorkspaceBadRequest) Code() int {
	return 400
}

func (o *LockTerraformWorkspaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceBadRequest  %+v", 400, o.Payload)
}

func (o *LockTerraformWorkspaceBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceBadRequest  %+v", 400, o.Payload)
}

func (o *LockTerraformWorkspaceBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *LockTerraformWorkspaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLockTerraformWorkspaceUnauthorized creates a LockTerraformWorkspaceUnauthorized with default headers values
func NewLockTerraformWorkspaceUnauthorized() *LockTerraformWorkspaceUnauthorized {
	return &LockTerraformWorkspaceUnauthorized{}
}

/*
LockTerraformWorkspaceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LockTerraformWorkspaceUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this lock terraform workspace unauthorized response has a 2xx status code
func (o *LockTerraformWorkspaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lock terraform workspace unauthorized response has a 3xx status code
func (o *LockTerraformWorkspaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lock terraform workspace unauthorized response has a 4xx status code
func (o *LockTerraformWorkspaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this lock terraform workspace unauthorized response has a 5xx status code
func (o *LockTerraformWorkspaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this lock terraform workspace unauthorized response a status code equal to that given
func (o *LockTerraformWorkspaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the lock terraform workspace unauthorized response
func (o *LockTerraformWorkspaceUnauthorized) Code() int {
	return 401
}

func (o *LockTerraformWorkspaceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceUnauthorized  %+v", 401, o.Payload)
}

func (o *LockTerraformWorkspaceUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceUnauthorized  %+v", 401, o.Payload)
}

func (o *LockTerraformWorkspaceUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *LockTerraformWorkspaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLockTerraformWorkspaceForbidden creates a LockTerraformWorkspaceForbidden with default headers values
func NewLockTerraformWorkspaceForbidden() *LockTerraformWorkspaceForbidden {
	return &LockTerraformWorkspaceForbidden{}
}

/*
LockTerraformWorkspaceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LockTerraformWorkspaceForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this lock terraform workspace forbidden response has a 2xx status code
func (o *LockTerraformWorkspaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lock terraform workspace forbidden response has a 3xx status code
func (o *LockTerraformWorkspaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lock terraform workspace forbidden response has a 4xx status code
func (o *LockTerraformWorkspaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this lock terraform workspace forbidden response has a 5xx status code
func (o *LockTerraformWorkspaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this lock terraform workspace forbidden response a status code equal to that given
func (o *LockTerraformWorkspaceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the lock terraform workspace forbidden response
func (o *LockTerraformWorkspaceForbidden) Code() int {
	return 403
}

func (o *LockTerraformWorkspaceForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceForbidden  %+v", 403, o.Payload)
}

func (o *LockTerraformWorkspaceForbidden) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceForbidden  %+v", 403, o.Payload)
}

func (o *LockTerraformWorkspaceForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *LockTerraformWorkspaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLockTerraformWorkspaceNotFound creates a LockTerraformWorkspaceNotFound with default headers values
func NewLockTerraformWorkspaceNotFound() *LockTerraformWorkspaceNotFound {
	return &LockTerraformWorkspaceNotFound{}
}

/*
LockTerraformWorkspaceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LockTerraformWorkspaceNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this lock terraform workspace not found response has a 2xx status code
func (o *LockTerraformWorkspaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lock terraform workspace not found response has a 3xx status code
func (o *LockTerraformWorkspaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lock terraform workspace not found response has a 4xx status code
func (o *LockTerraformWorkspaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this lock terraform workspace not found response has a 5xx status code
func (o *LockTerraformWorkspaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this lock terraform workspace not found response a status code equal to that given
func (o *LockTerraformWorkspaceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the lock terraform workspace not found response
func (o *LockTerraformWorkspaceNotFound) Code() int {
	return 404
}

func (o *LockTerraformWorkspaceNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *LockTerraformWorkspaceNotFound) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *LockTerraformWorkspaceNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *LockTerraformWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLockTerraformWorkspaceInternalServerError creates a LockTerraformWorkspaceInternalServerError with default headers values
func NewLockTerraformWorkspaceInternalServerError() *LockTerraformWorkspaceInternalServerError {
	return &LockTerraformWorkspaceInternalServerError{}
}

/*
LockTerraformWorkspaceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LockTerraformWorkspaceInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this lock terraform workspace internal server error response has a 2xx status code
func (o *LockTerraformWorkspaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lock terraform workspace internal server error response has a 3xx status code
func (o *LockTerraformWorkspaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lock terraform workspace internal server error response has a 4xx status code
func (o *LockTerraformWorkspaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this lock terraform workspace internal server error response has a 5xx status code
func (o *LockTerraformWorkspaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this lock terraform workspace internal server error response a status code equal to that given
func (o *LockTerraformWorkspaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the lock terraform workspace internal server error response
func (o *LockTerraformWorkspaceInternalServerError) Code() int {
	return 500
}

func (o *LockTerraformWorkspaceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceInternalServerError  %+v", 500, o.Payload)
}

func (o *LockTerraformWorkspaceInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/lock][%d] lockTerraformWorkspaceInternalServerError  %+v", 500, o.Payload)
}

func (o *LockTerraformWorkspaceInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *LockTerraformWorkspaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
