// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// RenderAppInstallerReader is a Reader for the RenderAppInstaller structure.
type RenderAppInstallerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RenderAppInstallerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRenderAppInstallerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRenderAppInstallerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRenderAppInstallerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRenderAppInstallerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRenderAppInstallerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRenderAppInstallerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installer/{installer_slug}/render] RenderAppInstaller", response, response.Code())
	}
}

// NewRenderAppInstallerOK creates a RenderAppInstallerOK with default headers values
func NewRenderAppInstallerOK() *RenderAppInstallerOK {
	return &RenderAppInstallerOK{}
}

/*
RenderAppInstallerOK describes a response with status code 200, with default header values.

OK
*/
type RenderAppInstallerOK struct {
	Payload *models.ServiceAppInstaller
}

// IsSuccess returns true when this render app installer o k response has a 2xx status code
func (o *RenderAppInstallerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this render app installer o k response has a 3xx status code
func (o *RenderAppInstallerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this render app installer o k response has a 4xx status code
func (o *RenderAppInstallerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this render app installer o k response has a 5xx status code
func (o *RenderAppInstallerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this render app installer o k response a status code equal to that given
func (o *RenderAppInstallerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the render app installer o k response
func (o *RenderAppInstallerOK) Code() int {
	return 200
}

func (o *RenderAppInstallerOK) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerOK  %+v", 200, o.Payload)
}

func (o *RenderAppInstallerOK) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerOK  %+v", 200, o.Payload)
}

func (o *RenderAppInstallerOK) GetPayload() *models.ServiceAppInstaller {
	return o.Payload
}

func (o *RenderAppInstallerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceAppInstaller)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRenderAppInstallerBadRequest creates a RenderAppInstallerBadRequest with default headers values
func NewRenderAppInstallerBadRequest() *RenderAppInstallerBadRequest {
	return &RenderAppInstallerBadRequest{}
}

/*
RenderAppInstallerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RenderAppInstallerBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this render app installer bad request response has a 2xx status code
func (o *RenderAppInstallerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this render app installer bad request response has a 3xx status code
func (o *RenderAppInstallerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this render app installer bad request response has a 4xx status code
func (o *RenderAppInstallerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this render app installer bad request response has a 5xx status code
func (o *RenderAppInstallerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this render app installer bad request response a status code equal to that given
func (o *RenderAppInstallerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the render app installer bad request response
func (o *RenderAppInstallerBadRequest) Code() int {
	return 400
}

func (o *RenderAppInstallerBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *RenderAppInstallerBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *RenderAppInstallerBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *RenderAppInstallerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRenderAppInstallerUnauthorized creates a RenderAppInstallerUnauthorized with default headers values
func NewRenderAppInstallerUnauthorized() *RenderAppInstallerUnauthorized {
	return &RenderAppInstallerUnauthorized{}
}

/*
RenderAppInstallerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RenderAppInstallerUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this render app installer unauthorized response has a 2xx status code
func (o *RenderAppInstallerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this render app installer unauthorized response has a 3xx status code
func (o *RenderAppInstallerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this render app installer unauthorized response has a 4xx status code
func (o *RenderAppInstallerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this render app installer unauthorized response has a 5xx status code
func (o *RenderAppInstallerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this render app installer unauthorized response a status code equal to that given
func (o *RenderAppInstallerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the render app installer unauthorized response
func (o *RenderAppInstallerUnauthorized) Code() int {
	return 401
}

func (o *RenderAppInstallerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *RenderAppInstallerUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *RenderAppInstallerUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *RenderAppInstallerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRenderAppInstallerForbidden creates a RenderAppInstallerForbidden with default headers values
func NewRenderAppInstallerForbidden() *RenderAppInstallerForbidden {
	return &RenderAppInstallerForbidden{}
}

/*
RenderAppInstallerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RenderAppInstallerForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this render app installer forbidden response has a 2xx status code
func (o *RenderAppInstallerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this render app installer forbidden response has a 3xx status code
func (o *RenderAppInstallerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this render app installer forbidden response has a 4xx status code
func (o *RenderAppInstallerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this render app installer forbidden response has a 5xx status code
func (o *RenderAppInstallerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this render app installer forbidden response a status code equal to that given
func (o *RenderAppInstallerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the render app installer forbidden response
func (o *RenderAppInstallerForbidden) Code() int {
	return 403
}

func (o *RenderAppInstallerForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerForbidden  %+v", 403, o.Payload)
}

func (o *RenderAppInstallerForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerForbidden  %+v", 403, o.Payload)
}

func (o *RenderAppInstallerForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *RenderAppInstallerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRenderAppInstallerNotFound creates a RenderAppInstallerNotFound with default headers values
func NewRenderAppInstallerNotFound() *RenderAppInstallerNotFound {
	return &RenderAppInstallerNotFound{}
}

/*
RenderAppInstallerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RenderAppInstallerNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this render app installer not found response has a 2xx status code
func (o *RenderAppInstallerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this render app installer not found response has a 3xx status code
func (o *RenderAppInstallerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this render app installer not found response has a 4xx status code
func (o *RenderAppInstallerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this render app installer not found response has a 5xx status code
func (o *RenderAppInstallerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this render app installer not found response a status code equal to that given
func (o *RenderAppInstallerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the render app installer not found response
func (o *RenderAppInstallerNotFound) Code() int {
	return 404
}

func (o *RenderAppInstallerNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerNotFound  %+v", 404, o.Payload)
}

func (o *RenderAppInstallerNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerNotFound  %+v", 404, o.Payload)
}

func (o *RenderAppInstallerNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *RenderAppInstallerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRenderAppInstallerInternalServerError creates a RenderAppInstallerInternalServerError with default headers values
func NewRenderAppInstallerInternalServerError() *RenderAppInstallerInternalServerError {
	return &RenderAppInstallerInternalServerError{}
}

/*
RenderAppInstallerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RenderAppInstallerInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this render app installer internal server error response has a 2xx status code
func (o *RenderAppInstallerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this render app installer internal server error response has a 3xx status code
func (o *RenderAppInstallerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this render app installer internal server error response has a 4xx status code
func (o *RenderAppInstallerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this render app installer internal server error response has a 5xx status code
func (o *RenderAppInstallerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this render app installer internal server error response a status code equal to that given
func (o *RenderAppInstallerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the render app installer internal server error response
func (o *RenderAppInstallerInternalServerError) Code() int {
	return 500
}

func (o *RenderAppInstallerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *RenderAppInstallerInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] renderAppInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *RenderAppInstallerInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *RenderAppInstallerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
