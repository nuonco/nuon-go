// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// UpdateAppConfigInstallsReader is a Reader for the UpdateAppConfigInstalls structure.
type UpdateAppConfigInstallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAppConfigInstallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAppConfigInstallsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAppConfigInstallsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAppConfigInstallsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAppConfigInstallsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAppConfigInstallsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAppConfigInstallsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs] UpdateAppConfigInstalls", response, response.Code())
	}
}

// NewUpdateAppConfigInstallsOK creates a UpdateAppConfigInstallsOK with default headers values
func NewUpdateAppConfigInstallsOK() *UpdateAppConfigInstallsOK {
	return &UpdateAppConfigInstallsOK{}
}

/*
UpdateAppConfigInstallsOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAppConfigInstallsOK struct {
	Payload string
}

// IsSuccess returns true when this update app config installs o k response has a 2xx status code
func (o *UpdateAppConfigInstallsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update app config installs o k response has a 3xx status code
func (o *UpdateAppConfigInstallsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config installs o k response has a 4xx status code
func (o *UpdateAppConfigInstallsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update app config installs o k response has a 5xx status code
func (o *UpdateAppConfigInstallsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config installs o k response a status code equal to that given
func (o *UpdateAppConfigInstallsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update app config installs o k response
func (o *UpdateAppConfigInstallsOK) Code() int {
	return 200
}

func (o *UpdateAppConfigInstallsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsOK %s", 200, payload)
}

func (o *UpdateAppConfigInstallsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsOK %s", 200, payload)
}

func (o *UpdateAppConfigInstallsOK) GetPayload() string {
	return o.Payload
}

func (o *UpdateAppConfigInstallsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigInstallsBadRequest creates a UpdateAppConfigInstallsBadRequest with default headers values
func NewUpdateAppConfigInstallsBadRequest() *UpdateAppConfigInstallsBadRequest {
	return &UpdateAppConfigInstallsBadRequest{}
}

/*
UpdateAppConfigInstallsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAppConfigInstallsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config installs bad request response has a 2xx status code
func (o *UpdateAppConfigInstallsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config installs bad request response has a 3xx status code
func (o *UpdateAppConfigInstallsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config installs bad request response has a 4xx status code
func (o *UpdateAppConfigInstallsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config installs bad request response has a 5xx status code
func (o *UpdateAppConfigInstallsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config installs bad request response a status code equal to that given
func (o *UpdateAppConfigInstallsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update app config installs bad request response
func (o *UpdateAppConfigInstallsBadRequest) Code() int {
	return 400
}

func (o *UpdateAppConfigInstallsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsBadRequest %s", 400, payload)
}

func (o *UpdateAppConfigInstallsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsBadRequest %s", 400, payload)
}

func (o *UpdateAppConfigInstallsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigInstallsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigInstallsUnauthorized creates a UpdateAppConfigInstallsUnauthorized with default headers values
func NewUpdateAppConfigInstallsUnauthorized() *UpdateAppConfigInstallsUnauthorized {
	return &UpdateAppConfigInstallsUnauthorized{}
}

/*
UpdateAppConfigInstallsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateAppConfigInstallsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config installs unauthorized response has a 2xx status code
func (o *UpdateAppConfigInstallsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config installs unauthorized response has a 3xx status code
func (o *UpdateAppConfigInstallsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config installs unauthorized response has a 4xx status code
func (o *UpdateAppConfigInstallsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config installs unauthorized response has a 5xx status code
func (o *UpdateAppConfigInstallsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config installs unauthorized response a status code equal to that given
func (o *UpdateAppConfigInstallsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update app config installs unauthorized response
func (o *UpdateAppConfigInstallsUnauthorized) Code() int {
	return 401
}

func (o *UpdateAppConfigInstallsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsUnauthorized %s", 401, payload)
}

func (o *UpdateAppConfigInstallsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsUnauthorized %s", 401, payload)
}

func (o *UpdateAppConfigInstallsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigInstallsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigInstallsForbidden creates a UpdateAppConfigInstallsForbidden with default headers values
func NewUpdateAppConfigInstallsForbidden() *UpdateAppConfigInstallsForbidden {
	return &UpdateAppConfigInstallsForbidden{}
}

/*
UpdateAppConfigInstallsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAppConfigInstallsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config installs forbidden response has a 2xx status code
func (o *UpdateAppConfigInstallsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config installs forbidden response has a 3xx status code
func (o *UpdateAppConfigInstallsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config installs forbidden response has a 4xx status code
func (o *UpdateAppConfigInstallsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config installs forbidden response has a 5xx status code
func (o *UpdateAppConfigInstallsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config installs forbidden response a status code equal to that given
func (o *UpdateAppConfigInstallsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update app config installs forbidden response
func (o *UpdateAppConfigInstallsForbidden) Code() int {
	return 403
}

func (o *UpdateAppConfigInstallsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsForbidden %s", 403, payload)
}

func (o *UpdateAppConfigInstallsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsForbidden %s", 403, payload)
}

func (o *UpdateAppConfigInstallsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigInstallsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigInstallsNotFound creates a UpdateAppConfigInstallsNotFound with default headers values
func NewUpdateAppConfigInstallsNotFound() *UpdateAppConfigInstallsNotFound {
	return &UpdateAppConfigInstallsNotFound{}
}

/*
UpdateAppConfigInstallsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAppConfigInstallsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config installs not found response has a 2xx status code
func (o *UpdateAppConfigInstallsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config installs not found response has a 3xx status code
func (o *UpdateAppConfigInstallsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config installs not found response has a 4xx status code
func (o *UpdateAppConfigInstallsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update app config installs not found response has a 5xx status code
func (o *UpdateAppConfigInstallsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update app config installs not found response a status code equal to that given
func (o *UpdateAppConfigInstallsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update app config installs not found response
func (o *UpdateAppConfigInstallsNotFound) Code() int {
	return 404
}

func (o *UpdateAppConfigInstallsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsNotFound %s", 404, payload)
}

func (o *UpdateAppConfigInstallsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsNotFound %s", 404, payload)
}

func (o *UpdateAppConfigInstallsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigInstallsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppConfigInstallsInternalServerError creates a UpdateAppConfigInstallsInternalServerError with default headers values
func NewUpdateAppConfigInstallsInternalServerError() *UpdateAppConfigInstallsInternalServerError {
	return &UpdateAppConfigInstallsInternalServerError{}
}

/*
UpdateAppConfigInstallsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAppConfigInstallsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update app config installs internal server error response has a 2xx status code
func (o *UpdateAppConfigInstallsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update app config installs internal server error response has a 3xx status code
func (o *UpdateAppConfigInstallsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update app config installs internal server error response has a 4xx status code
func (o *UpdateAppConfigInstallsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update app config installs internal server error response has a 5xx status code
func (o *UpdateAppConfigInstallsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update app config installs internal server error response a status code equal to that given
func (o *UpdateAppConfigInstallsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update app config installs internal server error response
func (o *UpdateAppConfigInstallsInternalServerError) Code() int {
	return 500
}

func (o *UpdateAppConfigInstallsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsInternalServerError %s", 500, payload)
}

func (o *UpdateAppConfigInstallsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/apps/{app_id}/config/{app_config_id}/update-installs][%d] updateAppConfigInstallsInternalServerError %s", 500, payload)
}

func (o *UpdateAppConfigInstallsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateAppConfigInstallsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
