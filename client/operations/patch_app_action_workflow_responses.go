// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PatchAppActionWorkflowReader is a Reader for the PatchAppActionWorkflow structure.
type PatchAppActionWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAppActionWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchAppActionWorkflowCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAppActionWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchAppActionWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAppActionWorkflowForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchAppActionWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchAppActionWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/action-workflows/{action_workflow_id}] PatchAppActionWorkflow", response, response.Code())
	}
}

// NewPatchAppActionWorkflowCreated creates a PatchAppActionWorkflowCreated with default headers values
func NewPatchAppActionWorkflowCreated() *PatchAppActionWorkflowCreated {
	return &PatchAppActionWorkflowCreated{}
}

/*
PatchAppActionWorkflowCreated describes a response with status code 201, with default header values.

Created
*/
type PatchAppActionWorkflowCreated struct {
	Payload *models.AppActionWorkflow
}

// IsSuccess returns true when this patch app action workflow created response has a 2xx status code
func (o *PatchAppActionWorkflowCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch app action workflow created response has a 3xx status code
func (o *PatchAppActionWorkflowCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch app action workflow created response has a 4xx status code
func (o *PatchAppActionWorkflowCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch app action workflow created response has a 5xx status code
func (o *PatchAppActionWorkflowCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this patch app action workflow created response a status code equal to that given
func (o *PatchAppActionWorkflowCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the patch app action workflow created response
func (o *PatchAppActionWorkflowCreated) Code() int {
	return 201
}

func (o *PatchAppActionWorkflowCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowCreated %s", 201, payload)
}

func (o *PatchAppActionWorkflowCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowCreated %s", 201, payload)
}

func (o *PatchAppActionWorkflowCreated) GetPayload() *models.AppActionWorkflow {
	return o.Payload
}

func (o *PatchAppActionWorkflowCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppActionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppActionWorkflowBadRequest creates a PatchAppActionWorkflowBadRequest with default headers values
func NewPatchAppActionWorkflowBadRequest() *PatchAppActionWorkflowBadRequest {
	return &PatchAppActionWorkflowBadRequest{}
}

/*
PatchAppActionWorkflowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchAppActionWorkflowBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this patch app action workflow bad request response has a 2xx status code
func (o *PatchAppActionWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch app action workflow bad request response has a 3xx status code
func (o *PatchAppActionWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch app action workflow bad request response has a 4xx status code
func (o *PatchAppActionWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch app action workflow bad request response has a 5xx status code
func (o *PatchAppActionWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch app action workflow bad request response a status code equal to that given
func (o *PatchAppActionWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the patch app action workflow bad request response
func (o *PatchAppActionWorkflowBadRequest) Code() int {
	return 400
}

func (o *PatchAppActionWorkflowBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowBadRequest %s", 400, payload)
}

func (o *PatchAppActionWorkflowBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowBadRequest %s", 400, payload)
}

func (o *PatchAppActionWorkflowBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PatchAppActionWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppActionWorkflowUnauthorized creates a PatchAppActionWorkflowUnauthorized with default headers values
func NewPatchAppActionWorkflowUnauthorized() *PatchAppActionWorkflowUnauthorized {
	return &PatchAppActionWorkflowUnauthorized{}
}

/*
PatchAppActionWorkflowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchAppActionWorkflowUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this patch app action workflow unauthorized response has a 2xx status code
func (o *PatchAppActionWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch app action workflow unauthorized response has a 3xx status code
func (o *PatchAppActionWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch app action workflow unauthorized response has a 4xx status code
func (o *PatchAppActionWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch app action workflow unauthorized response has a 5xx status code
func (o *PatchAppActionWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch app action workflow unauthorized response a status code equal to that given
func (o *PatchAppActionWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the patch app action workflow unauthorized response
func (o *PatchAppActionWorkflowUnauthorized) Code() int {
	return 401
}

func (o *PatchAppActionWorkflowUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowUnauthorized %s", 401, payload)
}

func (o *PatchAppActionWorkflowUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowUnauthorized %s", 401, payload)
}

func (o *PatchAppActionWorkflowUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PatchAppActionWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppActionWorkflowForbidden creates a PatchAppActionWorkflowForbidden with default headers values
func NewPatchAppActionWorkflowForbidden() *PatchAppActionWorkflowForbidden {
	return &PatchAppActionWorkflowForbidden{}
}

/*
PatchAppActionWorkflowForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchAppActionWorkflowForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this patch app action workflow forbidden response has a 2xx status code
func (o *PatchAppActionWorkflowForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch app action workflow forbidden response has a 3xx status code
func (o *PatchAppActionWorkflowForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch app action workflow forbidden response has a 4xx status code
func (o *PatchAppActionWorkflowForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch app action workflow forbidden response has a 5xx status code
func (o *PatchAppActionWorkflowForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch app action workflow forbidden response a status code equal to that given
func (o *PatchAppActionWorkflowForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the patch app action workflow forbidden response
func (o *PatchAppActionWorkflowForbidden) Code() int {
	return 403
}

func (o *PatchAppActionWorkflowForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowForbidden %s", 403, payload)
}

func (o *PatchAppActionWorkflowForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowForbidden %s", 403, payload)
}

func (o *PatchAppActionWorkflowForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PatchAppActionWorkflowForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppActionWorkflowNotFound creates a PatchAppActionWorkflowNotFound with default headers values
func NewPatchAppActionWorkflowNotFound() *PatchAppActionWorkflowNotFound {
	return &PatchAppActionWorkflowNotFound{}
}

/*
PatchAppActionWorkflowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchAppActionWorkflowNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this patch app action workflow not found response has a 2xx status code
func (o *PatchAppActionWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch app action workflow not found response has a 3xx status code
func (o *PatchAppActionWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch app action workflow not found response has a 4xx status code
func (o *PatchAppActionWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch app action workflow not found response has a 5xx status code
func (o *PatchAppActionWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch app action workflow not found response a status code equal to that given
func (o *PatchAppActionWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the patch app action workflow not found response
func (o *PatchAppActionWorkflowNotFound) Code() int {
	return 404
}

func (o *PatchAppActionWorkflowNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowNotFound %s", 404, payload)
}

func (o *PatchAppActionWorkflowNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowNotFound %s", 404, payload)
}

func (o *PatchAppActionWorkflowNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PatchAppActionWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppActionWorkflowInternalServerError creates a PatchAppActionWorkflowInternalServerError with default headers values
func NewPatchAppActionWorkflowInternalServerError() *PatchAppActionWorkflowInternalServerError {
	return &PatchAppActionWorkflowInternalServerError{}
}

/*
PatchAppActionWorkflowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchAppActionWorkflowInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this patch app action workflow internal server error response has a 2xx status code
func (o *PatchAppActionWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch app action workflow internal server error response has a 3xx status code
func (o *PatchAppActionWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch app action workflow internal server error response has a 4xx status code
func (o *PatchAppActionWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch app action workflow internal server error response has a 5xx status code
func (o *PatchAppActionWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch app action workflow internal server error response a status code equal to that given
func (o *PatchAppActionWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch app action workflow internal server error response
func (o *PatchAppActionWorkflowInternalServerError) Code() int {
	return 500
}

func (o *PatchAppActionWorkflowInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowInternalServerError %s", 500, payload)
}

func (o *PatchAppActionWorkflowInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1/action-workflows/{action_workflow_id}][%d] patchAppActionWorkflowInternalServerError %s", 500, payload)
}

func (o *PatchAppActionWorkflowInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PatchAppActionWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
