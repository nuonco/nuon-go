// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetRunnerSettingsReader is a Reader for the GetRunnerSettings structure.
type GetRunnerSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/runners/{runner_id}/settings] GetRunnerSettings", response, response.Code())
	}
}

// NewGetRunnerSettingsOK creates a GetRunnerSettingsOK with default headers values
func NewGetRunnerSettingsOK() *GetRunnerSettingsOK {
	return &GetRunnerSettingsOK{}
}

/*
GetRunnerSettingsOK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerSettingsOK struct {
	Payload *models.AppRunnerGroupSettings
}

// IsSuccess returns true when this get runner settings o k response has a 2xx status code
func (o *GetRunnerSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner settings o k response has a 3xx status code
func (o *GetRunnerSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner settings o k response has a 4xx status code
func (o *GetRunnerSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner settings o k response has a 5xx status code
func (o *GetRunnerSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner settings o k response a status code equal to that given
func (o *GetRunnerSettingsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner settings o k response
func (o *GetRunnerSettingsOK) Code() int {
	return 200
}

func (o *GetRunnerSettingsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsOK %s", 200, payload)
}

func (o *GetRunnerSettingsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsOK %s", 200, payload)
}

func (o *GetRunnerSettingsOK) GetPayload() *models.AppRunnerGroupSettings {
	return o.Payload
}

func (o *GetRunnerSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppRunnerGroupSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerSettingsBadRequest creates a GetRunnerSettingsBadRequest with default headers values
func NewGetRunnerSettingsBadRequest() *GetRunnerSettingsBadRequest {
	return &GetRunnerSettingsBadRequest{}
}

/*
GetRunnerSettingsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerSettingsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner settings bad request response has a 2xx status code
func (o *GetRunnerSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner settings bad request response has a 3xx status code
func (o *GetRunnerSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner settings bad request response has a 4xx status code
func (o *GetRunnerSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner settings bad request response has a 5xx status code
func (o *GetRunnerSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner settings bad request response a status code equal to that given
func (o *GetRunnerSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner settings bad request response
func (o *GetRunnerSettingsBadRequest) Code() int {
	return 400
}

func (o *GetRunnerSettingsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsBadRequest %s", 400, payload)
}

func (o *GetRunnerSettingsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsBadRequest %s", 400, payload)
}

func (o *GetRunnerSettingsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerSettingsUnauthorized creates a GetRunnerSettingsUnauthorized with default headers values
func NewGetRunnerSettingsUnauthorized() *GetRunnerSettingsUnauthorized {
	return &GetRunnerSettingsUnauthorized{}
}

/*
GetRunnerSettingsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerSettingsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner settings unauthorized response has a 2xx status code
func (o *GetRunnerSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner settings unauthorized response has a 3xx status code
func (o *GetRunnerSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner settings unauthorized response has a 4xx status code
func (o *GetRunnerSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner settings unauthorized response has a 5xx status code
func (o *GetRunnerSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner settings unauthorized response a status code equal to that given
func (o *GetRunnerSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner settings unauthorized response
func (o *GetRunnerSettingsUnauthorized) Code() int {
	return 401
}

func (o *GetRunnerSettingsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsUnauthorized %s", 401, payload)
}

func (o *GetRunnerSettingsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsUnauthorized %s", 401, payload)
}

func (o *GetRunnerSettingsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerSettingsForbidden creates a GetRunnerSettingsForbidden with default headers values
func NewGetRunnerSettingsForbidden() *GetRunnerSettingsForbidden {
	return &GetRunnerSettingsForbidden{}
}

/*
GetRunnerSettingsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerSettingsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner settings forbidden response has a 2xx status code
func (o *GetRunnerSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner settings forbidden response has a 3xx status code
func (o *GetRunnerSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner settings forbidden response has a 4xx status code
func (o *GetRunnerSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner settings forbidden response has a 5xx status code
func (o *GetRunnerSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner settings forbidden response a status code equal to that given
func (o *GetRunnerSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner settings forbidden response
func (o *GetRunnerSettingsForbidden) Code() int {
	return 403
}

func (o *GetRunnerSettingsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsForbidden %s", 403, payload)
}

func (o *GetRunnerSettingsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsForbidden %s", 403, payload)
}

func (o *GetRunnerSettingsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerSettingsNotFound creates a GetRunnerSettingsNotFound with default headers values
func NewGetRunnerSettingsNotFound() *GetRunnerSettingsNotFound {
	return &GetRunnerSettingsNotFound{}
}

/*
GetRunnerSettingsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerSettingsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner settings not found response has a 2xx status code
func (o *GetRunnerSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner settings not found response has a 3xx status code
func (o *GetRunnerSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner settings not found response has a 4xx status code
func (o *GetRunnerSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner settings not found response has a 5xx status code
func (o *GetRunnerSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner settings not found response a status code equal to that given
func (o *GetRunnerSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner settings not found response
func (o *GetRunnerSettingsNotFound) Code() int {
	return 404
}

func (o *GetRunnerSettingsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsNotFound %s", 404, payload)
}

func (o *GetRunnerSettingsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsNotFound %s", 404, payload)
}

func (o *GetRunnerSettingsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerSettingsInternalServerError creates a GetRunnerSettingsInternalServerError with default headers values
func NewGetRunnerSettingsInternalServerError() *GetRunnerSettingsInternalServerError {
	return &GetRunnerSettingsInternalServerError{}
}

/*
GetRunnerSettingsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerSettingsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner settings internal server error response has a 2xx status code
func (o *GetRunnerSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner settings internal server error response has a 3xx status code
func (o *GetRunnerSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner settings internal server error response has a 4xx status code
func (o *GetRunnerSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner settings internal server error response has a 5xx status code
func (o *GetRunnerSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner settings internal server error response a status code equal to that given
func (o *GetRunnerSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner settings internal server error response
func (o *GetRunnerSettingsInternalServerError) Code() int {
	return 500
}

func (o *GetRunnerSettingsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsInternalServerError %s", 500, payload)
}

func (o *GetRunnerSettingsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/runners/{runner_id}/settings][%d] getRunnerSettingsInternalServerError %s", 500, payload)
}

func (o *GetRunnerSettingsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
