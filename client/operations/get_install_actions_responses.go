// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionsReader is a Reader for the GetInstallActions structure.
type GetInstallActionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions] GetInstallActions", response, response.Code())
	}
}

// NewGetInstallActionsOK creates a GetInstallActionsOK with default headers values
func NewGetInstallActionsOK() *GetInstallActionsOK {
	return &GetInstallActionsOK{}
}

/*
GetInstallActionsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionsOK struct {
	Payload []*models.AppInstallActionWorkflow
}

// IsSuccess returns true when this get install actions o k response has a 2xx status code
func (o *GetInstallActionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install actions o k response has a 3xx status code
func (o *GetInstallActionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions o k response has a 4xx status code
func (o *GetInstallActionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install actions o k response has a 5xx status code
func (o *GetInstallActionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions o k response a status code equal to that given
func (o *GetInstallActionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install actions o k response
func (o *GetInstallActionsOK) Code() int {
	return 200
}

func (o *GetInstallActionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionsOK) GetPayload() []*models.AppInstallActionWorkflow {
	return o.Payload
}

func (o *GetInstallActionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsBadRequest creates a GetInstallActionsBadRequest with default headers values
func NewGetInstallActionsBadRequest() *GetInstallActionsBadRequest {
	return &GetInstallActionsBadRequest{}
}

/*
GetInstallActionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions bad request response has a 2xx status code
func (o *GetInstallActionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions bad request response has a 3xx status code
func (o *GetInstallActionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions bad request response has a 4xx status code
func (o *GetInstallActionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions bad request response has a 5xx status code
func (o *GetInstallActionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions bad request response a status code equal to that given
func (o *GetInstallActionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install actions bad request response
func (o *GetInstallActionsBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsUnauthorized creates a GetInstallActionsUnauthorized with default headers values
func NewGetInstallActionsUnauthorized() *GetInstallActionsUnauthorized {
	return &GetInstallActionsUnauthorized{}
}

/*
GetInstallActionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions unauthorized response has a 2xx status code
func (o *GetInstallActionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions unauthorized response has a 3xx status code
func (o *GetInstallActionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions unauthorized response has a 4xx status code
func (o *GetInstallActionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions unauthorized response has a 5xx status code
func (o *GetInstallActionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions unauthorized response a status code equal to that given
func (o *GetInstallActionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install actions unauthorized response
func (o *GetInstallActionsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsForbidden creates a GetInstallActionsForbidden with default headers values
func NewGetInstallActionsForbidden() *GetInstallActionsForbidden {
	return &GetInstallActionsForbidden{}
}

/*
GetInstallActionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions forbidden response has a 2xx status code
func (o *GetInstallActionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions forbidden response has a 3xx status code
func (o *GetInstallActionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions forbidden response has a 4xx status code
func (o *GetInstallActionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions forbidden response has a 5xx status code
func (o *GetInstallActionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions forbidden response a status code equal to that given
func (o *GetInstallActionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install actions forbidden response
func (o *GetInstallActionsForbidden) Code() int {
	return 403
}

func (o *GetInstallActionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsNotFound creates a GetInstallActionsNotFound with default headers values
func NewGetInstallActionsNotFound() *GetInstallActionsNotFound {
	return &GetInstallActionsNotFound{}
}

/*
GetInstallActionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions not found response has a 2xx status code
func (o *GetInstallActionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions not found response has a 3xx status code
func (o *GetInstallActionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions not found response has a 4xx status code
func (o *GetInstallActionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install actions not found response has a 5xx status code
func (o *GetInstallActionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install actions not found response a status code equal to that given
func (o *GetInstallActionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install actions not found response
func (o *GetInstallActionsNotFound) Code() int {
	return 404
}

func (o *GetInstallActionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionsInternalServerError creates a GetInstallActionsInternalServerError with default headers values
func NewGetInstallActionsInternalServerError() *GetInstallActionsInternalServerError {
	return &GetInstallActionsInternalServerError{}
}

/*
GetInstallActionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install actions internal server error response has a 2xx status code
func (o *GetInstallActionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install actions internal server error response has a 3xx status code
func (o *GetInstallActionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install actions internal server error response has a 4xx status code
func (o *GetInstallActionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install actions internal server error response has a 5xx status code
func (o *GetInstallActionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install actions internal server error response a status code equal to that given
func (o *GetInstallActionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install actions internal server error response
func (o *GetInstallActionsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions][%d] getInstallActionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
