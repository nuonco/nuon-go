// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallComponentReader is a Reader for the GetInstallComponent structure.
type GetInstallComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallComponentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallComponentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallComponentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallComponentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallComponentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/component/{component_id}] GetInstallComponent", response, response.Code())
	}
}

// NewGetInstallComponentOK creates a GetInstallComponentOK with default headers values
func NewGetInstallComponentOK() *GetInstallComponentOK {
	return &GetInstallComponentOK{}
}

/*
GetInstallComponentOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallComponentOK struct {
	Payload *models.AppInstallComponent
}

// IsSuccess returns true when this get install component o k response has a 2xx status code
func (o *GetInstallComponentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install component o k response has a 3xx status code
func (o *GetInstallComponentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component o k response has a 4xx status code
func (o *GetInstallComponentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install component o k response has a 5xx status code
func (o *GetInstallComponentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component o k response a status code equal to that given
func (o *GetInstallComponentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install component o k response
func (o *GetInstallComponentOK) Code() int {
	return 200
}

func (o *GetInstallComponentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentOK %s", 200, payload)
}

func (o *GetInstallComponentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentOK %s", 200, payload)
}

func (o *GetInstallComponentOK) GetPayload() *models.AppInstallComponent {
	return o.Payload
}

func (o *GetInstallComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallComponent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentBadRequest creates a GetInstallComponentBadRequest with default headers values
func NewGetInstallComponentBadRequest() *GetInstallComponentBadRequest {
	return &GetInstallComponentBadRequest{}
}

/*
GetInstallComponentBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallComponentBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component bad request response has a 2xx status code
func (o *GetInstallComponentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component bad request response has a 3xx status code
func (o *GetInstallComponentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component bad request response has a 4xx status code
func (o *GetInstallComponentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component bad request response has a 5xx status code
func (o *GetInstallComponentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component bad request response a status code equal to that given
func (o *GetInstallComponentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install component bad request response
func (o *GetInstallComponentBadRequest) Code() int {
	return 400
}

func (o *GetInstallComponentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentBadRequest %s", 400, payload)
}

func (o *GetInstallComponentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentBadRequest %s", 400, payload)
}

func (o *GetInstallComponentBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentUnauthorized creates a GetInstallComponentUnauthorized with default headers values
func NewGetInstallComponentUnauthorized() *GetInstallComponentUnauthorized {
	return &GetInstallComponentUnauthorized{}
}

/*
GetInstallComponentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallComponentUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component unauthorized response has a 2xx status code
func (o *GetInstallComponentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component unauthorized response has a 3xx status code
func (o *GetInstallComponentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component unauthorized response has a 4xx status code
func (o *GetInstallComponentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component unauthorized response has a 5xx status code
func (o *GetInstallComponentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component unauthorized response a status code equal to that given
func (o *GetInstallComponentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install component unauthorized response
func (o *GetInstallComponentUnauthorized) Code() int {
	return 401
}

func (o *GetInstallComponentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentUnauthorized %s", 401, payload)
}

func (o *GetInstallComponentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentUnauthorized %s", 401, payload)
}

func (o *GetInstallComponentUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentForbidden creates a GetInstallComponentForbidden with default headers values
func NewGetInstallComponentForbidden() *GetInstallComponentForbidden {
	return &GetInstallComponentForbidden{}
}

/*
GetInstallComponentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallComponentForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component forbidden response has a 2xx status code
func (o *GetInstallComponentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component forbidden response has a 3xx status code
func (o *GetInstallComponentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component forbidden response has a 4xx status code
func (o *GetInstallComponentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component forbidden response has a 5xx status code
func (o *GetInstallComponentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component forbidden response a status code equal to that given
func (o *GetInstallComponentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install component forbidden response
func (o *GetInstallComponentForbidden) Code() int {
	return 403
}

func (o *GetInstallComponentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentForbidden %s", 403, payload)
}

func (o *GetInstallComponentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentForbidden %s", 403, payload)
}

func (o *GetInstallComponentForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentNotFound creates a GetInstallComponentNotFound with default headers values
func NewGetInstallComponentNotFound() *GetInstallComponentNotFound {
	return &GetInstallComponentNotFound{}
}

/*
GetInstallComponentNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallComponentNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component not found response has a 2xx status code
func (o *GetInstallComponentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component not found response has a 3xx status code
func (o *GetInstallComponentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component not found response has a 4xx status code
func (o *GetInstallComponentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component not found response has a 5xx status code
func (o *GetInstallComponentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component not found response a status code equal to that given
func (o *GetInstallComponentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install component not found response
func (o *GetInstallComponentNotFound) Code() int {
	return 404
}

func (o *GetInstallComponentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentNotFound %s", 404, payload)
}

func (o *GetInstallComponentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentNotFound %s", 404, payload)
}

func (o *GetInstallComponentNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentInternalServerError creates a GetInstallComponentInternalServerError with default headers values
func NewGetInstallComponentInternalServerError() *GetInstallComponentInternalServerError {
	return &GetInstallComponentInternalServerError{}
}

/*
GetInstallComponentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallComponentInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component internal server error response has a 2xx status code
func (o *GetInstallComponentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component internal server error response has a 3xx status code
func (o *GetInstallComponentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component internal server error response has a 4xx status code
func (o *GetInstallComponentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install component internal server error response has a 5xx status code
func (o *GetInstallComponentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install component internal server error response a status code equal to that given
func (o *GetInstallComponentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install component internal server error response
func (o *GetInstallComponentInternalServerError) Code() int {
	return 500
}

func (o *GetInstallComponentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentInternalServerError %s", 500, payload)
}

func (o *GetInstallComponentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/{install_id}/component/{component_id}][%d] getInstallComponentInternalServerError %s", 500, payload)
}

func (o *GetInstallComponentInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
