// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallsInstallIDSandboxRunsReader is a Reader for the GetV1InstallsInstallIDSandboxRuns structure.
type GetV1InstallsInstallIDSandboxRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallsInstallIDSandboxRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallsInstallIDSandboxRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallsInstallIDSandboxRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallsInstallIDSandboxRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallsInstallIDSandboxRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallsInstallIDSandboxRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallsInstallIDSandboxRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/sandbox-runs] GetV1InstallsInstallIDSandboxRuns", response, response.Code())
	}
}

// NewGetV1InstallsInstallIDSandboxRunsOK creates a GetV1InstallsInstallIDSandboxRunsOK with default headers values
func NewGetV1InstallsInstallIDSandboxRunsOK() *GetV1InstallsInstallIDSandboxRunsOK {
	return &GetV1InstallsInstallIDSandboxRunsOK{}
}

/*
GetV1InstallsInstallIDSandboxRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallsInstallIDSandboxRunsOK struct {
	Payload []*models.AppInstallSandboxRun
}

// IsSuccess returns true when this get v1 installs install Id sandbox runs o k response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installs install Id sandbox runs o k response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox runs o k response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id sandbox runs o k response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox runs o k response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installs install Id sandbox runs o k response
func (o *GetV1InstallsInstallIDSandboxRunsOK) Code() int {
	return 200
}

func (o *GetV1InstallsInstallIDSandboxRunsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsOK) GetPayload() []*models.AppInstallSandboxRun {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunsBadRequest creates a GetV1InstallsInstallIDSandboxRunsBadRequest with default headers values
func NewGetV1InstallsInstallIDSandboxRunsBadRequest() *GetV1InstallsInstallIDSandboxRunsBadRequest {
	return &GetV1InstallsInstallIDSandboxRunsBadRequest{}
}

/*
GetV1InstallsInstallIDSandboxRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallsInstallIDSandboxRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox runs bad request response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox runs bad request response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox runs bad request response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox runs bad request response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox runs bad request response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installs install Id sandbox runs bad request response
func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunsUnauthorized creates a GetV1InstallsInstallIDSandboxRunsUnauthorized with default headers values
func NewGetV1InstallsInstallIDSandboxRunsUnauthorized() *GetV1InstallsInstallIDSandboxRunsUnauthorized {
	return &GetV1InstallsInstallIDSandboxRunsUnauthorized{}
}

/*
GetV1InstallsInstallIDSandboxRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallsInstallIDSandboxRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox runs unauthorized response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox runs unauthorized response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox runs unauthorized response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox runs unauthorized response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox runs unauthorized response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installs install Id sandbox runs unauthorized response
func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunsForbidden creates a GetV1InstallsInstallIDSandboxRunsForbidden with default headers values
func NewGetV1InstallsInstallIDSandboxRunsForbidden() *GetV1InstallsInstallIDSandboxRunsForbidden {
	return &GetV1InstallsInstallIDSandboxRunsForbidden{}
}

/*
GetV1InstallsInstallIDSandboxRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallsInstallIDSandboxRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox runs forbidden response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox runs forbidden response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox runs forbidden response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox runs forbidden response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox runs forbidden response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installs install Id sandbox runs forbidden response
func (o *GetV1InstallsInstallIDSandboxRunsForbidden) Code() int {
	return 403
}

func (o *GetV1InstallsInstallIDSandboxRunsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunsNotFound creates a GetV1InstallsInstallIDSandboxRunsNotFound with default headers values
func NewGetV1InstallsInstallIDSandboxRunsNotFound() *GetV1InstallsInstallIDSandboxRunsNotFound {
	return &GetV1InstallsInstallIDSandboxRunsNotFound{}
}

/*
GetV1InstallsInstallIDSandboxRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallsInstallIDSandboxRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox runs not found response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox runs not found response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox runs not found response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id sandbox runs not found response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id sandbox runs not found response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installs install Id sandbox runs not found response
func (o *GetV1InstallsInstallIDSandboxRunsNotFound) Code() int {
	return 404
}

func (o *GetV1InstallsInstallIDSandboxRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDSandboxRunsInternalServerError creates a GetV1InstallsInstallIDSandboxRunsInternalServerError with default headers values
func NewGetV1InstallsInstallIDSandboxRunsInternalServerError() *GetV1InstallsInstallIDSandboxRunsInternalServerError {
	return &GetV1InstallsInstallIDSandboxRunsInternalServerError{}
}

/*
GetV1InstallsInstallIDSandboxRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallsInstallIDSandboxRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id sandbox runs internal server error response has a 2xx status code
func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id sandbox runs internal server error response has a 3xx status code
func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id sandbox runs internal server error response has a 4xx status code
func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id sandbox runs internal server error response has a 5xx status code
func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installs install Id sandbox runs internal server error response a status code equal to that given
func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installs install Id sandbox runs internal server error response
func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs][%d] getV1InstallsInstallIdSandboxRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDSandboxRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
