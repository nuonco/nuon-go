// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// ResetUserJourneyReader is a Reader for the ResetUserJourney structure.
type ResetUserJourneyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetUserJourneyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetUserJourneyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResetUserJourneyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewResetUserJourneyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResetUserJourneyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResetUserJourneyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResetUserJourneyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/account/user-journeys/{journey_name}/reset] ResetUserJourney", response, response.Code())
	}
}

// NewResetUserJourneyOK creates a ResetUserJourneyOK with default headers values
func NewResetUserJourneyOK() *ResetUserJourneyOK {
	return &ResetUserJourneyOK{}
}

/*
ResetUserJourneyOK describes a response with status code 200, with default header values.

OK
*/
type ResetUserJourneyOK struct {
	Payload *models.AppAccount
}

// IsSuccess returns true when this reset user journey o k response has a 2xx status code
func (o *ResetUserJourneyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset user journey o k response has a 3xx status code
func (o *ResetUserJourneyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset user journey o k response has a 4xx status code
func (o *ResetUserJourneyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset user journey o k response has a 5xx status code
func (o *ResetUserJourneyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reset user journey o k response a status code equal to that given
func (o *ResetUserJourneyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reset user journey o k response
func (o *ResetUserJourneyOK) Code() int {
	return 200
}

func (o *ResetUserJourneyOK) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyOK  %+v", 200, o.Payload)
}

func (o *ResetUserJourneyOK) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyOK  %+v", 200, o.Payload)
}

func (o *ResetUserJourneyOK) GetPayload() *models.AppAccount {
	return o.Payload
}

func (o *ResetUserJourneyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetUserJourneyBadRequest creates a ResetUserJourneyBadRequest with default headers values
func NewResetUserJourneyBadRequest() *ResetUserJourneyBadRequest {
	return &ResetUserJourneyBadRequest{}
}

/*
ResetUserJourneyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ResetUserJourneyBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this reset user journey bad request response has a 2xx status code
func (o *ResetUserJourneyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset user journey bad request response has a 3xx status code
func (o *ResetUserJourneyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset user journey bad request response has a 4xx status code
func (o *ResetUserJourneyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset user journey bad request response has a 5xx status code
func (o *ResetUserJourneyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this reset user journey bad request response a status code equal to that given
func (o *ResetUserJourneyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the reset user journey bad request response
func (o *ResetUserJourneyBadRequest) Code() int {
	return 400
}

func (o *ResetUserJourneyBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyBadRequest  %+v", 400, o.Payload)
}

func (o *ResetUserJourneyBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyBadRequest  %+v", 400, o.Payload)
}

func (o *ResetUserJourneyBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *ResetUserJourneyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetUserJourneyUnauthorized creates a ResetUserJourneyUnauthorized with default headers values
func NewResetUserJourneyUnauthorized() *ResetUserJourneyUnauthorized {
	return &ResetUserJourneyUnauthorized{}
}

/*
ResetUserJourneyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ResetUserJourneyUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this reset user journey unauthorized response has a 2xx status code
func (o *ResetUserJourneyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset user journey unauthorized response has a 3xx status code
func (o *ResetUserJourneyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset user journey unauthorized response has a 4xx status code
func (o *ResetUserJourneyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset user journey unauthorized response has a 5xx status code
func (o *ResetUserJourneyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reset user journey unauthorized response a status code equal to that given
func (o *ResetUserJourneyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the reset user journey unauthorized response
func (o *ResetUserJourneyUnauthorized) Code() int {
	return 401
}

func (o *ResetUserJourneyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyUnauthorized  %+v", 401, o.Payload)
}

func (o *ResetUserJourneyUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyUnauthorized  %+v", 401, o.Payload)
}

func (o *ResetUserJourneyUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *ResetUserJourneyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetUserJourneyForbidden creates a ResetUserJourneyForbidden with default headers values
func NewResetUserJourneyForbidden() *ResetUserJourneyForbidden {
	return &ResetUserJourneyForbidden{}
}

/*
ResetUserJourneyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ResetUserJourneyForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this reset user journey forbidden response has a 2xx status code
func (o *ResetUserJourneyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset user journey forbidden response has a 3xx status code
func (o *ResetUserJourneyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset user journey forbidden response has a 4xx status code
func (o *ResetUserJourneyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset user journey forbidden response has a 5xx status code
func (o *ResetUserJourneyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reset user journey forbidden response a status code equal to that given
func (o *ResetUserJourneyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the reset user journey forbidden response
func (o *ResetUserJourneyForbidden) Code() int {
	return 403
}

func (o *ResetUserJourneyForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyForbidden  %+v", 403, o.Payload)
}

func (o *ResetUserJourneyForbidden) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyForbidden  %+v", 403, o.Payload)
}

func (o *ResetUserJourneyForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *ResetUserJourneyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetUserJourneyNotFound creates a ResetUserJourneyNotFound with default headers values
func NewResetUserJourneyNotFound() *ResetUserJourneyNotFound {
	return &ResetUserJourneyNotFound{}
}

/*
ResetUserJourneyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResetUserJourneyNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this reset user journey not found response has a 2xx status code
func (o *ResetUserJourneyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset user journey not found response has a 3xx status code
func (o *ResetUserJourneyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset user journey not found response has a 4xx status code
func (o *ResetUserJourneyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset user journey not found response has a 5xx status code
func (o *ResetUserJourneyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reset user journey not found response a status code equal to that given
func (o *ResetUserJourneyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reset user journey not found response
func (o *ResetUserJourneyNotFound) Code() int {
	return 404
}

func (o *ResetUserJourneyNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyNotFound  %+v", 404, o.Payload)
}

func (o *ResetUserJourneyNotFound) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyNotFound  %+v", 404, o.Payload)
}

func (o *ResetUserJourneyNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *ResetUserJourneyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetUserJourneyInternalServerError creates a ResetUserJourneyInternalServerError with default headers values
func NewResetUserJourneyInternalServerError() *ResetUserJourneyInternalServerError {
	return &ResetUserJourneyInternalServerError{}
}

/*
ResetUserJourneyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ResetUserJourneyInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this reset user journey internal server error response has a 2xx status code
func (o *ResetUserJourneyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset user journey internal server error response has a 3xx status code
func (o *ResetUserJourneyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset user journey internal server error response has a 4xx status code
func (o *ResetUserJourneyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset user journey internal server error response has a 5xx status code
func (o *ResetUserJourneyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this reset user journey internal server error response a status code equal to that given
func (o *ResetUserJourneyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the reset user journey internal server error response
func (o *ResetUserJourneyInternalServerError) Code() int {
	return 500
}

func (o *ResetUserJourneyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyInternalServerError  %+v", 500, o.Payload)
}

func (o *ResetUserJourneyInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/account/user-journeys/{journey_name}/reset][%d] resetUserJourneyInternalServerError  %+v", 500, o.Payload)
}

func (o *ResetUserJourneyInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *ResetUserJourneyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
