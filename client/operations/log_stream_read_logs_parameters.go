// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewLogStreamReadLogsParams creates a new LogStreamReadLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewLogStreamReadLogsParams() *LogStreamReadLogsParams {
	return &LogStreamReadLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewLogStreamReadLogsParamsWithTimeout creates a new LogStreamReadLogsParams object
// with the ability to set a timeout on a request.
func NewLogStreamReadLogsParamsWithTimeout(timeout time.Duration) *LogStreamReadLogsParams {
	return &LogStreamReadLogsParams{
		timeout: timeout,
	}
}

// NewLogStreamReadLogsParamsWithContext creates a new LogStreamReadLogsParams object
// with the ability to set a context for a request.
func NewLogStreamReadLogsParamsWithContext(ctx context.Context) *LogStreamReadLogsParams {
	return &LogStreamReadLogsParams{
		Context: ctx,
	}
}

// NewLogStreamReadLogsParamsWithHTTPClient creates a new LogStreamReadLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewLogStreamReadLogsParamsWithHTTPClient(client *http.Client) *LogStreamReadLogsParams {
	return &LogStreamReadLogsParams{
		HTTPClient: client,
	}
}

/*
LogStreamReadLogsParams contains all the parameters to send to the API endpoint

	for the log stream read logs operation.

	Typically these are written to a http.Request.
*/
type LogStreamReadLogsParams struct {

	/* XNuonAPIOffset.

	   log stream offset
	*/
	XNuonAPIOffset string

	/* LogStreamID.

	   log stream ID
	*/
	LogStreamID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the log stream read logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LogStreamReadLogsParams) WithDefaults() *LogStreamReadLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the log stream read logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *LogStreamReadLogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the log stream read logs params
func (o *LogStreamReadLogsParams) WithTimeout(timeout time.Duration) *LogStreamReadLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the log stream read logs params
func (o *LogStreamReadLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the log stream read logs params
func (o *LogStreamReadLogsParams) WithContext(ctx context.Context) *LogStreamReadLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the log stream read logs params
func (o *LogStreamReadLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the log stream read logs params
func (o *LogStreamReadLogsParams) WithHTTPClient(client *http.Client) *LogStreamReadLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the log stream read logs params
func (o *LogStreamReadLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXNuonAPIOffset adds the xNuonAPIOffset to the log stream read logs params
func (o *LogStreamReadLogsParams) WithXNuonAPIOffset(xNuonAPIOffset string) *LogStreamReadLogsParams {
	o.SetXNuonAPIOffset(xNuonAPIOffset)
	return o
}

// SetXNuonAPIOffset adds the xNuonApiOffset to the log stream read logs params
func (o *LogStreamReadLogsParams) SetXNuonAPIOffset(xNuonAPIOffset string) {
	o.XNuonAPIOffset = xNuonAPIOffset
}

// WithLogStreamID adds the logStreamID to the log stream read logs params
func (o *LogStreamReadLogsParams) WithLogStreamID(logStreamID string) *LogStreamReadLogsParams {
	o.SetLogStreamID(logStreamID)
	return o
}

// SetLogStreamID adds the logStreamId to the log stream read logs params
func (o *LogStreamReadLogsParams) SetLogStreamID(logStreamID string) {
	o.LogStreamID = logStreamID
}

// WriteToRequest writes these params to a swagger request
func (o *LogStreamReadLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-Nuon-API-Offset
	if err := r.SetHeaderParam("X-Nuon-API-Offset", o.XNuonAPIOffset); err != nil {
		return err
	}

	// path param log_stream_id
	if err := r.SetPathParam("log_stream_id", o.LogStreamID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
