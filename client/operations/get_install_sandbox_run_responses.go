// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallSandboxRunReader is a Reader for the GetInstallSandboxRun structure.
type GetInstallSandboxRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallSandboxRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallSandboxRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallSandboxRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallSandboxRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallSandboxRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallSandboxRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallSandboxRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/sandbox-runs/{run_id}] GetInstallSandboxRun", response, response.Code())
	}
}

// NewGetInstallSandboxRunOK creates a GetInstallSandboxRunOK with default headers values
func NewGetInstallSandboxRunOK() *GetInstallSandboxRunOK {
	return &GetInstallSandboxRunOK{}
}

/*
GetInstallSandboxRunOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallSandboxRunOK struct {
	Payload *models.AppInstallSandboxRun
}

// IsSuccess returns true when this get install sandbox run o k response has a 2xx status code
func (o *GetInstallSandboxRunOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install sandbox run o k response has a 3xx status code
func (o *GetInstallSandboxRunOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run o k response has a 4xx status code
func (o *GetInstallSandboxRunOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox run o k response has a 5xx status code
func (o *GetInstallSandboxRunOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run o k response a status code equal to that given
func (o *GetInstallSandboxRunOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install sandbox run o k response
func (o *GetInstallSandboxRunOK) Code() int {
	return 200
}

func (o *GetInstallSandboxRunOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunOK %s", 200, payload)
}

func (o *GetInstallSandboxRunOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunOK %s", 200, payload)
}

func (o *GetInstallSandboxRunOK) GetPayload() *models.AppInstallSandboxRun {
	return o.Payload
}

func (o *GetInstallSandboxRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallSandboxRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunBadRequest creates a GetInstallSandboxRunBadRequest with default headers values
func NewGetInstallSandboxRunBadRequest() *GetInstallSandboxRunBadRequest {
	return &GetInstallSandboxRunBadRequest{}
}

/*
GetInstallSandboxRunBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallSandboxRunBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run bad request response has a 2xx status code
func (o *GetInstallSandboxRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run bad request response has a 3xx status code
func (o *GetInstallSandboxRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run bad request response has a 4xx status code
func (o *GetInstallSandboxRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run bad request response has a 5xx status code
func (o *GetInstallSandboxRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run bad request response a status code equal to that given
func (o *GetInstallSandboxRunBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install sandbox run bad request response
func (o *GetInstallSandboxRunBadRequest) Code() int {
	return 400
}

func (o *GetInstallSandboxRunBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunBadRequest %s", 400, payload)
}

func (o *GetInstallSandboxRunBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunBadRequest %s", 400, payload)
}

func (o *GetInstallSandboxRunBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunUnauthorized creates a GetInstallSandboxRunUnauthorized with default headers values
func NewGetInstallSandboxRunUnauthorized() *GetInstallSandboxRunUnauthorized {
	return &GetInstallSandboxRunUnauthorized{}
}

/*
GetInstallSandboxRunUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallSandboxRunUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run unauthorized response has a 2xx status code
func (o *GetInstallSandboxRunUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run unauthorized response has a 3xx status code
func (o *GetInstallSandboxRunUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run unauthorized response has a 4xx status code
func (o *GetInstallSandboxRunUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run unauthorized response has a 5xx status code
func (o *GetInstallSandboxRunUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run unauthorized response a status code equal to that given
func (o *GetInstallSandboxRunUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install sandbox run unauthorized response
func (o *GetInstallSandboxRunUnauthorized) Code() int {
	return 401
}

func (o *GetInstallSandboxRunUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunUnauthorized %s", 401, payload)
}

func (o *GetInstallSandboxRunUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunUnauthorized %s", 401, payload)
}

func (o *GetInstallSandboxRunUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunForbidden creates a GetInstallSandboxRunForbidden with default headers values
func NewGetInstallSandboxRunForbidden() *GetInstallSandboxRunForbidden {
	return &GetInstallSandboxRunForbidden{}
}

/*
GetInstallSandboxRunForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallSandboxRunForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run forbidden response has a 2xx status code
func (o *GetInstallSandboxRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run forbidden response has a 3xx status code
func (o *GetInstallSandboxRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run forbidden response has a 4xx status code
func (o *GetInstallSandboxRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run forbidden response has a 5xx status code
func (o *GetInstallSandboxRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run forbidden response a status code equal to that given
func (o *GetInstallSandboxRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install sandbox run forbidden response
func (o *GetInstallSandboxRunForbidden) Code() int {
	return 403
}

func (o *GetInstallSandboxRunForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunForbidden %s", 403, payload)
}

func (o *GetInstallSandboxRunForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunForbidden %s", 403, payload)
}

func (o *GetInstallSandboxRunForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunNotFound creates a GetInstallSandboxRunNotFound with default headers values
func NewGetInstallSandboxRunNotFound() *GetInstallSandboxRunNotFound {
	return &GetInstallSandboxRunNotFound{}
}

/*
GetInstallSandboxRunNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallSandboxRunNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run not found response has a 2xx status code
func (o *GetInstallSandboxRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run not found response has a 3xx status code
func (o *GetInstallSandboxRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run not found response has a 4xx status code
func (o *GetInstallSandboxRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run not found response has a 5xx status code
func (o *GetInstallSandboxRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run not found response a status code equal to that given
func (o *GetInstallSandboxRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install sandbox run not found response
func (o *GetInstallSandboxRunNotFound) Code() int {
	return 404
}

func (o *GetInstallSandboxRunNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunNotFound %s", 404, payload)
}

func (o *GetInstallSandboxRunNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunNotFound %s", 404, payload)
}

func (o *GetInstallSandboxRunNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunInternalServerError creates a GetInstallSandboxRunInternalServerError with default headers values
func NewGetInstallSandboxRunInternalServerError() *GetInstallSandboxRunInternalServerError {
	return &GetInstallSandboxRunInternalServerError{}
}

/*
GetInstallSandboxRunInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallSandboxRunInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run internal server error response has a 2xx status code
func (o *GetInstallSandboxRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run internal server error response has a 3xx status code
func (o *GetInstallSandboxRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run internal server error response has a 4xx status code
func (o *GetInstallSandboxRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox run internal server error response has a 5xx status code
func (o *GetInstallSandboxRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install sandbox run internal server error response a status code equal to that given
func (o *GetInstallSandboxRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install sandbox run internal server error response
func (o *GetInstallSandboxRunInternalServerError) Code() int {
	return 500
}

func (o *GetInstallSandboxRunInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunInternalServerError %s", 500, payload)
}

func (o *GetInstallSandboxRunInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/installs/sandbox-runs/{run_id}][%d] getInstallSandboxRunInternalServerError %s", 500, payload)
}

func (o *GetInstallSandboxRunInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
