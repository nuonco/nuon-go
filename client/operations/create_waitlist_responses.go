// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateWaitlistReader is a Reader for the CreateWaitlist structure.
type CreateWaitlistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWaitlistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateWaitlistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /v1/general/waitlist] CreateWaitlist", response, response.Code())
	}
}

// NewCreateWaitlistOK creates a CreateWaitlistOK with default headers values
func NewCreateWaitlistOK() *CreateWaitlistOK {
	return &CreateWaitlistOK{}
}

/*
CreateWaitlistOK describes a response with status code 200, with default header values.

OK
*/
type CreateWaitlistOK struct {
	Payload *models.AppWaitlist
}

// IsSuccess returns true when this create waitlist o k response has a 2xx status code
func (o *CreateWaitlistOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create waitlist o k response has a 3xx status code
func (o *CreateWaitlistOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create waitlist o k response has a 4xx status code
func (o *CreateWaitlistOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create waitlist o k response has a 5xx status code
func (o *CreateWaitlistOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create waitlist o k response a status code equal to that given
func (o *CreateWaitlistOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create waitlist o k response
func (o *CreateWaitlistOK) Code() int {
	return 200
}

func (o *CreateWaitlistOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/general/waitlist][%d] createWaitlistOK %s", 200, payload)
}

func (o *CreateWaitlistOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/general/waitlist][%d] createWaitlistOK %s", 200, payload)
}

func (o *CreateWaitlistOK) GetPayload() *models.AppWaitlist {
	return o.Payload
}

func (o *CreateWaitlistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppWaitlist)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
