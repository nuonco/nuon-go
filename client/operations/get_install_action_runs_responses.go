// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionRunsReader is a Reader for the GetInstallActionRuns structure.
type GetInstallActionRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions/runs] GetInstallActionRuns", response, response.Code())
	}
}

// NewGetInstallActionRunsOK creates a GetInstallActionRunsOK with default headers values
func NewGetInstallActionRunsOK() *GetInstallActionRunsOK {
	return &GetInstallActionRunsOK{}
}

/*
GetInstallActionRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionRunsOK struct {
	Payload []*models.AppInstallActionWorkflowRun
}

// IsSuccess returns true when this get install action runs o k response has a 2xx status code
func (o *GetInstallActionRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install action runs o k response has a 3xx status code
func (o *GetInstallActionRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action runs o k response has a 4xx status code
func (o *GetInstallActionRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action runs o k response has a 5xx status code
func (o *GetInstallActionRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action runs o k response a status code equal to that given
func (o *GetInstallActionRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install action runs o k response
func (o *GetInstallActionRunsOK) Code() int {
	return 200
}

func (o *GetInstallActionRunsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRunsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRunsOK) GetPayload() []*models.AppInstallActionWorkflowRun {
	return o.Payload
}

func (o *GetInstallActionRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunsBadRequest creates a GetInstallActionRunsBadRequest with default headers values
func NewGetInstallActionRunsBadRequest() *GetInstallActionRunsBadRequest {
	return &GetInstallActionRunsBadRequest{}
}

/*
GetInstallActionRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action runs bad request response has a 2xx status code
func (o *GetInstallActionRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action runs bad request response has a 3xx status code
func (o *GetInstallActionRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action runs bad request response has a 4xx status code
func (o *GetInstallActionRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action runs bad request response has a 5xx status code
func (o *GetInstallActionRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action runs bad request response a status code equal to that given
func (o *GetInstallActionRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install action runs bad request response
func (o *GetInstallActionRunsBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRunsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunsUnauthorized creates a GetInstallActionRunsUnauthorized with default headers values
func NewGetInstallActionRunsUnauthorized() *GetInstallActionRunsUnauthorized {
	return &GetInstallActionRunsUnauthorized{}
}

/*
GetInstallActionRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action runs unauthorized response has a 2xx status code
func (o *GetInstallActionRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action runs unauthorized response has a 3xx status code
func (o *GetInstallActionRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action runs unauthorized response has a 4xx status code
func (o *GetInstallActionRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action runs unauthorized response has a 5xx status code
func (o *GetInstallActionRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action runs unauthorized response a status code equal to that given
func (o *GetInstallActionRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install action runs unauthorized response
func (o *GetInstallActionRunsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunsForbidden creates a GetInstallActionRunsForbidden with default headers values
func NewGetInstallActionRunsForbidden() *GetInstallActionRunsForbidden {
	return &GetInstallActionRunsForbidden{}
}

/*
GetInstallActionRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action runs forbidden response has a 2xx status code
func (o *GetInstallActionRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action runs forbidden response has a 3xx status code
func (o *GetInstallActionRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action runs forbidden response has a 4xx status code
func (o *GetInstallActionRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action runs forbidden response has a 5xx status code
func (o *GetInstallActionRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action runs forbidden response a status code equal to that given
func (o *GetInstallActionRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install action runs forbidden response
func (o *GetInstallActionRunsForbidden) Code() int {
	return 403
}

func (o *GetInstallActionRunsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRunsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunsNotFound creates a GetInstallActionRunsNotFound with default headers values
func NewGetInstallActionRunsNotFound() *GetInstallActionRunsNotFound {
	return &GetInstallActionRunsNotFound{}
}

/*
GetInstallActionRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action runs not found response has a 2xx status code
func (o *GetInstallActionRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action runs not found response has a 3xx status code
func (o *GetInstallActionRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action runs not found response has a 4xx status code
func (o *GetInstallActionRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action runs not found response has a 5xx status code
func (o *GetInstallActionRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action runs not found response a status code equal to that given
func (o *GetInstallActionRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install action runs not found response
func (o *GetInstallActionRunsNotFound) Code() int {
	return 404
}

func (o *GetInstallActionRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRunsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRunsInternalServerError creates a GetInstallActionRunsInternalServerError with default headers values
func NewGetInstallActionRunsInternalServerError() *GetInstallActionRunsInternalServerError {
	return &GetInstallActionRunsInternalServerError{}
}

/*
GetInstallActionRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action runs internal server error response has a 2xx status code
func (o *GetInstallActionRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action runs internal server error response has a 3xx status code
func (o *GetInstallActionRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action runs internal server error response has a 4xx status code
func (o *GetInstallActionRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action runs internal server error response has a 5xx status code
func (o *GetInstallActionRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install action runs internal server error response a status code equal to that given
func (o *GetInstallActionRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install action runs internal server error response
func (o *GetInstallActionRunsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRunsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/runs][%d] getInstallActionRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
