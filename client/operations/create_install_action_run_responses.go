// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateInstallActionRunReader is a Reader for the CreateInstallActionRun structure.
type CreateInstallActionRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInstallActionRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInstallActionRunCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInstallActionRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInstallActionRunUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInstallActionRunForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateInstallActionRunNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInstallActionRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/installs/{install_id}/actions/runs] CreateInstallActionRun", response, response.Code())
	}
}

// NewCreateInstallActionRunCreated creates a CreateInstallActionRunCreated with default headers values
func NewCreateInstallActionRunCreated() *CreateInstallActionRunCreated {
	return &CreateInstallActionRunCreated{}
}

/*
CreateInstallActionRunCreated describes a response with status code 201, with default header values.

Created
*/
type CreateInstallActionRunCreated struct {
	Payload string
}

// IsSuccess returns true when this create install action run created response has a 2xx status code
func (o *CreateInstallActionRunCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create install action run created response has a 3xx status code
func (o *CreateInstallActionRunCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install action run created response has a 4xx status code
func (o *CreateInstallActionRunCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create install action run created response has a 5xx status code
func (o *CreateInstallActionRunCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create install action run created response a status code equal to that given
func (o *CreateInstallActionRunCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create install action run created response
func (o *CreateInstallActionRunCreated) Code() int {
	return 201
}

func (o *CreateInstallActionRunCreated) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunCreated  %+v", 201, o.Payload)
}

func (o *CreateInstallActionRunCreated) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunCreated  %+v", 201, o.Payload)
}

func (o *CreateInstallActionRunCreated) GetPayload() string {
	return o.Payload
}

func (o *CreateInstallActionRunCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallActionRunBadRequest creates a CreateInstallActionRunBadRequest with default headers values
func NewCreateInstallActionRunBadRequest() *CreateInstallActionRunBadRequest {
	return &CreateInstallActionRunBadRequest{}
}

/*
CreateInstallActionRunBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateInstallActionRunBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install action run bad request response has a 2xx status code
func (o *CreateInstallActionRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install action run bad request response has a 3xx status code
func (o *CreateInstallActionRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install action run bad request response has a 4xx status code
func (o *CreateInstallActionRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install action run bad request response has a 5xx status code
func (o *CreateInstallActionRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create install action run bad request response a status code equal to that given
func (o *CreateInstallActionRunBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create install action run bad request response
func (o *CreateInstallActionRunBadRequest) Code() int {
	return 400
}

func (o *CreateInstallActionRunBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInstallActionRunBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInstallActionRunBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallActionRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallActionRunUnauthorized creates a CreateInstallActionRunUnauthorized with default headers values
func NewCreateInstallActionRunUnauthorized() *CreateInstallActionRunUnauthorized {
	return &CreateInstallActionRunUnauthorized{}
}

/*
CreateInstallActionRunUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateInstallActionRunUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install action run unauthorized response has a 2xx status code
func (o *CreateInstallActionRunUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install action run unauthorized response has a 3xx status code
func (o *CreateInstallActionRunUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install action run unauthorized response has a 4xx status code
func (o *CreateInstallActionRunUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install action run unauthorized response has a 5xx status code
func (o *CreateInstallActionRunUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create install action run unauthorized response a status code equal to that given
func (o *CreateInstallActionRunUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create install action run unauthorized response
func (o *CreateInstallActionRunUnauthorized) Code() int {
	return 401
}

func (o *CreateInstallActionRunUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateInstallActionRunUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateInstallActionRunUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallActionRunUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallActionRunForbidden creates a CreateInstallActionRunForbidden with default headers values
func NewCreateInstallActionRunForbidden() *CreateInstallActionRunForbidden {
	return &CreateInstallActionRunForbidden{}
}

/*
CreateInstallActionRunForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateInstallActionRunForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install action run forbidden response has a 2xx status code
func (o *CreateInstallActionRunForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install action run forbidden response has a 3xx status code
func (o *CreateInstallActionRunForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install action run forbidden response has a 4xx status code
func (o *CreateInstallActionRunForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install action run forbidden response has a 5xx status code
func (o *CreateInstallActionRunForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create install action run forbidden response a status code equal to that given
func (o *CreateInstallActionRunForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create install action run forbidden response
func (o *CreateInstallActionRunForbidden) Code() int {
	return 403
}

func (o *CreateInstallActionRunForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunForbidden  %+v", 403, o.Payload)
}

func (o *CreateInstallActionRunForbidden) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunForbidden  %+v", 403, o.Payload)
}

func (o *CreateInstallActionRunForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallActionRunForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallActionRunNotFound creates a CreateInstallActionRunNotFound with default headers values
func NewCreateInstallActionRunNotFound() *CreateInstallActionRunNotFound {
	return &CreateInstallActionRunNotFound{}
}

/*
CreateInstallActionRunNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateInstallActionRunNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install action run not found response has a 2xx status code
func (o *CreateInstallActionRunNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install action run not found response has a 3xx status code
func (o *CreateInstallActionRunNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install action run not found response has a 4xx status code
func (o *CreateInstallActionRunNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install action run not found response has a 5xx status code
func (o *CreateInstallActionRunNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create install action run not found response a status code equal to that given
func (o *CreateInstallActionRunNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create install action run not found response
func (o *CreateInstallActionRunNotFound) Code() int {
	return 404
}

func (o *CreateInstallActionRunNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunNotFound  %+v", 404, o.Payload)
}

func (o *CreateInstallActionRunNotFound) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunNotFound  %+v", 404, o.Payload)
}

func (o *CreateInstallActionRunNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallActionRunNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallActionRunInternalServerError creates a CreateInstallActionRunInternalServerError with default headers values
func NewCreateInstallActionRunInternalServerError() *CreateInstallActionRunInternalServerError {
	return &CreateInstallActionRunInternalServerError{}
}

/*
CreateInstallActionRunInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateInstallActionRunInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install action run internal server error response has a 2xx status code
func (o *CreateInstallActionRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install action run internal server error response has a 3xx status code
func (o *CreateInstallActionRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install action run internal server error response has a 4xx status code
func (o *CreateInstallActionRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create install action run internal server error response has a 5xx status code
func (o *CreateInstallActionRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create install action run internal server error response a status code equal to that given
func (o *CreateInstallActionRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create install action run internal server error response
func (o *CreateInstallActionRunInternalServerError) Code() int {
	return 500
}

func (o *CreateInstallActionRunInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInstallActionRunInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/actions/runs][%d] createInstallActionRunInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInstallActionRunInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallActionRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
