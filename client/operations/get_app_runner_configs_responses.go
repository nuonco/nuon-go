// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppRunnerConfigsReader is a Reader for the GetAppRunnerConfigs structure.
type GetAppRunnerConfigsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppRunnerConfigsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppRunnerConfigsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppRunnerConfigsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppRunnerConfigsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppRunnerConfigsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppRunnerConfigsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppRunnerConfigsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/runner-configs] GetAppRunnerConfigs", response, response.Code())
	}
}

// NewGetAppRunnerConfigsOK creates a GetAppRunnerConfigsOK with default headers values
func NewGetAppRunnerConfigsOK() *GetAppRunnerConfigsOK {
	return &GetAppRunnerConfigsOK{}
}

/*
GetAppRunnerConfigsOK describes a response with status code 200, with default header values.

OK
*/
type GetAppRunnerConfigsOK struct {
	Payload []*models.AppAppRunnerConfig
}

// IsSuccess returns true when this get app runner configs o k response has a 2xx status code
func (o *GetAppRunnerConfigsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app runner configs o k response has a 3xx status code
func (o *GetAppRunnerConfigsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app runner configs o k response has a 4xx status code
func (o *GetAppRunnerConfigsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app runner configs o k response has a 5xx status code
func (o *GetAppRunnerConfigsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app runner configs o k response a status code equal to that given
func (o *GetAppRunnerConfigsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app runner configs o k response
func (o *GetAppRunnerConfigsOK) Code() int {
	return 200
}

func (o *GetAppRunnerConfigsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsOK %s", 200, payload)
}

func (o *GetAppRunnerConfigsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsOK %s", 200, payload)
}

func (o *GetAppRunnerConfigsOK) GetPayload() []*models.AppAppRunnerConfig {
	return o.Payload
}

func (o *GetAppRunnerConfigsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppRunnerConfigsBadRequest creates a GetAppRunnerConfigsBadRequest with default headers values
func NewGetAppRunnerConfigsBadRequest() *GetAppRunnerConfigsBadRequest {
	return &GetAppRunnerConfigsBadRequest{}
}

/*
GetAppRunnerConfigsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppRunnerConfigsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app runner configs bad request response has a 2xx status code
func (o *GetAppRunnerConfigsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app runner configs bad request response has a 3xx status code
func (o *GetAppRunnerConfigsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app runner configs bad request response has a 4xx status code
func (o *GetAppRunnerConfigsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app runner configs bad request response has a 5xx status code
func (o *GetAppRunnerConfigsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app runner configs bad request response a status code equal to that given
func (o *GetAppRunnerConfigsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app runner configs bad request response
func (o *GetAppRunnerConfigsBadRequest) Code() int {
	return 400
}

func (o *GetAppRunnerConfigsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsBadRequest %s", 400, payload)
}

func (o *GetAppRunnerConfigsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsBadRequest %s", 400, payload)
}

func (o *GetAppRunnerConfigsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppRunnerConfigsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppRunnerConfigsUnauthorized creates a GetAppRunnerConfigsUnauthorized with default headers values
func NewGetAppRunnerConfigsUnauthorized() *GetAppRunnerConfigsUnauthorized {
	return &GetAppRunnerConfigsUnauthorized{}
}

/*
GetAppRunnerConfigsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppRunnerConfigsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app runner configs unauthorized response has a 2xx status code
func (o *GetAppRunnerConfigsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app runner configs unauthorized response has a 3xx status code
func (o *GetAppRunnerConfigsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app runner configs unauthorized response has a 4xx status code
func (o *GetAppRunnerConfigsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app runner configs unauthorized response has a 5xx status code
func (o *GetAppRunnerConfigsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app runner configs unauthorized response a status code equal to that given
func (o *GetAppRunnerConfigsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app runner configs unauthorized response
func (o *GetAppRunnerConfigsUnauthorized) Code() int {
	return 401
}

func (o *GetAppRunnerConfigsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsUnauthorized %s", 401, payload)
}

func (o *GetAppRunnerConfigsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsUnauthorized %s", 401, payload)
}

func (o *GetAppRunnerConfigsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppRunnerConfigsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppRunnerConfigsForbidden creates a GetAppRunnerConfigsForbidden with default headers values
func NewGetAppRunnerConfigsForbidden() *GetAppRunnerConfigsForbidden {
	return &GetAppRunnerConfigsForbidden{}
}

/*
GetAppRunnerConfigsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppRunnerConfigsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app runner configs forbidden response has a 2xx status code
func (o *GetAppRunnerConfigsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app runner configs forbidden response has a 3xx status code
func (o *GetAppRunnerConfigsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app runner configs forbidden response has a 4xx status code
func (o *GetAppRunnerConfigsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app runner configs forbidden response has a 5xx status code
func (o *GetAppRunnerConfigsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app runner configs forbidden response a status code equal to that given
func (o *GetAppRunnerConfigsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app runner configs forbidden response
func (o *GetAppRunnerConfigsForbidden) Code() int {
	return 403
}

func (o *GetAppRunnerConfigsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsForbidden %s", 403, payload)
}

func (o *GetAppRunnerConfigsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsForbidden %s", 403, payload)
}

func (o *GetAppRunnerConfigsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppRunnerConfigsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppRunnerConfigsNotFound creates a GetAppRunnerConfigsNotFound with default headers values
func NewGetAppRunnerConfigsNotFound() *GetAppRunnerConfigsNotFound {
	return &GetAppRunnerConfigsNotFound{}
}

/*
GetAppRunnerConfigsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppRunnerConfigsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app runner configs not found response has a 2xx status code
func (o *GetAppRunnerConfigsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app runner configs not found response has a 3xx status code
func (o *GetAppRunnerConfigsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app runner configs not found response has a 4xx status code
func (o *GetAppRunnerConfigsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app runner configs not found response has a 5xx status code
func (o *GetAppRunnerConfigsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app runner configs not found response a status code equal to that given
func (o *GetAppRunnerConfigsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app runner configs not found response
func (o *GetAppRunnerConfigsNotFound) Code() int {
	return 404
}

func (o *GetAppRunnerConfigsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsNotFound %s", 404, payload)
}

func (o *GetAppRunnerConfigsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsNotFound %s", 404, payload)
}

func (o *GetAppRunnerConfigsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppRunnerConfigsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppRunnerConfigsInternalServerError creates a GetAppRunnerConfigsInternalServerError with default headers values
func NewGetAppRunnerConfigsInternalServerError() *GetAppRunnerConfigsInternalServerError {
	return &GetAppRunnerConfigsInternalServerError{}
}

/*
GetAppRunnerConfigsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppRunnerConfigsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app runner configs internal server error response has a 2xx status code
func (o *GetAppRunnerConfigsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app runner configs internal server error response has a 3xx status code
func (o *GetAppRunnerConfigsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app runner configs internal server error response has a 4xx status code
func (o *GetAppRunnerConfigsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app runner configs internal server error response has a 5xx status code
func (o *GetAppRunnerConfigsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app runner configs internal server error response a status code equal to that given
func (o *GetAppRunnerConfigsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app runner configs internal server error response
func (o *GetAppRunnerConfigsInternalServerError) Code() int {
	return 500
}

func (o *GetAppRunnerConfigsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsInternalServerError %s", 500, payload)
}

func (o *GetAppRunnerConfigsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/runner-configs][%d] getAppRunnerConfigsInternalServerError %s", 500, payload)
}

func (o *GetAppRunnerConfigsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppRunnerConfigsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
