// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PostV1InstallsInstallIDInputsReader is a Reader for the PostV1InstallsInstallIDInputs structure.
type PostV1InstallsInstallIDInputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1InstallsInstallIDInputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1InstallsInstallIDInputsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1InstallsInstallIDInputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1InstallsInstallIDInputsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostV1InstallsInstallIDInputsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostV1InstallsInstallIDInputsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1InstallsInstallIDInputsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/installs/{install_id}/inputs] PostV1InstallsInstallIDInputs", response, response.Code())
	}
}

// NewPostV1InstallsInstallIDInputsCreated creates a PostV1InstallsInstallIDInputsCreated with default headers values
func NewPostV1InstallsInstallIDInputsCreated() *PostV1InstallsInstallIDInputsCreated {
	return &PostV1InstallsInstallIDInputsCreated{}
}

/*
PostV1InstallsInstallIDInputsCreated describes a response with status code 201, with default header values.

Created
*/
type PostV1InstallsInstallIDInputsCreated struct {
	Payload *models.AppInstallInputs
}

// IsSuccess returns true when this post v1 installs install Id inputs created response has a 2xx status code
func (o *PostV1InstallsInstallIDInputsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 installs install Id inputs created response has a 3xx status code
func (o *PostV1InstallsInstallIDInputsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installs install Id inputs created response has a 4xx status code
func (o *PostV1InstallsInstallIDInputsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 installs install Id inputs created response has a 5xx status code
func (o *PostV1InstallsInstallIDInputsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installs install Id inputs created response a status code equal to that given
func (o *PostV1InstallsInstallIDInputsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 installs install Id inputs created response
func (o *PostV1InstallsInstallIDInputsCreated) Code() int {
	return 201
}

func (o *PostV1InstallsInstallIDInputsCreated) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsCreated  %+v", 201, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsCreated) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsCreated  %+v", 201, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsCreated) GetPayload() *models.AppInstallInputs {
	return o.Payload
}

func (o *PostV1InstallsInstallIDInputsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallInputs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallsInstallIDInputsBadRequest creates a PostV1InstallsInstallIDInputsBadRequest with default headers values
func NewPostV1InstallsInstallIDInputsBadRequest() *PostV1InstallsInstallIDInputsBadRequest {
	return &PostV1InstallsInstallIDInputsBadRequest{}
}

/*
PostV1InstallsInstallIDInputsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1InstallsInstallIDInputsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installs install Id inputs bad request response has a 2xx status code
func (o *PostV1InstallsInstallIDInputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installs install Id inputs bad request response has a 3xx status code
func (o *PostV1InstallsInstallIDInputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installs install Id inputs bad request response has a 4xx status code
func (o *PostV1InstallsInstallIDInputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installs install Id inputs bad request response has a 5xx status code
func (o *PostV1InstallsInstallIDInputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installs install Id inputs bad request response a status code equal to that given
func (o *PostV1InstallsInstallIDInputsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 installs install Id inputs bad request response
func (o *PostV1InstallsInstallIDInputsBadRequest) Code() int {
	return 400
}

func (o *PostV1InstallsInstallIDInputsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallsInstallIDInputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallsInstallIDInputsUnauthorized creates a PostV1InstallsInstallIDInputsUnauthorized with default headers values
func NewPostV1InstallsInstallIDInputsUnauthorized() *PostV1InstallsInstallIDInputsUnauthorized {
	return &PostV1InstallsInstallIDInputsUnauthorized{}
}

/*
PostV1InstallsInstallIDInputsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1InstallsInstallIDInputsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installs install Id inputs unauthorized response has a 2xx status code
func (o *PostV1InstallsInstallIDInputsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installs install Id inputs unauthorized response has a 3xx status code
func (o *PostV1InstallsInstallIDInputsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installs install Id inputs unauthorized response has a 4xx status code
func (o *PostV1InstallsInstallIDInputsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installs install Id inputs unauthorized response has a 5xx status code
func (o *PostV1InstallsInstallIDInputsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installs install Id inputs unauthorized response a status code equal to that given
func (o *PostV1InstallsInstallIDInputsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 installs install Id inputs unauthorized response
func (o *PostV1InstallsInstallIDInputsUnauthorized) Code() int {
	return 401
}

func (o *PostV1InstallsInstallIDInputsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallsInstallIDInputsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallsInstallIDInputsForbidden creates a PostV1InstallsInstallIDInputsForbidden with default headers values
func NewPostV1InstallsInstallIDInputsForbidden() *PostV1InstallsInstallIDInputsForbidden {
	return &PostV1InstallsInstallIDInputsForbidden{}
}

/*
PostV1InstallsInstallIDInputsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostV1InstallsInstallIDInputsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installs install Id inputs forbidden response has a 2xx status code
func (o *PostV1InstallsInstallIDInputsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installs install Id inputs forbidden response has a 3xx status code
func (o *PostV1InstallsInstallIDInputsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installs install Id inputs forbidden response has a 4xx status code
func (o *PostV1InstallsInstallIDInputsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installs install Id inputs forbidden response has a 5xx status code
func (o *PostV1InstallsInstallIDInputsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installs install Id inputs forbidden response a status code equal to that given
func (o *PostV1InstallsInstallIDInputsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post v1 installs install Id inputs forbidden response
func (o *PostV1InstallsInstallIDInputsForbidden) Code() int {
	return 403
}

func (o *PostV1InstallsInstallIDInputsForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsForbidden) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallsInstallIDInputsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallsInstallIDInputsNotFound creates a PostV1InstallsInstallIDInputsNotFound with default headers values
func NewPostV1InstallsInstallIDInputsNotFound() *PostV1InstallsInstallIDInputsNotFound {
	return &PostV1InstallsInstallIDInputsNotFound{}
}

/*
PostV1InstallsInstallIDInputsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostV1InstallsInstallIDInputsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installs install Id inputs not found response has a 2xx status code
func (o *PostV1InstallsInstallIDInputsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installs install Id inputs not found response has a 3xx status code
func (o *PostV1InstallsInstallIDInputsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installs install Id inputs not found response has a 4xx status code
func (o *PostV1InstallsInstallIDInputsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 installs install Id inputs not found response has a 5xx status code
func (o *PostV1InstallsInstallIDInputsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 installs install Id inputs not found response a status code equal to that given
func (o *PostV1InstallsInstallIDInputsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 installs install Id inputs not found response
func (o *PostV1InstallsInstallIDInputsNotFound) Code() int {
	return 404
}

func (o *PostV1InstallsInstallIDInputsNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsNotFound) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallsInstallIDInputsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1InstallsInstallIDInputsInternalServerError creates a PostV1InstallsInstallIDInputsInternalServerError with default headers values
func NewPostV1InstallsInstallIDInputsInternalServerError() *PostV1InstallsInstallIDInputsInternalServerError {
	return &PostV1InstallsInstallIDInputsInternalServerError{}
}

/*
PostV1InstallsInstallIDInputsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1InstallsInstallIDInputsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 installs install Id inputs internal server error response has a 2xx status code
func (o *PostV1InstallsInstallIDInputsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 installs install Id inputs internal server error response has a 3xx status code
func (o *PostV1InstallsInstallIDInputsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 installs install Id inputs internal server error response has a 4xx status code
func (o *PostV1InstallsInstallIDInputsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 installs install Id inputs internal server error response has a 5xx status code
func (o *PostV1InstallsInstallIDInputsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 installs install Id inputs internal server error response a status code equal to that given
func (o *PostV1InstallsInstallIDInputsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 installs install Id inputs internal server error response
func (o *PostV1InstallsInstallIDInputsInternalServerError) Code() int {
	return 500
}

func (o *PostV1InstallsInstallIDInputsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/installs/{install_id}/inputs][%d] postV1InstallsInstallIdInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1InstallsInstallIDInputsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1InstallsInstallIDInputsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
