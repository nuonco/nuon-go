// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1GeneralCliConfigReader is a Reader for the GetV1GeneralCliConfig structure.
type GetV1GeneralCliConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1GeneralCliConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1GeneralCliConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1GeneralCliConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1GeneralCliConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1GeneralCliConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1GeneralCliConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1GeneralCliConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/general/cli-config] GetV1GeneralCliConfig", response, response.Code())
	}
}

// NewGetV1GeneralCliConfigOK creates a GetV1GeneralCliConfigOK with default headers values
func NewGetV1GeneralCliConfigOK() *GetV1GeneralCliConfigOK {
	return &GetV1GeneralCliConfigOK{}
}

/*
GetV1GeneralCliConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetV1GeneralCliConfigOK struct {
	Payload *models.ServiceCLIConfig
}

// IsSuccess returns true when this get v1 general cli config o k response has a 2xx status code
func (o *GetV1GeneralCliConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 general cli config o k response has a 3xx status code
func (o *GetV1GeneralCliConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 general cli config o k response has a 4xx status code
func (o *GetV1GeneralCliConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 general cli config o k response has a 5xx status code
func (o *GetV1GeneralCliConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 general cli config o k response a status code equal to that given
func (o *GetV1GeneralCliConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 general cli config o k response
func (o *GetV1GeneralCliConfigOK) Code() int {
	return 200
}

func (o *GetV1GeneralCliConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigOK  %+v", 200, o.Payload)
}

func (o *GetV1GeneralCliConfigOK) String() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigOK  %+v", 200, o.Payload)
}

func (o *GetV1GeneralCliConfigOK) GetPayload() *models.ServiceCLIConfig {
	return o.Payload
}

func (o *GetV1GeneralCliConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceCLIConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1GeneralCliConfigBadRequest creates a GetV1GeneralCliConfigBadRequest with default headers values
func NewGetV1GeneralCliConfigBadRequest() *GetV1GeneralCliConfigBadRequest {
	return &GetV1GeneralCliConfigBadRequest{}
}

/*
GetV1GeneralCliConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1GeneralCliConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 general cli config bad request response has a 2xx status code
func (o *GetV1GeneralCliConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 general cli config bad request response has a 3xx status code
func (o *GetV1GeneralCliConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 general cli config bad request response has a 4xx status code
func (o *GetV1GeneralCliConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 general cli config bad request response has a 5xx status code
func (o *GetV1GeneralCliConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 general cli config bad request response a status code equal to that given
func (o *GetV1GeneralCliConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 general cli config bad request response
func (o *GetV1GeneralCliConfigBadRequest) Code() int {
	return 400
}

func (o *GetV1GeneralCliConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1GeneralCliConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1GeneralCliConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1GeneralCliConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1GeneralCliConfigUnauthorized creates a GetV1GeneralCliConfigUnauthorized with default headers values
func NewGetV1GeneralCliConfigUnauthorized() *GetV1GeneralCliConfigUnauthorized {
	return &GetV1GeneralCliConfigUnauthorized{}
}

/*
GetV1GeneralCliConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1GeneralCliConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 general cli config unauthorized response has a 2xx status code
func (o *GetV1GeneralCliConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 general cli config unauthorized response has a 3xx status code
func (o *GetV1GeneralCliConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 general cli config unauthorized response has a 4xx status code
func (o *GetV1GeneralCliConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 general cli config unauthorized response has a 5xx status code
func (o *GetV1GeneralCliConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 general cli config unauthorized response a status code equal to that given
func (o *GetV1GeneralCliConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 general cli config unauthorized response
func (o *GetV1GeneralCliConfigUnauthorized) Code() int {
	return 401
}

func (o *GetV1GeneralCliConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1GeneralCliConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1GeneralCliConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1GeneralCliConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1GeneralCliConfigForbidden creates a GetV1GeneralCliConfigForbidden with default headers values
func NewGetV1GeneralCliConfigForbidden() *GetV1GeneralCliConfigForbidden {
	return &GetV1GeneralCliConfigForbidden{}
}

/*
GetV1GeneralCliConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1GeneralCliConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 general cli config forbidden response has a 2xx status code
func (o *GetV1GeneralCliConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 general cli config forbidden response has a 3xx status code
func (o *GetV1GeneralCliConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 general cli config forbidden response has a 4xx status code
func (o *GetV1GeneralCliConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 general cli config forbidden response has a 5xx status code
func (o *GetV1GeneralCliConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 general cli config forbidden response a status code equal to that given
func (o *GetV1GeneralCliConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 general cli config forbidden response
func (o *GetV1GeneralCliConfigForbidden) Code() int {
	return 403
}

func (o *GetV1GeneralCliConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetV1GeneralCliConfigForbidden) String() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetV1GeneralCliConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1GeneralCliConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1GeneralCliConfigNotFound creates a GetV1GeneralCliConfigNotFound with default headers values
func NewGetV1GeneralCliConfigNotFound() *GetV1GeneralCliConfigNotFound {
	return &GetV1GeneralCliConfigNotFound{}
}

/*
GetV1GeneralCliConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1GeneralCliConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 general cli config not found response has a 2xx status code
func (o *GetV1GeneralCliConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 general cli config not found response has a 3xx status code
func (o *GetV1GeneralCliConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 general cli config not found response has a 4xx status code
func (o *GetV1GeneralCliConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 general cli config not found response has a 5xx status code
func (o *GetV1GeneralCliConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 general cli config not found response a status code equal to that given
func (o *GetV1GeneralCliConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 general cli config not found response
func (o *GetV1GeneralCliConfigNotFound) Code() int {
	return 404
}

func (o *GetV1GeneralCliConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetV1GeneralCliConfigNotFound) String() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetV1GeneralCliConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1GeneralCliConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1GeneralCliConfigInternalServerError creates a GetV1GeneralCliConfigInternalServerError with default headers values
func NewGetV1GeneralCliConfigInternalServerError() *GetV1GeneralCliConfigInternalServerError {
	return &GetV1GeneralCliConfigInternalServerError{}
}

/*
GetV1GeneralCliConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1GeneralCliConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 general cli config internal server error response has a 2xx status code
func (o *GetV1GeneralCliConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 general cli config internal server error response has a 3xx status code
func (o *GetV1GeneralCliConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 general cli config internal server error response has a 4xx status code
func (o *GetV1GeneralCliConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 general cli config internal server error response has a 5xx status code
func (o *GetV1GeneralCliConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 general cli config internal server error response a status code equal to that given
func (o *GetV1GeneralCliConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 general cli config internal server error response
func (o *GetV1GeneralCliConfigInternalServerError) Code() int {
	return 500
}

func (o *GetV1GeneralCliConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1GeneralCliConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/general/cli-config][%d] getV1GeneralCliConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1GeneralCliConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1GeneralCliConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
