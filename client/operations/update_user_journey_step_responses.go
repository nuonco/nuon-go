// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// UpdateUserJourneyStepReader is a Reader for the UpdateUserJourneyStep structure.
type UpdateUserJourneyStepReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserJourneyStepReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserJourneyStepOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUserJourneyStepBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUserJourneyStepUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserJourneyStepForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserJourneyStepNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserJourneyStepInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}] UpdateUserJourneyStep", response, response.Code())
	}
}

// NewUpdateUserJourneyStepOK creates a UpdateUserJourneyStepOK with default headers values
func NewUpdateUserJourneyStepOK() *UpdateUserJourneyStepOK {
	return &UpdateUserJourneyStepOK{}
}

/*
UpdateUserJourneyStepOK describes a response with status code 200, with default header values.

OK
*/
type UpdateUserJourneyStepOK struct {
	Payload *models.AppAccount
}

// IsSuccess returns true when this update user journey step o k response has a 2xx status code
func (o *UpdateUserJourneyStepOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update user journey step o k response has a 3xx status code
func (o *UpdateUserJourneyStepOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user journey step o k response has a 4xx status code
func (o *UpdateUserJourneyStepOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user journey step o k response has a 5xx status code
func (o *UpdateUserJourneyStepOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update user journey step o k response a status code equal to that given
func (o *UpdateUserJourneyStepOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update user journey step o k response
func (o *UpdateUserJourneyStepOK) Code() int {
	return 200
}

func (o *UpdateUserJourneyStepOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepOK  %+v", 200, o.Payload)
}

func (o *UpdateUserJourneyStepOK) String() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepOK  %+v", 200, o.Payload)
}

func (o *UpdateUserJourneyStepOK) GetPayload() *models.AppAccount {
	return o.Payload
}

func (o *UpdateUserJourneyStepOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserJourneyStepBadRequest creates a UpdateUserJourneyStepBadRequest with default headers values
func NewUpdateUserJourneyStepBadRequest() *UpdateUserJourneyStepBadRequest {
	return &UpdateUserJourneyStepBadRequest{}
}

/*
UpdateUserJourneyStepBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateUserJourneyStepBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update user journey step bad request response has a 2xx status code
func (o *UpdateUserJourneyStepBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user journey step bad request response has a 3xx status code
func (o *UpdateUserJourneyStepBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user journey step bad request response has a 4xx status code
func (o *UpdateUserJourneyStepBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user journey step bad request response has a 5xx status code
func (o *UpdateUserJourneyStepBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update user journey step bad request response a status code equal to that given
func (o *UpdateUserJourneyStepBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update user journey step bad request response
func (o *UpdateUserJourneyStepBadRequest) Code() int {
	return 400
}

func (o *UpdateUserJourneyStepBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserJourneyStepBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserJourneyStepBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateUserJourneyStepBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserJourneyStepUnauthorized creates a UpdateUserJourneyStepUnauthorized with default headers values
func NewUpdateUserJourneyStepUnauthorized() *UpdateUserJourneyStepUnauthorized {
	return &UpdateUserJourneyStepUnauthorized{}
}

/*
UpdateUserJourneyStepUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateUserJourneyStepUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update user journey step unauthorized response has a 2xx status code
func (o *UpdateUserJourneyStepUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user journey step unauthorized response has a 3xx status code
func (o *UpdateUserJourneyStepUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user journey step unauthorized response has a 4xx status code
func (o *UpdateUserJourneyStepUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user journey step unauthorized response has a 5xx status code
func (o *UpdateUserJourneyStepUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update user journey step unauthorized response a status code equal to that given
func (o *UpdateUserJourneyStepUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update user journey step unauthorized response
func (o *UpdateUserJourneyStepUnauthorized) Code() int {
	return 401
}

func (o *UpdateUserJourneyStepUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserJourneyStepUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserJourneyStepUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateUserJourneyStepUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserJourneyStepForbidden creates a UpdateUserJourneyStepForbidden with default headers values
func NewUpdateUserJourneyStepForbidden() *UpdateUserJourneyStepForbidden {
	return &UpdateUserJourneyStepForbidden{}
}

/*
UpdateUserJourneyStepForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateUserJourneyStepForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update user journey step forbidden response has a 2xx status code
func (o *UpdateUserJourneyStepForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user journey step forbidden response has a 3xx status code
func (o *UpdateUserJourneyStepForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user journey step forbidden response has a 4xx status code
func (o *UpdateUserJourneyStepForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user journey step forbidden response has a 5xx status code
func (o *UpdateUserJourneyStepForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update user journey step forbidden response a status code equal to that given
func (o *UpdateUserJourneyStepForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update user journey step forbidden response
func (o *UpdateUserJourneyStepForbidden) Code() int {
	return 403
}

func (o *UpdateUserJourneyStepForbidden) Error() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepForbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserJourneyStepForbidden) String() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepForbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserJourneyStepForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateUserJourneyStepForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserJourneyStepNotFound creates a UpdateUserJourneyStepNotFound with default headers values
func NewUpdateUserJourneyStepNotFound() *UpdateUserJourneyStepNotFound {
	return &UpdateUserJourneyStepNotFound{}
}

/*
UpdateUserJourneyStepNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateUserJourneyStepNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update user journey step not found response has a 2xx status code
func (o *UpdateUserJourneyStepNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user journey step not found response has a 3xx status code
func (o *UpdateUserJourneyStepNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user journey step not found response has a 4xx status code
func (o *UpdateUserJourneyStepNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user journey step not found response has a 5xx status code
func (o *UpdateUserJourneyStepNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update user journey step not found response a status code equal to that given
func (o *UpdateUserJourneyStepNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update user journey step not found response
func (o *UpdateUserJourneyStepNotFound) Code() int {
	return 404
}

func (o *UpdateUserJourneyStepNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserJourneyStepNotFound) String() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserJourneyStepNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateUserJourneyStepNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserJourneyStepInternalServerError creates a UpdateUserJourneyStepInternalServerError with default headers values
func NewUpdateUserJourneyStepInternalServerError() *UpdateUserJourneyStepInternalServerError {
	return &UpdateUserJourneyStepInternalServerError{}
}

/*
UpdateUserJourneyStepInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateUserJourneyStepInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update user journey step internal server error response has a 2xx status code
func (o *UpdateUserJourneyStepInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user journey step internal server error response has a 3xx status code
func (o *UpdateUserJourneyStepInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user journey step internal server error response has a 4xx status code
func (o *UpdateUserJourneyStepInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user journey step internal server error response has a 5xx status code
func (o *UpdateUserJourneyStepInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update user journey step internal server error response a status code equal to that given
func (o *UpdateUserJourneyStepInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update user journey step internal server error response
func (o *UpdateUserJourneyStepInternalServerError) Code() int {
	return 500
}

func (o *UpdateUserJourneyStepInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserJourneyStepInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/account/user-journeys/{journey_name}/steps/{step_name}][%d] updateUserJourneyStepInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserJourneyStepInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateUserJourneyStepInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
