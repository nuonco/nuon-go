// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateComponentReleaseReader is a Reader for the CreateComponentRelease structure.
type CreateComponentReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateComponentReleaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateComponentReleaseCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateComponentReleaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateComponentReleaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateComponentReleaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateComponentReleaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateComponentReleaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/components/{component_id}/releases] CreateComponentRelease", response, response.Code())
	}
}

// NewCreateComponentReleaseCreated creates a CreateComponentReleaseCreated with default headers values
func NewCreateComponentReleaseCreated() *CreateComponentReleaseCreated {
	return &CreateComponentReleaseCreated{}
}

/*
CreateComponentReleaseCreated describes a response with status code 201, with default header values.

Created
*/
type CreateComponentReleaseCreated struct {
	Payload *models.AppComponentRelease
}

// IsSuccess returns true when this create component release created response has a 2xx status code
func (o *CreateComponentReleaseCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create component release created response has a 3xx status code
func (o *CreateComponentReleaseCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create component release created response has a 4xx status code
func (o *CreateComponentReleaseCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create component release created response has a 5xx status code
func (o *CreateComponentReleaseCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create component release created response a status code equal to that given
func (o *CreateComponentReleaseCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create component release created response
func (o *CreateComponentReleaseCreated) Code() int {
	return 201
}

func (o *CreateComponentReleaseCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseCreated %s", 201, payload)
}

func (o *CreateComponentReleaseCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseCreated %s", 201, payload)
}

func (o *CreateComponentReleaseCreated) GetPayload() *models.AppComponentRelease {
	return o.Payload
}

func (o *CreateComponentReleaseCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppComponentRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComponentReleaseBadRequest creates a CreateComponentReleaseBadRequest with default headers values
func NewCreateComponentReleaseBadRequest() *CreateComponentReleaseBadRequest {
	return &CreateComponentReleaseBadRequest{}
}

/*
CreateComponentReleaseBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateComponentReleaseBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create component release bad request response has a 2xx status code
func (o *CreateComponentReleaseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create component release bad request response has a 3xx status code
func (o *CreateComponentReleaseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create component release bad request response has a 4xx status code
func (o *CreateComponentReleaseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create component release bad request response has a 5xx status code
func (o *CreateComponentReleaseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create component release bad request response a status code equal to that given
func (o *CreateComponentReleaseBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create component release bad request response
func (o *CreateComponentReleaseBadRequest) Code() int {
	return 400
}

func (o *CreateComponentReleaseBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseBadRequest %s", 400, payload)
}

func (o *CreateComponentReleaseBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseBadRequest %s", 400, payload)
}

func (o *CreateComponentReleaseBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateComponentReleaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComponentReleaseUnauthorized creates a CreateComponentReleaseUnauthorized with default headers values
func NewCreateComponentReleaseUnauthorized() *CreateComponentReleaseUnauthorized {
	return &CreateComponentReleaseUnauthorized{}
}

/*
CreateComponentReleaseUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateComponentReleaseUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create component release unauthorized response has a 2xx status code
func (o *CreateComponentReleaseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create component release unauthorized response has a 3xx status code
func (o *CreateComponentReleaseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create component release unauthorized response has a 4xx status code
func (o *CreateComponentReleaseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create component release unauthorized response has a 5xx status code
func (o *CreateComponentReleaseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create component release unauthorized response a status code equal to that given
func (o *CreateComponentReleaseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create component release unauthorized response
func (o *CreateComponentReleaseUnauthorized) Code() int {
	return 401
}

func (o *CreateComponentReleaseUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseUnauthorized %s", 401, payload)
}

func (o *CreateComponentReleaseUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseUnauthorized %s", 401, payload)
}

func (o *CreateComponentReleaseUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateComponentReleaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComponentReleaseForbidden creates a CreateComponentReleaseForbidden with default headers values
func NewCreateComponentReleaseForbidden() *CreateComponentReleaseForbidden {
	return &CreateComponentReleaseForbidden{}
}

/*
CreateComponentReleaseForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateComponentReleaseForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create component release forbidden response has a 2xx status code
func (o *CreateComponentReleaseForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create component release forbidden response has a 3xx status code
func (o *CreateComponentReleaseForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create component release forbidden response has a 4xx status code
func (o *CreateComponentReleaseForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create component release forbidden response has a 5xx status code
func (o *CreateComponentReleaseForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create component release forbidden response a status code equal to that given
func (o *CreateComponentReleaseForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create component release forbidden response
func (o *CreateComponentReleaseForbidden) Code() int {
	return 403
}

func (o *CreateComponentReleaseForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseForbidden %s", 403, payload)
}

func (o *CreateComponentReleaseForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseForbidden %s", 403, payload)
}

func (o *CreateComponentReleaseForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateComponentReleaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComponentReleaseNotFound creates a CreateComponentReleaseNotFound with default headers values
func NewCreateComponentReleaseNotFound() *CreateComponentReleaseNotFound {
	return &CreateComponentReleaseNotFound{}
}

/*
CreateComponentReleaseNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateComponentReleaseNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create component release not found response has a 2xx status code
func (o *CreateComponentReleaseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create component release not found response has a 3xx status code
func (o *CreateComponentReleaseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create component release not found response has a 4xx status code
func (o *CreateComponentReleaseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create component release not found response has a 5xx status code
func (o *CreateComponentReleaseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create component release not found response a status code equal to that given
func (o *CreateComponentReleaseNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create component release not found response
func (o *CreateComponentReleaseNotFound) Code() int {
	return 404
}

func (o *CreateComponentReleaseNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseNotFound %s", 404, payload)
}

func (o *CreateComponentReleaseNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseNotFound %s", 404, payload)
}

func (o *CreateComponentReleaseNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateComponentReleaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComponentReleaseInternalServerError creates a CreateComponentReleaseInternalServerError with default headers values
func NewCreateComponentReleaseInternalServerError() *CreateComponentReleaseInternalServerError {
	return &CreateComponentReleaseInternalServerError{}
}

/*
CreateComponentReleaseInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateComponentReleaseInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create component release internal server error response has a 2xx status code
func (o *CreateComponentReleaseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create component release internal server error response has a 3xx status code
func (o *CreateComponentReleaseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create component release internal server error response has a 4xx status code
func (o *CreateComponentReleaseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create component release internal server error response has a 5xx status code
func (o *CreateComponentReleaseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create component release internal server error response a status code equal to that given
func (o *CreateComponentReleaseInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create component release internal server error response
func (o *CreateComponentReleaseInternalServerError) Code() int {
	return 500
}

func (o *CreateComponentReleaseInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseInternalServerError %s", 500, payload)
}

func (o *CreateComponentReleaseInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/components/{component_id}/releases][%d] createComponentReleaseInternalServerError %s", 500, payload)
}

func (o *CreateComponentReleaseInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateComponentReleaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
