// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// NewPostV1ComponentsComponentIDReleasesParams creates a new PostV1ComponentsComponentIDReleasesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostV1ComponentsComponentIDReleasesParams() *PostV1ComponentsComponentIDReleasesParams {
	return &PostV1ComponentsComponentIDReleasesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1ComponentsComponentIDReleasesParamsWithTimeout creates a new PostV1ComponentsComponentIDReleasesParams object
// with the ability to set a timeout on a request.
func NewPostV1ComponentsComponentIDReleasesParamsWithTimeout(timeout time.Duration) *PostV1ComponentsComponentIDReleasesParams {
	return &PostV1ComponentsComponentIDReleasesParams{
		timeout: timeout,
	}
}

// NewPostV1ComponentsComponentIDReleasesParamsWithContext creates a new PostV1ComponentsComponentIDReleasesParams object
// with the ability to set a context for a request.
func NewPostV1ComponentsComponentIDReleasesParamsWithContext(ctx context.Context) *PostV1ComponentsComponentIDReleasesParams {
	return &PostV1ComponentsComponentIDReleasesParams{
		Context: ctx,
	}
}

// NewPostV1ComponentsComponentIDReleasesParamsWithHTTPClient creates a new PostV1ComponentsComponentIDReleasesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostV1ComponentsComponentIDReleasesParamsWithHTTPClient(client *http.Client) *PostV1ComponentsComponentIDReleasesParams {
	return &PostV1ComponentsComponentIDReleasesParams{
		HTTPClient: client,
	}
}

/*
PostV1ComponentsComponentIDReleasesParams contains all the parameters to send to the API endpoint

	for the post v1 components component ID releases operation.

	Typically these are written to a http.Request.
*/
type PostV1ComponentsComponentIDReleasesParams struct {

	/* Authorization.

	   bearer auth token
	*/
	Authorization string

	/* XNuonOrgID.

	   org ID
	*/
	XNuonOrgID string

	/* ComponentID.

	   component ID
	*/
	ComponentID string

	/* Req.

	   Input
	*/
	Req *models.ServiceCreateComponentReleaseRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post v1 components component ID releases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1ComponentsComponentIDReleasesParams) WithDefaults() *PostV1ComponentsComponentIDReleasesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post v1 components component ID releases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostV1ComponentsComponentIDReleasesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithTimeout(timeout time.Duration) *PostV1ComponentsComponentIDReleasesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithContext(ctx context.Context) *PostV1ComponentsComponentIDReleasesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithHTTPClient(client *http.Client) *PostV1ComponentsComponentIDReleasesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithAuthorization(authorization string) *PostV1ComponentsComponentIDReleasesParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithXNuonOrgID adds the xNuonOrgID to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithXNuonOrgID(xNuonOrgID string) *PostV1ComponentsComponentIDReleasesParams {
	o.SetXNuonOrgID(xNuonOrgID)
	return o
}

// SetXNuonOrgID adds the xNuonOrgId to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetXNuonOrgID(xNuonOrgID string) {
	o.XNuonOrgID = xNuonOrgID
}

// WithComponentID adds the componentID to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithComponentID(componentID string) *PostV1ComponentsComponentIDReleasesParams {
	o.SetComponentID(componentID)
	return o
}

// SetComponentID adds the componentId to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetComponentID(componentID string) {
	o.ComponentID = componentID
}

// WithReq adds the req to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) WithReq(req *models.ServiceCreateComponentReleaseRequest) *PostV1ComponentsComponentIDReleasesParams {
	o.SetReq(req)
	return o
}

// SetReq adds the req to the post v1 components component ID releases params
func (o *PostV1ComponentsComponentIDReleasesParams) SetReq(req *models.ServiceCreateComponentReleaseRequest) {
	o.Req = req
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1ComponentsComponentIDReleasesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// header param X-Nuon-Org-ID
	if err := r.SetHeaderParam("X-Nuon-Org-ID", o.XNuonOrgID); err != nil {
		return err
	}

	// path param component_id
	if err := r.SetPathParam("component_id", o.ComponentID); err != nil {
		return err
	}
	if o.Req != nil {
		if err := r.SetBodyParam(o.Req); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
