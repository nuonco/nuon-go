// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCompleteUserJourneyParams creates a new CompleteUserJourneyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCompleteUserJourneyParams() *CompleteUserJourneyParams {
	return &CompleteUserJourneyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCompleteUserJourneyParamsWithTimeout creates a new CompleteUserJourneyParams object
// with the ability to set a timeout on a request.
func NewCompleteUserJourneyParamsWithTimeout(timeout time.Duration) *CompleteUserJourneyParams {
	return &CompleteUserJourneyParams{
		timeout: timeout,
	}
}

// NewCompleteUserJourneyParamsWithContext creates a new CompleteUserJourneyParams object
// with the ability to set a context for a request.
func NewCompleteUserJourneyParamsWithContext(ctx context.Context) *CompleteUserJourneyParams {
	return &CompleteUserJourneyParams{
		Context: ctx,
	}
}

// NewCompleteUserJourneyParamsWithHTTPClient creates a new CompleteUserJourneyParams object
// with the ability to set a custom HTTPClient for a request.
func NewCompleteUserJourneyParamsWithHTTPClient(client *http.Client) *CompleteUserJourneyParams {
	return &CompleteUserJourneyParams{
		HTTPClient: client,
	}
}

/*
CompleteUserJourneyParams contains all the parameters to send to the API endpoint

	for the complete user journey operation.

	Typically these are written to a http.Request.
*/
type CompleteUserJourneyParams struct {

	/* JourneyName.

	   Journey name to complete
	*/
	JourneyName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the complete user journey params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CompleteUserJourneyParams) WithDefaults() *CompleteUserJourneyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the complete user journey params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CompleteUserJourneyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the complete user journey params
func (o *CompleteUserJourneyParams) WithTimeout(timeout time.Duration) *CompleteUserJourneyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the complete user journey params
func (o *CompleteUserJourneyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the complete user journey params
func (o *CompleteUserJourneyParams) WithContext(ctx context.Context) *CompleteUserJourneyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the complete user journey params
func (o *CompleteUserJourneyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the complete user journey params
func (o *CompleteUserJourneyParams) WithHTTPClient(client *http.Client) *CompleteUserJourneyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the complete user journey params
func (o *CompleteUserJourneyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithJourneyName adds the journeyName to the complete user journey params
func (o *CompleteUserJourneyParams) WithJourneyName(journeyName string) *CompleteUserJourneyParams {
	o.SetJourneyName(journeyName)
	return o
}

// SetJourneyName adds the journeyName to the complete user journey params
func (o *CompleteUserJourneyParams) SetJourneyName(journeyName string) {
	o.JourneyName = journeyName
}

// WriteToRequest writes these params to a swagger request
func (o *CompleteUserJourneyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param journey_name
	if err := r.SetPathParam("journey_name", o.JourneyName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
