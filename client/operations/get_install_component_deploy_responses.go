// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallComponentDeployReader is a Reader for the GetInstallComponentDeploy structure.
type GetInstallComponentDeployReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallComponentDeployReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallComponentDeployOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallComponentDeployBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallComponentDeployUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallComponentDeployForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallComponentDeployNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallComponentDeployInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}] GetInstallComponentDeploy", response, response.Code())
	}
}

// NewGetInstallComponentDeployOK creates a GetInstallComponentDeployOK with default headers values
func NewGetInstallComponentDeployOK() *GetInstallComponentDeployOK {
	return &GetInstallComponentDeployOK{}
}

/*
GetInstallComponentDeployOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallComponentDeployOK struct {
	Payload *models.AppInstallDeploy
}

// IsSuccess returns true when this get install component deploy o k response has a 2xx status code
func (o *GetInstallComponentDeployOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install component deploy o k response has a 3xx status code
func (o *GetInstallComponentDeployOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component deploy o k response has a 4xx status code
func (o *GetInstallComponentDeployOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install component deploy o k response has a 5xx status code
func (o *GetInstallComponentDeployOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component deploy o k response a status code equal to that given
func (o *GetInstallComponentDeployOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install component deploy o k response
func (o *GetInstallComponentDeployOK) Code() int {
	return 200
}

func (o *GetInstallComponentDeployOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployOK  %+v", 200, o.Payload)
}

func (o *GetInstallComponentDeployOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployOK  %+v", 200, o.Payload)
}

func (o *GetInstallComponentDeployOK) GetPayload() *models.AppInstallDeploy {
	return o.Payload
}

func (o *GetInstallComponentDeployOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallDeploy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentDeployBadRequest creates a GetInstallComponentDeployBadRequest with default headers values
func NewGetInstallComponentDeployBadRequest() *GetInstallComponentDeployBadRequest {
	return &GetInstallComponentDeployBadRequest{}
}

/*
GetInstallComponentDeployBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallComponentDeployBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component deploy bad request response has a 2xx status code
func (o *GetInstallComponentDeployBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component deploy bad request response has a 3xx status code
func (o *GetInstallComponentDeployBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component deploy bad request response has a 4xx status code
func (o *GetInstallComponentDeployBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component deploy bad request response has a 5xx status code
func (o *GetInstallComponentDeployBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component deploy bad request response a status code equal to that given
func (o *GetInstallComponentDeployBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install component deploy bad request response
func (o *GetInstallComponentDeployBadRequest) Code() int {
	return 400
}

func (o *GetInstallComponentDeployBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallComponentDeployBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallComponentDeployBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentDeployBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentDeployUnauthorized creates a GetInstallComponentDeployUnauthorized with default headers values
func NewGetInstallComponentDeployUnauthorized() *GetInstallComponentDeployUnauthorized {
	return &GetInstallComponentDeployUnauthorized{}
}

/*
GetInstallComponentDeployUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallComponentDeployUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component deploy unauthorized response has a 2xx status code
func (o *GetInstallComponentDeployUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component deploy unauthorized response has a 3xx status code
func (o *GetInstallComponentDeployUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component deploy unauthorized response has a 4xx status code
func (o *GetInstallComponentDeployUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component deploy unauthorized response has a 5xx status code
func (o *GetInstallComponentDeployUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component deploy unauthorized response a status code equal to that given
func (o *GetInstallComponentDeployUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install component deploy unauthorized response
func (o *GetInstallComponentDeployUnauthorized) Code() int {
	return 401
}

func (o *GetInstallComponentDeployUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallComponentDeployUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallComponentDeployUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentDeployUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentDeployForbidden creates a GetInstallComponentDeployForbidden with default headers values
func NewGetInstallComponentDeployForbidden() *GetInstallComponentDeployForbidden {
	return &GetInstallComponentDeployForbidden{}
}

/*
GetInstallComponentDeployForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallComponentDeployForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component deploy forbidden response has a 2xx status code
func (o *GetInstallComponentDeployForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component deploy forbidden response has a 3xx status code
func (o *GetInstallComponentDeployForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component deploy forbidden response has a 4xx status code
func (o *GetInstallComponentDeployForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component deploy forbidden response has a 5xx status code
func (o *GetInstallComponentDeployForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component deploy forbidden response a status code equal to that given
func (o *GetInstallComponentDeployForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install component deploy forbidden response
func (o *GetInstallComponentDeployForbidden) Code() int {
	return 403
}

func (o *GetInstallComponentDeployForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallComponentDeployForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallComponentDeployForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentDeployForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentDeployNotFound creates a GetInstallComponentDeployNotFound with default headers values
func NewGetInstallComponentDeployNotFound() *GetInstallComponentDeployNotFound {
	return &GetInstallComponentDeployNotFound{}
}

/*
GetInstallComponentDeployNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallComponentDeployNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component deploy not found response has a 2xx status code
func (o *GetInstallComponentDeployNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component deploy not found response has a 3xx status code
func (o *GetInstallComponentDeployNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component deploy not found response has a 4xx status code
func (o *GetInstallComponentDeployNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component deploy not found response has a 5xx status code
func (o *GetInstallComponentDeployNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component deploy not found response a status code equal to that given
func (o *GetInstallComponentDeployNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install component deploy not found response
func (o *GetInstallComponentDeployNotFound) Code() int {
	return 404
}

func (o *GetInstallComponentDeployNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallComponentDeployNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallComponentDeployNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentDeployNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentDeployInternalServerError creates a GetInstallComponentDeployInternalServerError with default headers values
func NewGetInstallComponentDeployInternalServerError() *GetInstallComponentDeployInternalServerError {
	return &GetInstallComponentDeployInternalServerError{}
}

/*
GetInstallComponentDeployInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallComponentDeployInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component deploy internal server error response has a 2xx status code
func (o *GetInstallComponentDeployInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component deploy internal server error response has a 3xx status code
func (o *GetInstallComponentDeployInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component deploy internal server error response has a 4xx status code
func (o *GetInstallComponentDeployInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install component deploy internal server error response has a 5xx status code
func (o *GetInstallComponentDeployInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install component deploy internal server error response a status code equal to that given
func (o *GetInstallComponentDeployInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install component deploy internal server error response
func (o *GetInstallComponentDeployInternalServerError) Code() int {
	return 500
}

func (o *GetInstallComponentDeployInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallComponentDeployInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/components/{component_id}/deploys/{deploy_id}][%d] getInstallComponentDeployInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallComponentDeployInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentDeployInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
