// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// PostV1AppsReader is a Reader for the PostV1Apps structure.
type PostV1AppsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1AppsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostV1AppsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostV1AppsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostV1AppsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostV1AppsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostV1AppsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV1AppsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/apps/] PostV1Apps", response, response.Code())
	}
}

// NewPostV1AppsCreated creates a PostV1AppsCreated with default headers values
func NewPostV1AppsCreated() *PostV1AppsCreated {
	return &PostV1AppsCreated{}
}

/*
PostV1AppsCreated describes a response with status code 201, with default header values.

Created
*/
type PostV1AppsCreated struct {
	Payload *models.AppApp
}

// IsSuccess returns true when this post v1 apps created response has a 2xx status code
func (o *PostV1AppsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 apps created response has a 3xx status code
func (o *PostV1AppsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps created response has a 4xx status code
func (o *PostV1AppsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 apps created response has a 5xx status code
func (o *PostV1AppsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps created response a status code equal to that given
func (o *PostV1AppsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post v1 apps created response
func (o *PostV1AppsCreated) Code() int {
	return 201
}

func (o *PostV1AppsCreated) Error() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsCreated  %+v", 201, o.Payload)
}

func (o *PostV1AppsCreated) String() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsCreated  %+v", 201, o.Payload)
}

func (o *PostV1AppsCreated) GetPayload() *models.AppApp {
	return o.Payload
}

func (o *PostV1AppsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppApp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsBadRequest creates a PostV1AppsBadRequest with default headers values
func NewPostV1AppsBadRequest() *PostV1AppsBadRequest {
	return &PostV1AppsBadRequest{}
}

/*
PostV1AppsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV1AppsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps bad request response has a 2xx status code
func (o *PostV1AppsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps bad request response has a 3xx status code
func (o *PostV1AppsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps bad request response has a 4xx status code
func (o *PostV1AppsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps bad request response has a 5xx status code
func (o *PostV1AppsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps bad request response a status code equal to that given
func (o *PostV1AppsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v1 apps bad request response
func (o *PostV1AppsBadRequest) Code() int {
	return 400
}

func (o *PostV1AppsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1AppsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsBadRequest  %+v", 400, o.Payload)
}

func (o *PostV1AppsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsUnauthorized creates a PostV1AppsUnauthorized with default headers values
func NewPostV1AppsUnauthorized() *PostV1AppsUnauthorized {
	return &PostV1AppsUnauthorized{}
}

/*
PostV1AppsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostV1AppsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps unauthorized response has a 2xx status code
func (o *PostV1AppsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps unauthorized response has a 3xx status code
func (o *PostV1AppsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps unauthorized response has a 4xx status code
func (o *PostV1AppsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps unauthorized response has a 5xx status code
func (o *PostV1AppsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps unauthorized response a status code equal to that given
func (o *PostV1AppsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post v1 apps unauthorized response
func (o *PostV1AppsUnauthorized) Code() int {
	return 401
}

func (o *PostV1AppsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1AppsUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostV1AppsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsForbidden creates a PostV1AppsForbidden with default headers values
func NewPostV1AppsForbidden() *PostV1AppsForbidden {
	return &PostV1AppsForbidden{}
}

/*
PostV1AppsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostV1AppsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps forbidden response has a 2xx status code
func (o *PostV1AppsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps forbidden response has a 3xx status code
func (o *PostV1AppsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps forbidden response has a 4xx status code
func (o *PostV1AppsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps forbidden response has a 5xx status code
func (o *PostV1AppsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps forbidden response a status code equal to that given
func (o *PostV1AppsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post v1 apps forbidden response
func (o *PostV1AppsForbidden) Code() int {
	return 403
}

func (o *PostV1AppsForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1AppsForbidden) String() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsForbidden  %+v", 403, o.Payload)
}

func (o *PostV1AppsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsNotFound creates a PostV1AppsNotFound with default headers values
func NewPostV1AppsNotFound() *PostV1AppsNotFound {
	return &PostV1AppsNotFound{}
}

/*
PostV1AppsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostV1AppsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps not found response has a 2xx status code
func (o *PostV1AppsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps not found response has a 3xx status code
func (o *PostV1AppsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps not found response has a 4xx status code
func (o *PostV1AppsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 apps not found response has a 5xx status code
func (o *PostV1AppsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 apps not found response a status code equal to that given
func (o *PostV1AppsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 apps not found response
func (o *PostV1AppsNotFound) Code() int {
	return 404
}

func (o *PostV1AppsNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1AppsNotFound) String() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsNotFound  %+v", 404, o.Payload)
}

func (o *PostV1AppsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1AppsInternalServerError creates a PostV1AppsInternalServerError with default headers values
func NewPostV1AppsInternalServerError() *PostV1AppsInternalServerError {
	return &PostV1AppsInternalServerError{}
}

/*
PostV1AppsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV1AppsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this post v1 apps internal server error response has a 2xx status code
func (o *PostV1AppsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 apps internal server error response has a 3xx status code
func (o *PostV1AppsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 apps internal server error response has a 4xx status code
func (o *PostV1AppsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 apps internal server error response has a 5xx status code
func (o *PostV1AppsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v1 apps internal server error response a status code equal to that given
func (o *PostV1AppsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v1 apps internal server error response
func (o *PostV1AppsInternalServerError) Code() int {
	return 500
}

func (o *PostV1AppsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1AppsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/apps/][%d] postV1AppsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostV1AppsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *PostV1AppsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
