// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallerInstallerSlugRenderReader is a Reader for the GetV1InstallerInstallerSlugRender structure.
type GetV1InstallerInstallerSlugRenderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallerInstallerSlugRenderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallerInstallerSlugRenderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallerInstallerSlugRenderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallerInstallerSlugRenderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallerInstallerSlugRenderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallerInstallerSlugRenderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallerInstallerSlugRenderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installer/{installer_slug}/render] GetV1InstallerInstallerSlugRender", response, response.Code())
	}
}

// NewGetV1InstallerInstallerSlugRenderOK creates a GetV1InstallerInstallerSlugRenderOK with default headers values
func NewGetV1InstallerInstallerSlugRenderOK() *GetV1InstallerInstallerSlugRenderOK {
	return &GetV1InstallerInstallerSlugRenderOK{}
}

/*
GetV1InstallerInstallerSlugRenderOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallerInstallerSlugRenderOK struct {
	Payload *models.ServiceAppInstaller
}

// IsSuccess returns true when this get v1 installer installer slug render o k response has a 2xx status code
func (o *GetV1InstallerInstallerSlugRenderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installer installer slug render o k response has a 3xx status code
func (o *GetV1InstallerInstallerSlugRenderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installer installer slug render o k response has a 4xx status code
func (o *GetV1InstallerInstallerSlugRenderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installer installer slug render o k response has a 5xx status code
func (o *GetV1InstallerInstallerSlugRenderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installer installer slug render o k response a status code equal to that given
func (o *GetV1InstallerInstallerSlugRenderOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installer installer slug render o k response
func (o *GetV1InstallerInstallerSlugRenderOK) Code() int {
	return 200
}

func (o *GetV1InstallerInstallerSlugRenderOK) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderOK) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderOK) GetPayload() *models.ServiceAppInstaller {
	return o.Payload
}

func (o *GetV1InstallerInstallerSlugRenderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceAppInstaller)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallerInstallerSlugRenderBadRequest creates a GetV1InstallerInstallerSlugRenderBadRequest with default headers values
func NewGetV1InstallerInstallerSlugRenderBadRequest() *GetV1InstallerInstallerSlugRenderBadRequest {
	return &GetV1InstallerInstallerSlugRenderBadRequest{}
}

/*
GetV1InstallerInstallerSlugRenderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallerInstallerSlugRenderBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installer installer slug render bad request response has a 2xx status code
func (o *GetV1InstallerInstallerSlugRenderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installer installer slug render bad request response has a 3xx status code
func (o *GetV1InstallerInstallerSlugRenderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installer installer slug render bad request response has a 4xx status code
func (o *GetV1InstallerInstallerSlugRenderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installer installer slug render bad request response has a 5xx status code
func (o *GetV1InstallerInstallerSlugRenderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installer installer slug render bad request response a status code equal to that given
func (o *GetV1InstallerInstallerSlugRenderBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installer installer slug render bad request response
func (o *GetV1InstallerInstallerSlugRenderBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallerInstallerSlugRenderBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallerInstallerSlugRenderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallerInstallerSlugRenderUnauthorized creates a GetV1InstallerInstallerSlugRenderUnauthorized with default headers values
func NewGetV1InstallerInstallerSlugRenderUnauthorized() *GetV1InstallerInstallerSlugRenderUnauthorized {
	return &GetV1InstallerInstallerSlugRenderUnauthorized{}
}

/*
GetV1InstallerInstallerSlugRenderUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallerInstallerSlugRenderUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installer installer slug render unauthorized response has a 2xx status code
func (o *GetV1InstallerInstallerSlugRenderUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installer installer slug render unauthorized response has a 3xx status code
func (o *GetV1InstallerInstallerSlugRenderUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installer installer slug render unauthorized response has a 4xx status code
func (o *GetV1InstallerInstallerSlugRenderUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installer installer slug render unauthorized response has a 5xx status code
func (o *GetV1InstallerInstallerSlugRenderUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installer installer slug render unauthorized response a status code equal to that given
func (o *GetV1InstallerInstallerSlugRenderUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installer installer slug render unauthorized response
func (o *GetV1InstallerInstallerSlugRenderUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallerInstallerSlugRenderUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallerInstallerSlugRenderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallerInstallerSlugRenderForbidden creates a GetV1InstallerInstallerSlugRenderForbidden with default headers values
func NewGetV1InstallerInstallerSlugRenderForbidden() *GetV1InstallerInstallerSlugRenderForbidden {
	return &GetV1InstallerInstallerSlugRenderForbidden{}
}

/*
GetV1InstallerInstallerSlugRenderForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallerInstallerSlugRenderForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installer installer slug render forbidden response has a 2xx status code
func (o *GetV1InstallerInstallerSlugRenderForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installer installer slug render forbidden response has a 3xx status code
func (o *GetV1InstallerInstallerSlugRenderForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installer installer slug render forbidden response has a 4xx status code
func (o *GetV1InstallerInstallerSlugRenderForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installer installer slug render forbidden response has a 5xx status code
func (o *GetV1InstallerInstallerSlugRenderForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installer installer slug render forbidden response a status code equal to that given
func (o *GetV1InstallerInstallerSlugRenderForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installer installer slug render forbidden response
func (o *GetV1InstallerInstallerSlugRenderForbidden) Code() int {
	return 403
}

func (o *GetV1InstallerInstallerSlugRenderForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallerInstallerSlugRenderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallerInstallerSlugRenderNotFound creates a GetV1InstallerInstallerSlugRenderNotFound with default headers values
func NewGetV1InstallerInstallerSlugRenderNotFound() *GetV1InstallerInstallerSlugRenderNotFound {
	return &GetV1InstallerInstallerSlugRenderNotFound{}
}

/*
GetV1InstallerInstallerSlugRenderNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallerInstallerSlugRenderNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installer installer slug render not found response has a 2xx status code
func (o *GetV1InstallerInstallerSlugRenderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installer installer slug render not found response has a 3xx status code
func (o *GetV1InstallerInstallerSlugRenderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installer installer slug render not found response has a 4xx status code
func (o *GetV1InstallerInstallerSlugRenderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installer installer slug render not found response has a 5xx status code
func (o *GetV1InstallerInstallerSlugRenderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installer installer slug render not found response a status code equal to that given
func (o *GetV1InstallerInstallerSlugRenderNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installer installer slug render not found response
func (o *GetV1InstallerInstallerSlugRenderNotFound) Code() int {
	return 404
}

func (o *GetV1InstallerInstallerSlugRenderNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallerInstallerSlugRenderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallerInstallerSlugRenderInternalServerError creates a GetV1InstallerInstallerSlugRenderInternalServerError with default headers values
func NewGetV1InstallerInstallerSlugRenderInternalServerError() *GetV1InstallerInstallerSlugRenderInternalServerError {
	return &GetV1InstallerInstallerSlugRenderInternalServerError{}
}

/*
GetV1InstallerInstallerSlugRenderInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallerInstallerSlugRenderInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installer installer slug render internal server error response has a 2xx status code
func (o *GetV1InstallerInstallerSlugRenderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installer installer slug render internal server error response has a 3xx status code
func (o *GetV1InstallerInstallerSlugRenderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installer installer slug render internal server error response has a 4xx status code
func (o *GetV1InstallerInstallerSlugRenderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installer installer slug render internal server error response has a 5xx status code
func (o *GetV1InstallerInstallerSlugRenderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installer installer slug render internal server error response a status code equal to that given
func (o *GetV1InstallerInstallerSlugRenderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installer installer slug render internal server error response
func (o *GetV1InstallerInstallerSlugRenderInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallerInstallerSlugRenderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installer/{installer_slug}/render][%d] getV1InstallerInstallerSlugRenderInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallerInstallerSlugRenderInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallerInstallerSlugRenderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
