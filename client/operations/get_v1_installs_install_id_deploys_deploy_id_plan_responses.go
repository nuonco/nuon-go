// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetV1InstallsInstallIDDeploysDeployIDPlanReader is a Reader for the GetV1InstallsInstallIDDeploysDeployIDPlan structure.
type GetV1InstallsInstallIDDeploysDeployIDPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1InstallsInstallIDDeploysDeployIDPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetV1InstallsInstallIDDeploysDeployIDPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetV1InstallsInstallIDDeploysDeployIDPlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetV1InstallsInstallIDDeploysDeployIDPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan] GetV1InstallsInstallIDDeploysDeployIDPlan", response, response.Code())
	}
}

// NewGetV1InstallsInstallIDDeploysDeployIDPlanOK creates a GetV1InstallsInstallIDDeploysDeployIDPlanOK with default headers values
func NewGetV1InstallsInstallIDDeploysDeployIDPlanOK() *GetV1InstallsInstallIDDeploysDeployIDPlanOK {
	return &GetV1InstallsInstallIDDeploysDeployIDPlanOK{}
}

/*
GetV1InstallsInstallIDDeploysDeployIDPlanOK describes a response with status code 200, with default header values.

OK
*/
type GetV1InstallsInstallIDDeploysDeployIDPlanOK struct {
	Payload *models.Planv1Plan
}

// IsSuccess returns true when this get v1 installs install Id deploys deploy Id plan o k response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 installs install Id deploys deploy Id plan o k response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys deploy Id plan o k response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id deploys deploy Id plan o k response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys deploy Id plan o k response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 installs install Id deploys deploy Id plan o k response
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) Code() int {
	return 200
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanOK  %+v", 200, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) GetPayload() *models.Planv1Plan {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Planv1Plan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysDeployIDPlanBadRequest creates a GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest with default headers values
func NewGetV1InstallsInstallIDDeploysDeployIDPlanBadRequest() *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest {
	return &GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest{}
}

/*
GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys deploy Id plan bad request response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys deploy Id plan bad request response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys deploy Id plan bad request response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys deploy Id plan bad request response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys deploy Id plan bad request response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v1 installs install Id deploys deploy Id plan bad request response
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) Code() int {
	return 400
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized creates a GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized with default headers values
func NewGetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized() *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized {
	return &GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized{}
}

/*
GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys deploy Id plan unauthorized response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys deploy Id plan unauthorized response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys deploy Id plan unauthorized response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys deploy Id plan unauthorized response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys deploy Id plan unauthorized response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get v1 installs install Id deploys deploy Id plan unauthorized response
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) Code() int {
	return 401
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysDeployIDPlanForbidden creates a GetV1InstallsInstallIDDeploysDeployIDPlanForbidden with default headers values
func NewGetV1InstallsInstallIDDeploysDeployIDPlanForbidden() *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden {
	return &GetV1InstallsInstallIDDeploysDeployIDPlanForbidden{}
}

/*
GetV1InstallsInstallIDDeploysDeployIDPlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetV1InstallsInstallIDDeploysDeployIDPlanForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys deploy Id plan forbidden response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys deploy Id plan forbidden response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys deploy Id plan forbidden response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys deploy Id plan forbidden response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys deploy Id plan forbidden response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get v1 installs install Id deploys deploy Id plan forbidden response
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) Code() int {
	return 403
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanForbidden  %+v", 403, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysDeployIDPlanNotFound creates a GetV1InstallsInstallIDDeploysDeployIDPlanNotFound with default headers values
func NewGetV1InstallsInstallIDDeploysDeployIDPlanNotFound() *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound {
	return &GetV1InstallsInstallIDDeploysDeployIDPlanNotFound{}
}

/*
GetV1InstallsInstallIDDeploysDeployIDPlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetV1InstallsInstallIDDeploysDeployIDPlanNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys deploy Id plan not found response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys deploy Id plan not found response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys deploy Id plan not found response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 installs install Id deploys deploy Id plan not found response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 installs install Id deploys deploy Id plan not found response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 installs install Id deploys deploy Id plan not found response
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) Code() int {
	return 404
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanNotFound  %+v", 404, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError creates a GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError with default headers values
func NewGetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError() *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError {
	return &GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError{}
}

/*
GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get v1 installs install Id deploys deploy Id plan internal server error response has a 2xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 installs install Id deploys deploy Id plan internal server error response has a 3xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 installs install Id deploys deploy Id plan internal server error response has a 4xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 installs install Id deploys deploy Id plan internal server error response has a 5xx status code
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v1 installs install Id deploys deploy Id plan internal server error response a status code equal to that given
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v1 installs install Id deploys deploy Id plan internal server error response
func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) Code() int {
	return 500
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/plan][%d] getV1InstallsInstallIdDeploysDeployIdPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetV1InstallsInstallIDDeploysDeployIDPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
