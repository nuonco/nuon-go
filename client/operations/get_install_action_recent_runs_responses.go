// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionRecentRunsReader is a Reader for the GetInstallActionRecentRuns structure.
type GetInstallActionRecentRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionRecentRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionRecentRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionRecentRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionRecentRunsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionRecentRunsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionRecentRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionRecentRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs] GetInstallActionRecentRuns", response, response.Code())
	}
}

// NewGetInstallActionRecentRunsOK creates a GetInstallActionRecentRunsOK with default headers values
func NewGetInstallActionRecentRunsOK() *GetInstallActionRecentRunsOK {
	return &GetInstallActionRecentRunsOK{}
}

/*
GetInstallActionRecentRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionRecentRunsOK struct {
	Payload *models.AppInstallActionWorkflow
}

// IsSuccess returns true when this get install action recent runs o k response has a 2xx status code
func (o *GetInstallActionRecentRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install action recent runs o k response has a 3xx status code
func (o *GetInstallActionRecentRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action recent runs o k response has a 4xx status code
func (o *GetInstallActionRecentRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action recent runs o k response has a 5xx status code
func (o *GetInstallActionRecentRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action recent runs o k response a status code equal to that given
func (o *GetInstallActionRecentRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install action recent runs o k response
func (o *GetInstallActionRecentRunsOK) Code() int {
	return 200
}

func (o *GetInstallActionRecentRunsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRecentRunsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionRecentRunsOK) GetPayload() *models.AppInstallActionWorkflow {
	return o.Payload
}

func (o *GetInstallActionRecentRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallActionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRecentRunsBadRequest creates a GetInstallActionRecentRunsBadRequest with default headers values
func NewGetInstallActionRecentRunsBadRequest() *GetInstallActionRecentRunsBadRequest {
	return &GetInstallActionRecentRunsBadRequest{}
}

/*
GetInstallActionRecentRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionRecentRunsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action recent runs bad request response has a 2xx status code
func (o *GetInstallActionRecentRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action recent runs bad request response has a 3xx status code
func (o *GetInstallActionRecentRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action recent runs bad request response has a 4xx status code
func (o *GetInstallActionRecentRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action recent runs bad request response has a 5xx status code
func (o *GetInstallActionRecentRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action recent runs bad request response a status code equal to that given
func (o *GetInstallActionRecentRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install action recent runs bad request response
func (o *GetInstallActionRecentRunsBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionRecentRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRecentRunsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionRecentRunsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRecentRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRecentRunsUnauthorized creates a GetInstallActionRecentRunsUnauthorized with default headers values
func NewGetInstallActionRecentRunsUnauthorized() *GetInstallActionRecentRunsUnauthorized {
	return &GetInstallActionRecentRunsUnauthorized{}
}

/*
GetInstallActionRecentRunsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionRecentRunsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action recent runs unauthorized response has a 2xx status code
func (o *GetInstallActionRecentRunsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action recent runs unauthorized response has a 3xx status code
func (o *GetInstallActionRecentRunsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action recent runs unauthorized response has a 4xx status code
func (o *GetInstallActionRecentRunsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action recent runs unauthorized response has a 5xx status code
func (o *GetInstallActionRecentRunsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action recent runs unauthorized response a status code equal to that given
func (o *GetInstallActionRecentRunsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install action recent runs unauthorized response
func (o *GetInstallActionRecentRunsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionRecentRunsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRecentRunsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionRecentRunsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRecentRunsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRecentRunsForbidden creates a GetInstallActionRecentRunsForbidden with default headers values
func NewGetInstallActionRecentRunsForbidden() *GetInstallActionRecentRunsForbidden {
	return &GetInstallActionRecentRunsForbidden{}
}

/*
GetInstallActionRecentRunsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionRecentRunsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action recent runs forbidden response has a 2xx status code
func (o *GetInstallActionRecentRunsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action recent runs forbidden response has a 3xx status code
func (o *GetInstallActionRecentRunsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action recent runs forbidden response has a 4xx status code
func (o *GetInstallActionRecentRunsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action recent runs forbidden response has a 5xx status code
func (o *GetInstallActionRecentRunsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action recent runs forbidden response a status code equal to that given
func (o *GetInstallActionRecentRunsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install action recent runs forbidden response
func (o *GetInstallActionRecentRunsForbidden) Code() int {
	return 403
}

func (o *GetInstallActionRecentRunsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRecentRunsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionRecentRunsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRecentRunsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRecentRunsNotFound creates a GetInstallActionRecentRunsNotFound with default headers values
func NewGetInstallActionRecentRunsNotFound() *GetInstallActionRecentRunsNotFound {
	return &GetInstallActionRecentRunsNotFound{}
}

/*
GetInstallActionRecentRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionRecentRunsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action recent runs not found response has a 2xx status code
func (o *GetInstallActionRecentRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action recent runs not found response has a 3xx status code
func (o *GetInstallActionRecentRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action recent runs not found response has a 4xx status code
func (o *GetInstallActionRecentRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action recent runs not found response has a 5xx status code
func (o *GetInstallActionRecentRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action recent runs not found response a status code equal to that given
func (o *GetInstallActionRecentRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install action recent runs not found response
func (o *GetInstallActionRecentRunsNotFound) Code() int {
	return 404
}

func (o *GetInstallActionRecentRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRecentRunsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionRecentRunsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRecentRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionRecentRunsInternalServerError creates a GetInstallActionRecentRunsInternalServerError with default headers values
func NewGetInstallActionRecentRunsInternalServerError() *GetInstallActionRecentRunsInternalServerError {
	return &GetInstallActionRecentRunsInternalServerError{}
}

/*
GetInstallActionRecentRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionRecentRunsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action recent runs internal server error response has a 2xx status code
func (o *GetInstallActionRecentRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action recent runs internal server error response has a 3xx status code
func (o *GetInstallActionRecentRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action recent runs internal server error response has a 4xx status code
func (o *GetInstallActionRecentRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action recent runs internal server error response has a 5xx status code
func (o *GetInstallActionRecentRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install action recent runs internal server error response a status code equal to that given
func (o *GetInstallActionRecentRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install action recent runs internal server error response
func (o *GetInstallActionRecentRunsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionRecentRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRecentRunsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}/recent-runs][%d] getInstallActionRecentRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionRecentRunsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionRecentRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
