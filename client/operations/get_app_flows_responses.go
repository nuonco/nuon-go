// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppFlowsReader is a Reader for the GetAppFlows structure.
type GetAppFlowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppFlowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppFlowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppFlowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppFlowsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppFlowsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppFlowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppFlowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/flows] GetAppFlows", response, response.Code())
	}
}

// NewGetAppFlowsOK creates a GetAppFlowsOK with default headers values
func NewGetAppFlowsOK() *GetAppFlowsOK {
	return &GetAppFlowsOK{}
}

/*
GetAppFlowsOK describes a response with status code 200, with default header values.

OK
*/
type GetAppFlowsOK struct {
	Payload []*models.AppInstallWorkflow
}

// IsSuccess returns true when this get app flows o k response has a 2xx status code
func (o *GetAppFlowsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app flows o k response has a 3xx status code
func (o *GetAppFlowsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app flows o k response has a 4xx status code
func (o *GetAppFlowsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app flows o k response has a 5xx status code
func (o *GetAppFlowsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app flows o k response a status code equal to that given
func (o *GetAppFlowsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app flows o k response
func (o *GetAppFlowsOK) Code() int {
	return 200
}

func (o *GetAppFlowsOK) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsOK  %+v", 200, o.Payload)
}

func (o *GetAppFlowsOK) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsOK  %+v", 200, o.Payload)
}

func (o *GetAppFlowsOK) GetPayload() []*models.AppInstallWorkflow {
	return o.Payload
}

func (o *GetAppFlowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppFlowsBadRequest creates a GetAppFlowsBadRequest with default headers values
func NewGetAppFlowsBadRequest() *GetAppFlowsBadRequest {
	return &GetAppFlowsBadRequest{}
}

/*
GetAppFlowsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppFlowsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app flows bad request response has a 2xx status code
func (o *GetAppFlowsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app flows bad request response has a 3xx status code
func (o *GetAppFlowsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app flows bad request response has a 4xx status code
func (o *GetAppFlowsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app flows bad request response has a 5xx status code
func (o *GetAppFlowsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app flows bad request response a status code equal to that given
func (o *GetAppFlowsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app flows bad request response
func (o *GetAppFlowsBadRequest) Code() int {
	return 400
}

func (o *GetAppFlowsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppFlowsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppFlowsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppFlowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppFlowsUnauthorized creates a GetAppFlowsUnauthorized with default headers values
func NewGetAppFlowsUnauthorized() *GetAppFlowsUnauthorized {
	return &GetAppFlowsUnauthorized{}
}

/*
GetAppFlowsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppFlowsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app flows unauthorized response has a 2xx status code
func (o *GetAppFlowsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app flows unauthorized response has a 3xx status code
func (o *GetAppFlowsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app flows unauthorized response has a 4xx status code
func (o *GetAppFlowsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app flows unauthorized response has a 5xx status code
func (o *GetAppFlowsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app flows unauthorized response a status code equal to that given
func (o *GetAppFlowsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app flows unauthorized response
func (o *GetAppFlowsUnauthorized) Code() int {
	return 401
}

func (o *GetAppFlowsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppFlowsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppFlowsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppFlowsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppFlowsForbidden creates a GetAppFlowsForbidden with default headers values
func NewGetAppFlowsForbidden() *GetAppFlowsForbidden {
	return &GetAppFlowsForbidden{}
}

/*
GetAppFlowsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppFlowsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app flows forbidden response has a 2xx status code
func (o *GetAppFlowsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app flows forbidden response has a 3xx status code
func (o *GetAppFlowsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app flows forbidden response has a 4xx status code
func (o *GetAppFlowsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app flows forbidden response has a 5xx status code
func (o *GetAppFlowsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app flows forbidden response a status code equal to that given
func (o *GetAppFlowsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app flows forbidden response
func (o *GetAppFlowsForbidden) Code() int {
	return 403
}

func (o *GetAppFlowsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsForbidden  %+v", 403, o.Payload)
}

func (o *GetAppFlowsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsForbidden  %+v", 403, o.Payload)
}

func (o *GetAppFlowsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppFlowsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppFlowsNotFound creates a GetAppFlowsNotFound with default headers values
func NewGetAppFlowsNotFound() *GetAppFlowsNotFound {
	return &GetAppFlowsNotFound{}
}

/*
GetAppFlowsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppFlowsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app flows not found response has a 2xx status code
func (o *GetAppFlowsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app flows not found response has a 3xx status code
func (o *GetAppFlowsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app flows not found response has a 4xx status code
func (o *GetAppFlowsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app flows not found response has a 5xx status code
func (o *GetAppFlowsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app flows not found response a status code equal to that given
func (o *GetAppFlowsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app flows not found response
func (o *GetAppFlowsNotFound) Code() int {
	return 404
}

func (o *GetAppFlowsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsNotFound  %+v", 404, o.Payload)
}

func (o *GetAppFlowsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsNotFound  %+v", 404, o.Payload)
}

func (o *GetAppFlowsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppFlowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppFlowsInternalServerError creates a GetAppFlowsInternalServerError with default headers values
func NewGetAppFlowsInternalServerError() *GetAppFlowsInternalServerError {
	return &GetAppFlowsInternalServerError{}
}

/*
GetAppFlowsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppFlowsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app flows internal server error response has a 2xx status code
func (o *GetAppFlowsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app flows internal server error response has a 3xx status code
func (o *GetAppFlowsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app flows internal server error response has a 4xx status code
func (o *GetAppFlowsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app flows internal server error response has a 5xx status code
func (o *GetAppFlowsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app flows internal server error response a status code equal to that given
func (o *GetAppFlowsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app flows internal server error response
func (o *GetAppFlowsInternalServerError) Code() int {
	return 500
}

func (o *GetAppFlowsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppFlowsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/apps/{app_id}/flows][%d] getAppFlowsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppFlowsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppFlowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
