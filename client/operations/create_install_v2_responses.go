// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateInstallV2Reader is a Reader for the CreateInstallV2 structure.
type CreateInstallV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInstallV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInstallV2Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInstallV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInstallV2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInstallV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateInstallV2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInstallV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/installs] CreateInstallV2", response, response.Code())
	}
}

// NewCreateInstallV2Created creates a CreateInstallV2Created with default headers values
func NewCreateInstallV2Created() *CreateInstallV2Created {
	return &CreateInstallV2Created{}
}

/*
CreateInstallV2Created describes a response with status code 201, with default header values.

Created
*/
type CreateInstallV2Created struct {
	Payload *models.AppInstall
}

// IsSuccess returns true when this create install v2 created response has a 2xx status code
func (o *CreateInstallV2Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create install v2 created response has a 3xx status code
func (o *CreateInstallV2Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install v2 created response has a 4xx status code
func (o *CreateInstallV2Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create install v2 created response has a 5xx status code
func (o *CreateInstallV2Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create install v2 created response a status code equal to that given
func (o *CreateInstallV2Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create install v2 created response
func (o *CreateInstallV2Created) Code() int {
	return 201
}

func (o *CreateInstallV2Created) Error() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2Created  %+v", 201, o.Payload)
}

func (o *CreateInstallV2Created) String() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2Created  %+v", 201, o.Payload)
}

func (o *CreateInstallV2Created) GetPayload() *models.AppInstall {
	return o.Payload
}

func (o *CreateInstallV2Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallV2BadRequest creates a CreateInstallV2BadRequest with default headers values
func NewCreateInstallV2BadRequest() *CreateInstallV2BadRequest {
	return &CreateInstallV2BadRequest{}
}

/*
CreateInstallV2BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateInstallV2BadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install v2 bad request response has a 2xx status code
func (o *CreateInstallV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install v2 bad request response has a 3xx status code
func (o *CreateInstallV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install v2 bad request response has a 4xx status code
func (o *CreateInstallV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install v2 bad request response has a 5xx status code
func (o *CreateInstallV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create install v2 bad request response a status code equal to that given
func (o *CreateInstallV2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create install v2 bad request response
func (o *CreateInstallV2BadRequest) Code() int {
	return 400
}

func (o *CreateInstallV2BadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2BadRequest  %+v", 400, o.Payload)
}

func (o *CreateInstallV2BadRequest) String() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2BadRequest  %+v", 400, o.Payload)
}

func (o *CreateInstallV2BadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallV2Unauthorized creates a CreateInstallV2Unauthorized with default headers values
func NewCreateInstallV2Unauthorized() *CreateInstallV2Unauthorized {
	return &CreateInstallV2Unauthorized{}
}

/*
CreateInstallV2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateInstallV2Unauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install v2 unauthorized response has a 2xx status code
func (o *CreateInstallV2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install v2 unauthorized response has a 3xx status code
func (o *CreateInstallV2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install v2 unauthorized response has a 4xx status code
func (o *CreateInstallV2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install v2 unauthorized response has a 5xx status code
func (o *CreateInstallV2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create install v2 unauthorized response a status code equal to that given
func (o *CreateInstallV2Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create install v2 unauthorized response
func (o *CreateInstallV2Unauthorized) Code() int {
	return 401
}

func (o *CreateInstallV2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2Unauthorized  %+v", 401, o.Payload)
}

func (o *CreateInstallV2Unauthorized) String() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2Unauthorized  %+v", 401, o.Payload)
}

func (o *CreateInstallV2Unauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallV2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallV2Forbidden creates a CreateInstallV2Forbidden with default headers values
func NewCreateInstallV2Forbidden() *CreateInstallV2Forbidden {
	return &CreateInstallV2Forbidden{}
}

/*
CreateInstallV2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateInstallV2Forbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install v2 forbidden response has a 2xx status code
func (o *CreateInstallV2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install v2 forbidden response has a 3xx status code
func (o *CreateInstallV2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install v2 forbidden response has a 4xx status code
func (o *CreateInstallV2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install v2 forbidden response has a 5xx status code
func (o *CreateInstallV2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create install v2 forbidden response a status code equal to that given
func (o *CreateInstallV2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create install v2 forbidden response
func (o *CreateInstallV2Forbidden) Code() int {
	return 403
}

func (o *CreateInstallV2Forbidden) Error() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2Forbidden  %+v", 403, o.Payload)
}

func (o *CreateInstallV2Forbidden) String() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2Forbidden  %+v", 403, o.Payload)
}

func (o *CreateInstallV2Forbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallV2NotFound creates a CreateInstallV2NotFound with default headers values
func NewCreateInstallV2NotFound() *CreateInstallV2NotFound {
	return &CreateInstallV2NotFound{}
}

/*
CreateInstallV2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateInstallV2NotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install v2 not found response has a 2xx status code
func (o *CreateInstallV2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install v2 not found response has a 3xx status code
func (o *CreateInstallV2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install v2 not found response has a 4xx status code
func (o *CreateInstallV2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create install v2 not found response has a 5xx status code
func (o *CreateInstallV2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create install v2 not found response a status code equal to that given
func (o *CreateInstallV2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create install v2 not found response
func (o *CreateInstallV2NotFound) Code() int {
	return 404
}

func (o *CreateInstallV2NotFound) Error() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2NotFound  %+v", 404, o.Payload)
}

func (o *CreateInstallV2NotFound) String() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2NotFound  %+v", 404, o.Payload)
}

func (o *CreateInstallV2NotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallV2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInstallV2InternalServerError creates a CreateInstallV2InternalServerError with default headers values
func NewCreateInstallV2InternalServerError() *CreateInstallV2InternalServerError {
	return &CreateInstallV2InternalServerError{}
}

/*
CreateInstallV2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateInstallV2InternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create install v2 internal server error response has a 2xx status code
func (o *CreateInstallV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create install v2 internal server error response has a 3xx status code
func (o *CreateInstallV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create install v2 internal server error response has a 4xx status code
func (o *CreateInstallV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create install v2 internal server error response has a 5xx status code
func (o *CreateInstallV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create install v2 internal server error response a status code equal to that given
func (o *CreateInstallV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create install v2 internal server error response
func (o *CreateInstallV2InternalServerError) Code() int {
	return 500
}

func (o *CreateInstallV2InternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2InternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInstallV2InternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/installs][%d] createInstallV2InternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInstallV2InternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateInstallV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
