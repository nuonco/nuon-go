// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppStatusReader is a Reader for the GetAppStatus structure.
type GetAppStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/status] GetAppStatus", response, response.Code())
	}
}

// NewGetAppStatusOK creates a GetAppStatusOK with default headers values
func NewGetAppStatusOK() *GetAppStatusOK {
	return &GetAppStatusOK{}
}

/*
GetAppStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetAppStatusOK struct {
	Payload *models.AppStatus
}

// IsSuccess returns true when this get app status o k response has a 2xx status code
func (o *GetAppStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app status o k response has a 3xx status code
func (o *GetAppStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app status o k response has a 4xx status code
func (o *GetAppStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app status o k response has a 5xx status code
func (o *GetAppStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app status o k response a status code equal to that given
func (o *GetAppStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app status o k response
func (o *GetAppStatusOK) Code() int {
	return 200
}

func (o *GetAppStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusOK %s", 200, payload)
}

func (o *GetAppStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusOK %s", 200, payload)
}

func (o *GetAppStatusOK) GetPayload() *models.AppStatus {
	return o.Payload
}

func (o *GetAppStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppStatusBadRequest creates a GetAppStatusBadRequest with default headers values
func NewGetAppStatusBadRequest() *GetAppStatusBadRequest {
	return &GetAppStatusBadRequest{}
}

/*
GetAppStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppStatusBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app status bad request response has a 2xx status code
func (o *GetAppStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app status bad request response has a 3xx status code
func (o *GetAppStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app status bad request response has a 4xx status code
func (o *GetAppStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app status bad request response has a 5xx status code
func (o *GetAppStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app status bad request response a status code equal to that given
func (o *GetAppStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app status bad request response
func (o *GetAppStatusBadRequest) Code() int {
	return 400
}

func (o *GetAppStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusBadRequest %s", 400, payload)
}

func (o *GetAppStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusBadRequest %s", 400, payload)
}

func (o *GetAppStatusBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppStatusUnauthorized creates a GetAppStatusUnauthorized with default headers values
func NewGetAppStatusUnauthorized() *GetAppStatusUnauthorized {
	return &GetAppStatusUnauthorized{}
}

/*
GetAppStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppStatusUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app status unauthorized response has a 2xx status code
func (o *GetAppStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app status unauthorized response has a 3xx status code
func (o *GetAppStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app status unauthorized response has a 4xx status code
func (o *GetAppStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app status unauthorized response has a 5xx status code
func (o *GetAppStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app status unauthorized response a status code equal to that given
func (o *GetAppStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app status unauthorized response
func (o *GetAppStatusUnauthorized) Code() int {
	return 401
}

func (o *GetAppStatusUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusUnauthorized %s", 401, payload)
}

func (o *GetAppStatusUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusUnauthorized %s", 401, payload)
}

func (o *GetAppStatusUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppStatusForbidden creates a GetAppStatusForbidden with default headers values
func NewGetAppStatusForbidden() *GetAppStatusForbidden {
	return &GetAppStatusForbidden{}
}

/*
GetAppStatusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppStatusForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app status forbidden response has a 2xx status code
func (o *GetAppStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app status forbidden response has a 3xx status code
func (o *GetAppStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app status forbidden response has a 4xx status code
func (o *GetAppStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app status forbidden response has a 5xx status code
func (o *GetAppStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app status forbidden response a status code equal to that given
func (o *GetAppStatusForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app status forbidden response
func (o *GetAppStatusForbidden) Code() int {
	return 403
}

func (o *GetAppStatusForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusForbidden %s", 403, payload)
}

func (o *GetAppStatusForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusForbidden %s", 403, payload)
}

func (o *GetAppStatusForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppStatusNotFound creates a GetAppStatusNotFound with default headers values
func NewGetAppStatusNotFound() *GetAppStatusNotFound {
	return &GetAppStatusNotFound{}
}

/*
GetAppStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppStatusNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app status not found response has a 2xx status code
func (o *GetAppStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app status not found response has a 3xx status code
func (o *GetAppStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app status not found response has a 4xx status code
func (o *GetAppStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app status not found response has a 5xx status code
func (o *GetAppStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app status not found response a status code equal to that given
func (o *GetAppStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app status not found response
func (o *GetAppStatusNotFound) Code() int {
	return 404
}

func (o *GetAppStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusNotFound %s", 404, payload)
}

func (o *GetAppStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusNotFound %s", 404, payload)
}

func (o *GetAppStatusNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppStatusInternalServerError creates a GetAppStatusInternalServerError with default headers values
func NewGetAppStatusInternalServerError() *GetAppStatusInternalServerError {
	return &GetAppStatusInternalServerError{}
}

/*
GetAppStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppStatusInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app status internal server error response has a 2xx status code
func (o *GetAppStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app status internal server error response has a 3xx status code
func (o *GetAppStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app status internal server error response has a 4xx status code
func (o *GetAppStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app status internal server error response has a 5xx status code
func (o *GetAppStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app status internal server error response a status code equal to that given
func (o *GetAppStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app status internal server error response
func (o *GetAppStatusInternalServerError) Code() int {
	return 500
}

func (o *GetAppStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusInternalServerError %s", 500, payload)
}

func (o *GetAppStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/status][%d] getAppStatusInternalServerError %s", 500, payload)
}

func (o *GetAppStatusInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
