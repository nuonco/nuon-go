// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallSandboxRunV2Reader is a Reader for the GetInstallSandboxRunV2 structure.
type GetInstallSandboxRunV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallSandboxRunV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallSandboxRunV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallSandboxRunV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallSandboxRunV2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallSandboxRunV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallSandboxRunV2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallSandboxRunV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}] GetInstallSandboxRunV2", response, response.Code())
	}
}

// NewGetInstallSandboxRunV2OK creates a GetInstallSandboxRunV2OK with default headers values
func NewGetInstallSandboxRunV2OK() *GetInstallSandboxRunV2OK {
	return &GetInstallSandboxRunV2OK{}
}

/*
GetInstallSandboxRunV2OK describes a response with status code 200, with default header values.

OK
*/
type GetInstallSandboxRunV2OK struct {
	Payload *models.AppInstallSandboxRun
}

// IsSuccess returns true when this get install sandbox run v2 o k response has a 2xx status code
func (o *GetInstallSandboxRunV2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install sandbox run v2 o k response has a 3xx status code
func (o *GetInstallSandboxRunV2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run v2 o k response has a 4xx status code
func (o *GetInstallSandboxRunV2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox run v2 o k response has a 5xx status code
func (o *GetInstallSandboxRunV2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run v2 o k response a status code equal to that given
func (o *GetInstallSandboxRunV2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install sandbox run v2 o k response
func (o *GetInstallSandboxRunV2OK) Code() int {
	return 200
}

func (o *GetInstallSandboxRunV2OK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2OK  %+v", 200, o.Payload)
}

func (o *GetInstallSandboxRunV2OK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2OK  %+v", 200, o.Payload)
}

func (o *GetInstallSandboxRunV2OK) GetPayload() *models.AppInstallSandboxRun {
	return o.Payload
}

func (o *GetInstallSandboxRunV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallSandboxRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunV2BadRequest creates a GetInstallSandboxRunV2BadRequest with default headers values
func NewGetInstallSandboxRunV2BadRequest() *GetInstallSandboxRunV2BadRequest {
	return &GetInstallSandboxRunV2BadRequest{}
}

/*
GetInstallSandboxRunV2BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallSandboxRunV2BadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run v2 bad request response has a 2xx status code
func (o *GetInstallSandboxRunV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run v2 bad request response has a 3xx status code
func (o *GetInstallSandboxRunV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run v2 bad request response has a 4xx status code
func (o *GetInstallSandboxRunV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run v2 bad request response has a 5xx status code
func (o *GetInstallSandboxRunV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run v2 bad request response a status code equal to that given
func (o *GetInstallSandboxRunV2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install sandbox run v2 bad request response
func (o *GetInstallSandboxRunV2BadRequest) Code() int {
	return 400
}

func (o *GetInstallSandboxRunV2BadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2BadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallSandboxRunV2BadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2BadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallSandboxRunV2BadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunV2Unauthorized creates a GetInstallSandboxRunV2Unauthorized with default headers values
func NewGetInstallSandboxRunV2Unauthorized() *GetInstallSandboxRunV2Unauthorized {
	return &GetInstallSandboxRunV2Unauthorized{}
}

/*
GetInstallSandboxRunV2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallSandboxRunV2Unauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run v2 unauthorized response has a 2xx status code
func (o *GetInstallSandboxRunV2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run v2 unauthorized response has a 3xx status code
func (o *GetInstallSandboxRunV2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run v2 unauthorized response has a 4xx status code
func (o *GetInstallSandboxRunV2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run v2 unauthorized response has a 5xx status code
func (o *GetInstallSandboxRunV2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run v2 unauthorized response a status code equal to that given
func (o *GetInstallSandboxRunV2Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install sandbox run v2 unauthorized response
func (o *GetInstallSandboxRunV2Unauthorized) Code() int {
	return 401
}

func (o *GetInstallSandboxRunV2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2Unauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallSandboxRunV2Unauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2Unauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallSandboxRunV2Unauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunV2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunV2Forbidden creates a GetInstallSandboxRunV2Forbidden with default headers values
func NewGetInstallSandboxRunV2Forbidden() *GetInstallSandboxRunV2Forbidden {
	return &GetInstallSandboxRunV2Forbidden{}
}

/*
GetInstallSandboxRunV2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallSandboxRunV2Forbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run v2 forbidden response has a 2xx status code
func (o *GetInstallSandboxRunV2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run v2 forbidden response has a 3xx status code
func (o *GetInstallSandboxRunV2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run v2 forbidden response has a 4xx status code
func (o *GetInstallSandboxRunV2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run v2 forbidden response has a 5xx status code
func (o *GetInstallSandboxRunV2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run v2 forbidden response a status code equal to that given
func (o *GetInstallSandboxRunV2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install sandbox run v2 forbidden response
func (o *GetInstallSandboxRunV2Forbidden) Code() int {
	return 403
}

func (o *GetInstallSandboxRunV2Forbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2Forbidden  %+v", 403, o.Payload)
}

func (o *GetInstallSandboxRunV2Forbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2Forbidden  %+v", 403, o.Payload)
}

func (o *GetInstallSandboxRunV2Forbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunV2NotFound creates a GetInstallSandboxRunV2NotFound with default headers values
func NewGetInstallSandboxRunV2NotFound() *GetInstallSandboxRunV2NotFound {
	return &GetInstallSandboxRunV2NotFound{}
}

/*
GetInstallSandboxRunV2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallSandboxRunV2NotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run v2 not found response has a 2xx status code
func (o *GetInstallSandboxRunV2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run v2 not found response has a 3xx status code
func (o *GetInstallSandboxRunV2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run v2 not found response has a 4xx status code
func (o *GetInstallSandboxRunV2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install sandbox run v2 not found response has a 5xx status code
func (o *GetInstallSandboxRunV2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install sandbox run v2 not found response a status code equal to that given
func (o *GetInstallSandboxRunV2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install sandbox run v2 not found response
func (o *GetInstallSandboxRunV2NotFound) Code() int {
	return 404
}

func (o *GetInstallSandboxRunV2NotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2NotFound  %+v", 404, o.Payload)
}

func (o *GetInstallSandboxRunV2NotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2NotFound  %+v", 404, o.Payload)
}

func (o *GetInstallSandboxRunV2NotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunV2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallSandboxRunV2InternalServerError creates a GetInstallSandboxRunV2InternalServerError with default headers values
func NewGetInstallSandboxRunV2InternalServerError() *GetInstallSandboxRunV2InternalServerError {
	return &GetInstallSandboxRunV2InternalServerError{}
}

/*
GetInstallSandboxRunV2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallSandboxRunV2InternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install sandbox run v2 internal server error response has a 2xx status code
func (o *GetInstallSandboxRunV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install sandbox run v2 internal server error response has a 3xx status code
func (o *GetInstallSandboxRunV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install sandbox run v2 internal server error response has a 4xx status code
func (o *GetInstallSandboxRunV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install sandbox run v2 internal server error response has a 5xx status code
func (o *GetInstallSandboxRunV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install sandbox run v2 internal server error response a status code equal to that given
func (o *GetInstallSandboxRunV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install sandbox run v2 internal server error response
func (o *GetInstallSandboxRunV2InternalServerError) Code() int {
	return 500
}

func (o *GetInstallSandboxRunV2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2InternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallSandboxRunV2InternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/sandbox-runs/{run_id}][%d] getInstallSandboxRunV2InternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallSandboxRunV2InternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallSandboxRunV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
