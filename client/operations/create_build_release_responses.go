// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// CreateBuildReleaseReader is a Reader for the CreateBuildRelease structure.
type CreateBuildReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBuildReleaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateBuildReleaseCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBuildReleaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateBuildReleaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateBuildReleaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateBuildReleaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateBuildReleaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/releases] CreateBuildRelease", response, response.Code())
	}
}

// NewCreateBuildReleaseCreated creates a CreateBuildReleaseCreated with default headers values
func NewCreateBuildReleaseCreated() *CreateBuildReleaseCreated {
	return &CreateBuildReleaseCreated{}
}

/*
CreateBuildReleaseCreated describes a response with status code 201, with default header values.

Created
*/
type CreateBuildReleaseCreated struct {
	Payload *models.AppComponentRelease
}

// IsSuccess returns true when this create build release created response has a 2xx status code
func (o *CreateBuildReleaseCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create build release created response has a 3xx status code
func (o *CreateBuildReleaseCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create build release created response has a 4xx status code
func (o *CreateBuildReleaseCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create build release created response has a 5xx status code
func (o *CreateBuildReleaseCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create build release created response a status code equal to that given
func (o *CreateBuildReleaseCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create build release created response
func (o *CreateBuildReleaseCreated) Code() int {
	return 201
}

func (o *CreateBuildReleaseCreated) Error() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseCreated  %+v", 201, o.Payload)
}

func (o *CreateBuildReleaseCreated) String() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseCreated  %+v", 201, o.Payload)
}

func (o *CreateBuildReleaseCreated) GetPayload() *models.AppComponentRelease {
	return o.Payload
}

func (o *CreateBuildReleaseCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppComponentRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBuildReleaseBadRequest creates a CreateBuildReleaseBadRequest with default headers values
func NewCreateBuildReleaseBadRequest() *CreateBuildReleaseBadRequest {
	return &CreateBuildReleaseBadRequest{}
}

/*
CreateBuildReleaseBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateBuildReleaseBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create build release bad request response has a 2xx status code
func (o *CreateBuildReleaseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create build release bad request response has a 3xx status code
func (o *CreateBuildReleaseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create build release bad request response has a 4xx status code
func (o *CreateBuildReleaseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create build release bad request response has a 5xx status code
func (o *CreateBuildReleaseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create build release bad request response a status code equal to that given
func (o *CreateBuildReleaseBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create build release bad request response
func (o *CreateBuildReleaseBadRequest) Code() int {
	return 400
}

func (o *CreateBuildReleaseBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseBadRequest  %+v", 400, o.Payload)
}

func (o *CreateBuildReleaseBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseBadRequest  %+v", 400, o.Payload)
}

func (o *CreateBuildReleaseBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateBuildReleaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBuildReleaseUnauthorized creates a CreateBuildReleaseUnauthorized with default headers values
func NewCreateBuildReleaseUnauthorized() *CreateBuildReleaseUnauthorized {
	return &CreateBuildReleaseUnauthorized{}
}

/*
CreateBuildReleaseUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateBuildReleaseUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create build release unauthorized response has a 2xx status code
func (o *CreateBuildReleaseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create build release unauthorized response has a 3xx status code
func (o *CreateBuildReleaseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create build release unauthorized response has a 4xx status code
func (o *CreateBuildReleaseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create build release unauthorized response has a 5xx status code
func (o *CreateBuildReleaseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create build release unauthorized response a status code equal to that given
func (o *CreateBuildReleaseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create build release unauthorized response
func (o *CreateBuildReleaseUnauthorized) Code() int {
	return 401
}

func (o *CreateBuildReleaseUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateBuildReleaseUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateBuildReleaseUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateBuildReleaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBuildReleaseForbidden creates a CreateBuildReleaseForbidden with default headers values
func NewCreateBuildReleaseForbidden() *CreateBuildReleaseForbidden {
	return &CreateBuildReleaseForbidden{}
}

/*
CreateBuildReleaseForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateBuildReleaseForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create build release forbidden response has a 2xx status code
func (o *CreateBuildReleaseForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create build release forbidden response has a 3xx status code
func (o *CreateBuildReleaseForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create build release forbidden response has a 4xx status code
func (o *CreateBuildReleaseForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create build release forbidden response has a 5xx status code
func (o *CreateBuildReleaseForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create build release forbidden response a status code equal to that given
func (o *CreateBuildReleaseForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create build release forbidden response
func (o *CreateBuildReleaseForbidden) Code() int {
	return 403
}

func (o *CreateBuildReleaseForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseForbidden  %+v", 403, o.Payload)
}

func (o *CreateBuildReleaseForbidden) String() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseForbidden  %+v", 403, o.Payload)
}

func (o *CreateBuildReleaseForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateBuildReleaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBuildReleaseNotFound creates a CreateBuildReleaseNotFound with default headers values
func NewCreateBuildReleaseNotFound() *CreateBuildReleaseNotFound {
	return &CreateBuildReleaseNotFound{}
}

/*
CreateBuildReleaseNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateBuildReleaseNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create build release not found response has a 2xx status code
func (o *CreateBuildReleaseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create build release not found response has a 3xx status code
func (o *CreateBuildReleaseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create build release not found response has a 4xx status code
func (o *CreateBuildReleaseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create build release not found response has a 5xx status code
func (o *CreateBuildReleaseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create build release not found response a status code equal to that given
func (o *CreateBuildReleaseNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create build release not found response
func (o *CreateBuildReleaseNotFound) Code() int {
	return 404
}

func (o *CreateBuildReleaseNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseNotFound  %+v", 404, o.Payload)
}

func (o *CreateBuildReleaseNotFound) String() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseNotFound  %+v", 404, o.Payload)
}

func (o *CreateBuildReleaseNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateBuildReleaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBuildReleaseInternalServerError creates a CreateBuildReleaseInternalServerError with default headers values
func NewCreateBuildReleaseInternalServerError() *CreateBuildReleaseInternalServerError {
	return &CreateBuildReleaseInternalServerError{}
}

/*
CreateBuildReleaseInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateBuildReleaseInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create build release internal server error response has a 2xx status code
func (o *CreateBuildReleaseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create build release internal server error response has a 3xx status code
func (o *CreateBuildReleaseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create build release internal server error response has a 4xx status code
func (o *CreateBuildReleaseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create build release internal server error response has a 5xx status code
func (o *CreateBuildReleaseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create build release internal server error response a status code equal to that given
func (o *CreateBuildReleaseInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create build release internal server error response
func (o *CreateBuildReleaseInternalServerError) Code() int {
	return 500
}

func (o *CreateBuildReleaseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateBuildReleaseInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/releases][%d] createBuildReleaseInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateBuildReleaseInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateBuildReleaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
