// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAppInstallerReader is a Reader for the GetAppInstaller structure.
type GetAppInstallerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppInstallerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppInstallerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppInstallerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppInstallerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppInstallerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppInstallerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAppInstallerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installers/{installer_id}] GetAppInstaller", response, response.Code())
	}
}

// NewGetAppInstallerOK creates a GetAppInstallerOK with default headers values
func NewGetAppInstallerOK() *GetAppInstallerOK {
	return &GetAppInstallerOK{}
}

/*
GetAppInstallerOK describes a response with status code 200, with default header values.

OK
*/
type GetAppInstallerOK struct {
	Payload *models.AppAppInstaller
}

// IsSuccess returns true when this get app installer o k response has a 2xx status code
func (o *GetAppInstallerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get app installer o k response has a 3xx status code
func (o *GetAppInstallerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app installer o k response has a 4xx status code
func (o *GetAppInstallerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app installer o k response has a 5xx status code
func (o *GetAppInstallerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get app installer o k response a status code equal to that given
func (o *GetAppInstallerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get app installer o k response
func (o *GetAppInstallerOK) Code() int {
	return 200
}

func (o *GetAppInstallerOK) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerOK  %+v", 200, o.Payload)
}

func (o *GetAppInstallerOK) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerOK  %+v", 200, o.Payload)
}

func (o *GetAppInstallerOK) GetPayload() *models.AppAppInstaller {
	return o.Payload
}

func (o *GetAppInstallerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAppInstaller)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppInstallerBadRequest creates a GetAppInstallerBadRequest with default headers values
func NewGetAppInstallerBadRequest() *GetAppInstallerBadRequest {
	return &GetAppInstallerBadRequest{}
}

/*
GetAppInstallerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAppInstallerBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app installer bad request response has a 2xx status code
func (o *GetAppInstallerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app installer bad request response has a 3xx status code
func (o *GetAppInstallerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app installer bad request response has a 4xx status code
func (o *GetAppInstallerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app installer bad request response has a 5xx status code
func (o *GetAppInstallerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get app installer bad request response a status code equal to that given
func (o *GetAppInstallerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get app installer bad request response
func (o *GetAppInstallerBadRequest) Code() int {
	return 400
}

func (o *GetAppInstallerBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppInstallerBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppInstallerBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppInstallerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppInstallerUnauthorized creates a GetAppInstallerUnauthorized with default headers values
func NewGetAppInstallerUnauthorized() *GetAppInstallerUnauthorized {
	return &GetAppInstallerUnauthorized{}
}

/*
GetAppInstallerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppInstallerUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app installer unauthorized response has a 2xx status code
func (o *GetAppInstallerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app installer unauthorized response has a 3xx status code
func (o *GetAppInstallerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app installer unauthorized response has a 4xx status code
func (o *GetAppInstallerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app installer unauthorized response has a 5xx status code
func (o *GetAppInstallerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get app installer unauthorized response a status code equal to that given
func (o *GetAppInstallerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get app installer unauthorized response
func (o *GetAppInstallerUnauthorized) Code() int {
	return 401
}

func (o *GetAppInstallerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppInstallerUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppInstallerUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppInstallerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppInstallerForbidden creates a GetAppInstallerForbidden with default headers values
func NewGetAppInstallerForbidden() *GetAppInstallerForbidden {
	return &GetAppInstallerForbidden{}
}

/*
GetAppInstallerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppInstallerForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app installer forbidden response has a 2xx status code
func (o *GetAppInstallerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app installer forbidden response has a 3xx status code
func (o *GetAppInstallerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app installer forbidden response has a 4xx status code
func (o *GetAppInstallerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app installer forbidden response has a 5xx status code
func (o *GetAppInstallerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get app installer forbidden response a status code equal to that given
func (o *GetAppInstallerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get app installer forbidden response
func (o *GetAppInstallerForbidden) Code() int {
	return 403
}

func (o *GetAppInstallerForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerForbidden  %+v", 403, o.Payload)
}

func (o *GetAppInstallerForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerForbidden  %+v", 403, o.Payload)
}

func (o *GetAppInstallerForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppInstallerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppInstallerNotFound creates a GetAppInstallerNotFound with default headers values
func NewGetAppInstallerNotFound() *GetAppInstallerNotFound {
	return &GetAppInstallerNotFound{}
}

/*
GetAppInstallerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAppInstallerNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app installer not found response has a 2xx status code
func (o *GetAppInstallerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app installer not found response has a 3xx status code
func (o *GetAppInstallerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app installer not found response has a 4xx status code
func (o *GetAppInstallerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get app installer not found response has a 5xx status code
func (o *GetAppInstallerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get app installer not found response a status code equal to that given
func (o *GetAppInstallerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get app installer not found response
func (o *GetAppInstallerNotFound) Code() int {
	return 404
}

func (o *GetAppInstallerNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerNotFound  %+v", 404, o.Payload)
}

func (o *GetAppInstallerNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerNotFound  %+v", 404, o.Payload)
}

func (o *GetAppInstallerNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppInstallerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppInstallerInternalServerError creates a GetAppInstallerInternalServerError with default headers values
func NewGetAppInstallerInternalServerError() *GetAppInstallerInternalServerError {
	return &GetAppInstallerInternalServerError{}
}

/*
GetAppInstallerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAppInstallerInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get app installer internal server error response has a 2xx status code
func (o *GetAppInstallerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get app installer internal server error response has a 3xx status code
func (o *GetAppInstallerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get app installer internal server error response has a 4xx status code
func (o *GetAppInstallerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get app installer internal server error response has a 5xx status code
func (o *GetAppInstallerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get app installer internal server error response a status code equal to that given
func (o *GetAppInstallerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get app installer internal server error response
func (o *GetAppInstallerInternalServerError) Code() int {
	return 500
}

func (o *GetAppInstallerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppInstallerInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installers/{installer_id}][%d] getAppInstallerInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppInstallerInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAppInstallerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
