// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetAllVCSBranchesReader is a Reader for the GetAllVCSBranches structure.
type GetAllVCSBranchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllVCSBranchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllVCSBranchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllVCSBranchesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAllVCSBranchesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllVCSBranchesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllVCSBranchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllVCSBranchesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/vcs/branches] GetAllVCSBranches", response, response.Code())
	}
}

// NewGetAllVCSBranchesOK creates a GetAllVCSBranchesOK with default headers values
func NewGetAllVCSBranchesOK() *GetAllVCSBranchesOK {
	return &GetAllVCSBranchesOK{}
}

/*
GetAllVCSBranchesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllVCSBranchesOK struct {
	Payload []*models.AppVCSConnectionBranch
}

// IsSuccess returns true when this get all v c s branches o k response has a 2xx status code
func (o *GetAllVCSBranchesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all v c s branches o k response has a 3xx status code
func (o *GetAllVCSBranchesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s branches o k response has a 4xx status code
func (o *GetAllVCSBranchesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all v c s branches o k response has a 5xx status code
func (o *GetAllVCSBranchesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s branches o k response a status code equal to that given
func (o *GetAllVCSBranchesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all v c s branches o k response
func (o *GetAllVCSBranchesOK) Code() int {
	return 200
}

func (o *GetAllVCSBranchesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesOK %s", 200, payload)
}

func (o *GetAllVCSBranchesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesOK %s", 200, payload)
}

func (o *GetAllVCSBranchesOK) GetPayload() []*models.AppVCSConnectionBranch {
	return o.Payload
}

func (o *GetAllVCSBranchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSBranchesBadRequest creates a GetAllVCSBranchesBadRequest with default headers values
func NewGetAllVCSBranchesBadRequest() *GetAllVCSBranchesBadRequest {
	return &GetAllVCSBranchesBadRequest{}
}

/*
GetAllVCSBranchesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllVCSBranchesBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get all v c s branches bad request response has a 2xx status code
func (o *GetAllVCSBranchesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s branches bad request response has a 3xx status code
func (o *GetAllVCSBranchesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s branches bad request response has a 4xx status code
func (o *GetAllVCSBranchesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s branches bad request response has a 5xx status code
func (o *GetAllVCSBranchesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s branches bad request response a status code equal to that given
func (o *GetAllVCSBranchesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all v c s branches bad request response
func (o *GetAllVCSBranchesBadRequest) Code() int {
	return 400
}

func (o *GetAllVCSBranchesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesBadRequest %s", 400, payload)
}

func (o *GetAllVCSBranchesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesBadRequest %s", 400, payload)
}

func (o *GetAllVCSBranchesBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAllVCSBranchesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSBranchesUnauthorized creates a GetAllVCSBranchesUnauthorized with default headers values
func NewGetAllVCSBranchesUnauthorized() *GetAllVCSBranchesUnauthorized {
	return &GetAllVCSBranchesUnauthorized{}
}

/*
GetAllVCSBranchesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllVCSBranchesUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get all v c s branches unauthorized response has a 2xx status code
func (o *GetAllVCSBranchesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s branches unauthorized response has a 3xx status code
func (o *GetAllVCSBranchesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s branches unauthorized response has a 4xx status code
func (o *GetAllVCSBranchesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s branches unauthorized response has a 5xx status code
func (o *GetAllVCSBranchesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s branches unauthorized response a status code equal to that given
func (o *GetAllVCSBranchesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all v c s branches unauthorized response
func (o *GetAllVCSBranchesUnauthorized) Code() int {
	return 401
}

func (o *GetAllVCSBranchesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesUnauthorized %s", 401, payload)
}

func (o *GetAllVCSBranchesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesUnauthorized %s", 401, payload)
}

func (o *GetAllVCSBranchesUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAllVCSBranchesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSBranchesForbidden creates a GetAllVCSBranchesForbidden with default headers values
func NewGetAllVCSBranchesForbidden() *GetAllVCSBranchesForbidden {
	return &GetAllVCSBranchesForbidden{}
}

/*
GetAllVCSBranchesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllVCSBranchesForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get all v c s branches forbidden response has a 2xx status code
func (o *GetAllVCSBranchesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s branches forbidden response has a 3xx status code
func (o *GetAllVCSBranchesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s branches forbidden response has a 4xx status code
func (o *GetAllVCSBranchesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s branches forbidden response has a 5xx status code
func (o *GetAllVCSBranchesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s branches forbidden response a status code equal to that given
func (o *GetAllVCSBranchesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all v c s branches forbidden response
func (o *GetAllVCSBranchesForbidden) Code() int {
	return 403
}

func (o *GetAllVCSBranchesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesForbidden %s", 403, payload)
}

func (o *GetAllVCSBranchesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesForbidden %s", 403, payload)
}

func (o *GetAllVCSBranchesForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAllVCSBranchesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSBranchesNotFound creates a GetAllVCSBranchesNotFound with default headers values
func NewGetAllVCSBranchesNotFound() *GetAllVCSBranchesNotFound {
	return &GetAllVCSBranchesNotFound{}
}

/*
GetAllVCSBranchesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllVCSBranchesNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get all v c s branches not found response has a 2xx status code
func (o *GetAllVCSBranchesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s branches not found response has a 3xx status code
func (o *GetAllVCSBranchesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s branches not found response has a 4xx status code
func (o *GetAllVCSBranchesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s branches not found response has a 5xx status code
func (o *GetAllVCSBranchesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s branches not found response a status code equal to that given
func (o *GetAllVCSBranchesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all v c s branches not found response
func (o *GetAllVCSBranchesNotFound) Code() int {
	return 404
}

func (o *GetAllVCSBranchesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesNotFound %s", 404, payload)
}

func (o *GetAllVCSBranchesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesNotFound %s", 404, payload)
}

func (o *GetAllVCSBranchesNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAllVCSBranchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSBranchesInternalServerError creates a GetAllVCSBranchesInternalServerError with default headers values
func NewGetAllVCSBranchesInternalServerError() *GetAllVCSBranchesInternalServerError {
	return &GetAllVCSBranchesInternalServerError{}
}

/*
GetAllVCSBranchesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllVCSBranchesInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get all v c s branches internal server error response has a 2xx status code
func (o *GetAllVCSBranchesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s branches internal server error response has a 3xx status code
func (o *GetAllVCSBranchesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s branches internal server error response has a 4xx status code
func (o *GetAllVCSBranchesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all v c s branches internal server error response has a 5xx status code
func (o *GetAllVCSBranchesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all v c s branches internal server error response a status code equal to that given
func (o *GetAllVCSBranchesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all v c s branches internal server error response
func (o *GetAllVCSBranchesInternalServerError) Code() int {
	return 500
}

func (o *GetAllVCSBranchesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesInternalServerError %s", 500, payload)
}

func (o *GetAllVCSBranchesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/vcs/branches][%d] getAllVCSBranchesInternalServerError %s", 500, payload)
}

func (o *GetAllVCSBranchesInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetAllVCSBranchesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
