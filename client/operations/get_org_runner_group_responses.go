// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetOrgRunnerGroupReader is a Reader for the GetOrgRunnerGroup structure.
type GetOrgRunnerGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgRunnerGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgRunnerGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgRunnerGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrgRunnerGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgRunnerGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgRunnerGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgRunnerGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/orgs/current/runner-group] GetOrgRunnerGroup", response, response.Code())
	}
}

// NewGetOrgRunnerGroupOK creates a GetOrgRunnerGroupOK with default headers values
func NewGetOrgRunnerGroupOK() *GetOrgRunnerGroupOK {
	return &GetOrgRunnerGroupOK{}
}

/*
GetOrgRunnerGroupOK describes a response with status code 200, with default header values.

OK
*/
type GetOrgRunnerGroupOK struct {
	Payload *models.AppRunnerGroup
}

// IsSuccess returns true when this get org runner group o k response has a 2xx status code
func (o *GetOrgRunnerGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get org runner group o k response has a 3xx status code
func (o *GetOrgRunnerGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org runner group o k response has a 4xx status code
func (o *GetOrgRunnerGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org runner group o k response has a 5xx status code
func (o *GetOrgRunnerGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get org runner group o k response a status code equal to that given
func (o *GetOrgRunnerGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get org runner group o k response
func (o *GetOrgRunnerGroupOK) Code() int {
	return 200
}

func (o *GetOrgRunnerGroupOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupOK %s", 200, payload)
}

func (o *GetOrgRunnerGroupOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupOK %s", 200, payload)
}

func (o *GetOrgRunnerGroupOK) GetPayload() *models.AppRunnerGroup {
	return o.Payload
}

func (o *GetOrgRunnerGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppRunnerGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRunnerGroupBadRequest creates a GetOrgRunnerGroupBadRequest with default headers values
func NewGetOrgRunnerGroupBadRequest() *GetOrgRunnerGroupBadRequest {
	return &GetOrgRunnerGroupBadRequest{}
}

/*
GetOrgRunnerGroupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOrgRunnerGroupBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org runner group bad request response has a 2xx status code
func (o *GetOrgRunnerGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org runner group bad request response has a 3xx status code
func (o *GetOrgRunnerGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org runner group bad request response has a 4xx status code
func (o *GetOrgRunnerGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org runner group bad request response has a 5xx status code
func (o *GetOrgRunnerGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get org runner group bad request response a status code equal to that given
func (o *GetOrgRunnerGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get org runner group bad request response
func (o *GetOrgRunnerGroupBadRequest) Code() int {
	return 400
}

func (o *GetOrgRunnerGroupBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupBadRequest %s", 400, payload)
}

func (o *GetOrgRunnerGroupBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupBadRequest %s", 400, payload)
}

func (o *GetOrgRunnerGroupBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgRunnerGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRunnerGroupUnauthorized creates a GetOrgRunnerGroupUnauthorized with default headers values
func NewGetOrgRunnerGroupUnauthorized() *GetOrgRunnerGroupUnauthorized {
	return &GetOrgRunnerGroupUnauthorized{}
}

/*
GetOrgRunnerGroupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrgRunnerGroupUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org runner group unauthorized response has a 2xx status code
func (o *GetOrgRunnerGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org runner group unauthorized response has a 3xx status code
func (o *GetOrgRunnerGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org runner group unauthorized response has a 4xx status code
func (o *GetOrgRunnerGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org runner group unauthorized response has a 5xx status code
func (o *GetOrgRunnerGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get org runner group unauthorized response a status code equal to that given
func (o *GetOrgRunnerGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get org runner group unauthorized response
func (o *GetOrgRunnerGroupUnauthorized) Code() int {
	return 401
}

func (o *GetOrgRunnerGroupUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupUnauthorized %s", 401, payload)
}

func (o *GetOrgRunnerGroupUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupUnauthorized %s", 401, payload)
}

func (o *GetOrgRunnerGroupUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgRunnerGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRunnerGroupForbidden creates a GetOrgRunnerGroupForbidden with default headers values
func NewGetOrgRunnerGroupForbidden() *GetOrgRunnerGroupForbidden {
	return &GetOrgRunnerGroupForbidden{}
}

/*
GetOrgRunnerGroupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrgRunnerGroupForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org runner group forbidden response has a 2xx status code
func (o *GetOrgRunnerGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org runner group forbidden response has a 3xx status code
func (o *GetOrgRunnerGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org runner group forbidden response has a 4xx status code
func (o *GetOrgRunnerGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org runner group forbidden response has a 5xx status code
func (o *GetOrgRunnerGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get org runner group forbidden response a status code equal to that given
func (o *GetOrgRunnerGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get org runner group forbidden response
func (o *GetOrgRunnerGroupForbidden) Code() int {
	return 403
}

func (o *GetOrgRunnerGroupForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupForbidden %s", 403, payload)
}

func (o *GetOrgRunnerGroupForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupForbidden %s", 403, payload)
}

func (o *GetOrgRunnerGroupForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgRunnerGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRunnerGroupNotFound creates a GetOrgRunnerGroupNotFound with default headers values
func NewGetOrgRunnerGroupNotFound() *GetOrgRunnerGroupNotFound {
	return &GetOrgRunnerGroupNotFound{}
}

/*
GetOrgRunnerGroupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrgRunnerGroupNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org runner group not found response has a 2xx status code
func (o *GetOrgRunnerGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org runner group not found response has a 3xx status code
func (o *GetOrgRunnerGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org runner group not found response has a 4xx status code
func (o *GetOrgRunnerGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org runner group not found response has a 5xx status code
func (o *GetOrgRunnerGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get org runner group not found response a status code equal to that given
func (o *GetOrgRunnerGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get org runner group not found response
func (o *GetOrgRunnerGroupNotFound) Code() int {
	return 404
}

func (o *GetOrgRunnerGroupNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupNotFound %s", 404, payload)
}

func (o *GetOrgRunnerGroupNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupNotFound %s", 404, payload)
}

func (o *GetOrgRunnerGroupNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgRunnerGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRunnerGroupInternalServerError creates a GetOrgRunnerGroupInternalServerError with default headers values
func NewGetOrgRunnerGroupInternalServerError() *GetOrgRunnerGroupInternalServerError {
	return &GetOrgRunnerGroupInternalServerError{}
}

/*
GetOrgRunnerGroupInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrgRunnerGroupInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get org runner group internal server error response has a 2xx status code
func (o *GetOrgRunnerGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org runner group internal server error response has a 3xx status code
func (o *GetOrgRunnerGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org runner group internal server error response has a 4xx status code
func (o *GetOrgRunnerGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org runner group internal server error response has a 5xx status code
func (o *GetOrgRunnerGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get org runner group internal server error response a status code equal to that given
func (o *GetOrgRunnerGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get org runner group internal server error response
func (o *GetOrgRunnerGroupInternalServerError) Code() int {
	return 500
}

func (o *GetOrgRunnerGroupInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupInternalServerError %s", 500, payload)
}

func (o *GetOrgRunnerGroupInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/orgs/current/runner-group][%d] getOrgRunnerGroupInternalServerError %s", 500, payload)
}

func (o *GetOrgRunnerGroupInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetOrgRunnerGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
