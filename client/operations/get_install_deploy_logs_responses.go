// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallDeployLogsReader is a Reader for the GetInstallDeployLogs structure.
type GetInstallDeployLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallDeployLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallDeployLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallDeployLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallDeployLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallDeployLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallDeployLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallDeployLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs] GetInstallDeployLogs", response, response.Code())
	}
}

// NewGetInstallDeployLogsOK creates a GetInstallDeployLogsOK with default headers values
func NewGetInstallDeployLogsOK() *GetInstallDeployLogsOK {
	return &GetInstallDeployLogsOK{}
}

/*
GetInstallDeployLogsOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallDeployLogsOK struct {
	Payload []interface{}
}

// IsSuccess returns true when this get install deploy logs o k response has a 2xx status code
func (o *GetInstallDeployLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install deploy logs o k response has a 3xx status code
func (o *GetInstallDeployLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install deploy logs o k response has a 4xx status code
func (o *GetInstallDeployLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install deploy logs o k response has a 5xx status code
func (o *GetInstallDeployLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install deploy logs o k response a status code equal to that given
func (o *GetInstallDeployLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install deploy logs o k response
func (o *GetInstallDeployLogsOK) Code() int {
	return 200
}

func (o *GetInstallDeployLogsOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsOK  %+v", 200, o.Payload)
}

func (o *GetInstallDeployLogsOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsOK  %+v", 200, o.Payload)
}

func (o *GetInstallDeployLogsOK) GetPayload() []interface{} {
	return o.Payload
}

func (o *GetInstallDeployLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallDeployLogsBadRequest creates a GetInstallDeployLogsBadRequest with default headers values
func NewGetInstallDeployLogsBadRequest() *GetInstallDeployLogsBadRequest {
	return &GetInstallDeployLogsBadRequest{}
}

/*
GetInstallDeployLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallDeployLogsBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install deploy logs bad request response has a 2xx status code
func (o *GetInstallDeployLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install deploy logs bad request response has a 3xx status code
func (o *GetInstallDeployLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install deploy logs bad request response has a 4xx status code
func (o *GetInstallDeployLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install deploy logs bad request response has a 5xx status code
func (o *GetInstallDeployLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install deploy logs bad request response a status code equal to that given
func (o *GetInstallDeployLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install deploy logs bad request response
func (o *GetInstallDeployLogsBadRequest) Code() int {
	return 400
}

func (o *GetInstallDeployLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallDeployLogsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallDeployLogsBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallDeployLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallDeployLogsUnauthorized creates a GetInstallDeployLogsUnauthorized with default headers values
func NewGetInstallDeployLogsUnauthorized() *GetInstallDeployLogsUnauthorized {
	return &GetInstallDeployLogsUnauthorized{}
}

/*
GetInstallDeployLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallDeployLogsUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install deploy logs unauthorized response has a 2xx status code
func (o *GetInstallDeployLogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install deploy logs unauthorized response has a 3xx status code
func (o *GetInstallDeployLogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install deploy logs unauthorized response has a 4xx status code
func (o *GetInstallDeployLogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install deploy logs unauthorized response has a 5xx status code
func (o *GetInstallDeployLogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install deploy logs unauthorized response a status code equal to that given
func (o *GetInstallDeployLogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install deploy logs unauthorized response
func (o *GetInstallDeployLogsUnauthorized) Code() int {
	return 401
}

func (o *GetInstallDeployLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallDeployLogsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallDeployLogsUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallDeployLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallDeployLogsForbidden creates a GetInstallDeployLogsForbidden with default headers values
func NewGetInstallDeployLogsForbidden() *GetInstallDeployLogsForbidden {
	return &GetInstallDeployLogsForbidden{}
}

/*
GetInstallDeployLogsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallDeployLogsForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install deploy logs forbidden response has a 2xx status code
func (o *GetInstallDeployLogsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install deploy logs forbidden response has a 3xx status code
func (o *GetInstallDeployLogsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install deploy logs forbidden response has a 4xx status code
func (o *GetInstallDeployLogsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install deploy logs forbidden response has a 5xx status code
func (o *GetInstallDeployLogsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install deploy logs forbidden response a status code equal to that given
func (o *GetInstallDeployLogsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install deploy logs forbidden response
func (o *GetInstallDeployLogsForbidden) Code() int {
	return 403
}

func (o *GetInstallDeployLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallDeployLogsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallDeployLogsForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallDeployLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallDeployLogsNotFound creates a GetInstallDeployLogsNotFound with default headers values
func NewGetInstallDeployLogsNotFound() *GetInstallDeployLogsNotFound {
	return &GetInstallDeployLogsNotFound{}
}

/*
GetInstallDeployLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallDeployLogsNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install deploy logs not found response has a 2xx status code
func (o *GetInstallDeployLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install deploy logs not found response has a 3xx status code
func (o *GetInstallDeployLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install deploy logs not found response has a 4xx status code
func (o *GetInstallDeployLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install deploy logs not found response has a 5xx status code
func (o *GetInstallDeployLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install deploy logs not found response a status code equal to that given
func (o *GetInstallDeployLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install deploy logs not found response
func (o *GetInstallDeployLogsNotFound) Code() int {
	return 404
}

func (o *GetInstallDeployLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallDeployLogsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallDeployLogsNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallDeployLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallDeployLogsInternalServerError creates a GetInstallDeployLogsInternalServerError with default headers values
func NewGetInstallDeployLogsInternalServerError() *GetInstallDeployLogsInternalServerError {
	return &GetInstallDeployLogsInternalServerError{}
}

/*
GetInstallDeployLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallDeployLogsInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install deploy logs internal server error response has a 2xx status code
func (o *GetInstallDeployLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install deploy logs internal server error response has a 3xx status code
func (o *GetInstallDeployLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install deploy logs internal server error response has a 4xx status code
func (o *GetInstallDeployLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install deploy logs internal server error response has a 5xx status code
func (o *GetInstallDeployLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install deploy logs internal server error response a status code equal to that given
func (o *GetInstallDeployLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install deploy logs internal server error response
func (o *GetInstallDeployLogsInternalServerError) Code() int {
	return 500
}

func (o *GetInstallDeployLogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallDeployLogsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/deploys/{deploy_id}/logs][%d] getInstallDeployLogsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallDeployLogsInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallDeployLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
