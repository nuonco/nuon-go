// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// GetInstallActionReader is a Reader for the GetInstallAction structure.
type GetInstallActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallActionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallActionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallActionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/actions/{action_id}] GetInstallAction", response, response.Code())
	}
}

// NewGetInstallActionOK creates a GetInstallActionOK with default headers values
func NewGetInstallActionOK() *GetInstallActionOK {
	return &GetInstallActionOK{}
}

/*
GetInstallActionOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallActionOK struct {
	Payload *models.AppInstallActionWorkflow
}

// IsSuccess returns true when this get install action o k response has a 2xx status code
func (o *GetInstallActionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install action o k response has a 3xx status code
func (o *GetInstallActionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action o k response has a 4xx status code
func (o *GetInstallActionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action o k response has a 5xx status code
func (o *GetInstallActionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action o k response a status code equal to that given
func (o *GetInstallActionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install action o k response
func (o *GetInstallActionOK) Code() int {
	return 200
}

func (o *GetInstallActionOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionOK  %+v", 200, o.Payload)
}

func (o *GetInstallActionOK) GetPayload() *models.AppInstallActionWorkflow {
	return o.Payload
}

func (o *GetInstallActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallActionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionBadRequest creates a GetInstallActionBadRequest with default headers values
func NewGetInstallActionBadRequest() *GetInstallActionBadRequest {
	return &GetInstallActionBadRequest{}
}

/*
GetInstallActionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallActionBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action bad request response has a 2xx status code
func (o *GetInstallActionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action bad request response has a 3xx status code
func (o *GetInstallActionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action bad request response has a 4xx status code
func (o *GetInstallActionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action bad request response has a 5xx status code
func (o *GetInstallActionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action bad request response a status code equal to that given
func (o *GetInstallActionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install action bad request response
func (o *GetInstallActionBadRequest) Code() int {
	return 400
}

func (o *GetInstallActionBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallActionBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionUnauthorized creates a GetInstallActionUnauthorized with default headers values
func NewGetInstallActionUnauthorized() *GetInstallActionUnauthorized {
	return &GetInstallActionUnauthorized{}
}

/*
GetInstallActionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallActionUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action unauthorized response has a 2xx status code
func (o *GetInstallActionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action unauthorized response has a 3xx status code
func (o *GetInstallActionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action unauthorized response has a 4xx status code
func (o *GetInstallActionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action unauthorized response has a 5xx status code
func (o *GetInstallActionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action unauthorized response a status code equal to that given
func (o *GetInstallActionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install action unauthorized response
func (o *GetInstallActionUnauthorized) Code() int {
	return 401
}

func (o *GetInstallActionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallActionUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionForbidden creates a GetInstallActionForbidden with default headers values
func NewGetInstallActionForbidden() *GetInstallActionForbidden {
	return &GetInstallActionForbidden{}
}

/*
GetInstallActionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallActionForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action forbidden response has a 2xx status code
func (o *GetInstallActionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action forbidden response has a 3xx status code
func (o *GetInstallActionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action forbidden response has a 4xx status code
func (o *GetInstallActionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action forbidden response has a 5xx status code
func (o *GetInstallActionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action forbidden response a status code equal to that given
func (o *GetInstallActionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install action forbidden response
func (o *GetInstallActionForbidden) Code() int {
	return 403
}

func (o *GetInstallActionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallActionForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionNotFound creates a GetInstallActionNotFound with default headers values
func NewGetInstallActionNotFound() *GetInstallActionNotFound {
	return &GetInstallActionNotFound{}
}

/*
GetInstallActionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallActionNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action not found response has a 2xx status code
func (o *GetInstallActionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action not found response has a 3xx status code
func (o *GetInstallActionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action not found response has a 4xx status code
func (o *GetInstallActionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install action not found response has a 5xx status code
func (o *GetInstallActionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install action not found response a status code equal to that given
func (o *GetInstallActionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install action not found response
func (o *GetInstallActionNotFound) Code() int {
	return 404
}

func (o *GetInstallActionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallActionNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallActionInternalServerError creates a GetInstallActionInternalServerError with default headers values
func NewGetInstallActionInternalServerError() *GetInstallActionInternalServerError {
	return &GetInstallActionInternalServerError{}
}

/*
GetInstallActionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallActionInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install action internal server error response has a 2xx status code
func (o *GetInstallActionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install action internal server error response has a 3xx status code
func (o *GetInstallActionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install action internal server error response has a 4xx status code
func (o *GetInstallActionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install action internal server error response has a 5xx status code
func (o *GetInstallActionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install action internal server error response a status code equal to that given
func (o *GetInstallActionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install action internal server error response
func (o *GetInstallActionInternalServerError) Code() int {
	return 500
}

func (o *GetInstallActionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/actions/{action_id}][%d] getInstallActionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallActionInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallActionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
