// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-go/models"
)

// DeleteAppSecretV2Reader is a Reader for the DeleteAppSecretV2 structure.
type DeleteAppSecretV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAppSecretV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAppSecretV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAppSecretV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAppSecretV2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAppSecretV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAppSecretV2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAppSecretV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/apps/{app_id}/secrets/{secret_id}] DeleteAppSecretV2", response, response.Code())
	}
}

// NewDeleteAppSecretV2OK creates a DeleteAppSecretV2OK with default headers values
func NewDeleteAppSecretV2OK() *DeleteAppSecretV2OK {
	return &DeleteAppSecretV2OK{}
}

/*
DeleteAppSecretV2OK describes a response with status code 200, with default header values.

OK
*/
type DeleteAppSecretV2OK struct {
	Payload bool
}

// IsSuccess returns true when this delete app secret v2 o k response has a 2xx status code
func (o *DeleteAppSecretV2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete app secret v2 o k response has a 3xx status code
func (o *DeleteAppSecretV2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app secret v2 o k response has a 4xx status code
func (o *DeleteAppSecretV2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete app secret v2 o k response has a 5xx status code
func (o *DeleteAppSecretV2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app secret v2 o k response a status code equal to that given
func (o *DeleteAppSecretV2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete app secret v2 o k response
func (o *DeleteAppSecretV2OK) Code() int {
	return 200
}

func (o *DeleteAppSecretV2OK) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2OK  %+v", 200, o.Payload)
}

func (o *DeleteAppSecretV2OK) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2OK  %+v", 200, o.Payload)
}

func (o *DeleteAppSecretV2OK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteAppSecretV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppSecretV2BadRequest creates a DeleteAppSecretV2BadRequest with default headers values
func NewDeleteAppSecretV2BadRequest() *DeleteAppSecretV2BadRequest {
	return &DeleteAppSecretV2BadRequest{}
}

/*
DeleteAppSecretV2BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAppSecretV2BadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app secret v2 bad request response has a 2xx status code
func (o *DeleteAppSecretV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app secret v2 bad request response has a 3xx status code
func (o *DeleteAppSecretV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app secret v2 bad request response has a 4xx status code
func (o *DeleteAppSecretV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app secret v2 bad request response has a 5xx status code
func (o *DeleteAppSecretV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app secret v2 bad request response a status code equal to that given
func (o *DeleteAppSecretV2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete app secret v2 bad request response
func (o *DeleteAppSecretV2BadRequest) Code() int {
	return 400
}

func (o *DeleteAppSecretV2BadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2BadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAppSecretV2BadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2BadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAppSecretV2BadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppSecretV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppSecretV2Unauthorized creates a DeleteAppSecretV2Unauthorized with default headers values
func NewDeleteAppSecretV2Unauthorized() *DeleteAppSecretV2Unauthorized {
	return &DeleteAppSecretV2Unauthorized{}
}

/*
DeleteAppSecretV2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAppSecretV2Unauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app secret v2 unauthorized response has a 2xx status code
func (o *DeleteAppSecretV2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app secret v2 unauthorized response has a 3xx status code
func (o *DeleteAppSecretV2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app secret v2 unauthorized response has a 4xx status code
func (o *DeleteAppSecretV2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app secret v2 unauthorized response has a 5xx status code
func (o *DeleteAppSecretV2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app secret v2 unauthorized response a status code equal to that given
func (o *DeleteAppSecretV2Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete app secret v2 unauthorized response
func (o *DeleteAppSecretV2Unauthorized) Code() int {
	return 401
}

func (o *DeleteAppSecretV2Unauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2Unauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAppSecretV2Unauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2Unauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAppSecretV2Unauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppSecretV2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppSecretV2Forbidden creates a DeleteAppSecretV2Forbidden with default headers values
func NewDeleteAppSecretV2Forbidden() *DeleteAppSecretV2Forbidden {
	return &DeleteAppSecretV2Forbidden{}
}

/*
DeleteAppSecretV2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAppSecretV2Forbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app secret v2 forbidden response has a 2xx status code
func (o *DeleteAppSecretV2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app secret v2 forbidden response has a 3xx status code
func (o *DeleteAppSecretV2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app secret v2 forbidden response has a 4xx status code
func (o *DeleteAppSecretV2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app secret v2 forbidden response has a 5xx status code
func (o *DeleteAppSecretV2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app secret v2 forbidden response a status code equal to that given
func (o *DeleteAppSecretV2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete app secret v2 forbidden response
func (o *DeleteAppSecretV2Forbidden) Code() int {
	return 403
}

func (o *DeleteAppSecretV2Forbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2Forbidden  %+v", 403, o.Payload)
}

func (o *DeleteAppSecretV2Forbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2Forbidden  %+v", 403, o.Payload)
}

func (o *DeleteAppSecretV2Forbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppSecretV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppSecretV2NotFound creates a DeleteAppSecretV2NotFound with default headers values
func NewDeleteAppSecretV2NotFound() *DeleteAppSecretV2NotFound {
	return &DeleteAppSecretV2NotFound{}
}

/*
DeleteAppSecretV2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAppSecretV2NotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app secret v2 not found response has a 2xx status code
func (o *DeleteAppSecretV2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app secret v2 not found response has a 3xx status code
func (o *DeleteAppSecretV2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app secret v2 not found response has a 4xx status code
func (o *DeleteAppSecretV2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete app secret v2 not found response has a 5xx status code
func (o *DeleteAppSecretV2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete app secret v2 not found response a status code equal to that given
func (o *DeleteAppSecretV2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete app secret v2 not found response
func (o *DeleteAppSecretV2NotFound) Code() int {
	return 404
}

func (o *DeleteAppSecretV2NotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2NotFound  %+v", 404, o.Payload)
}

func (o *DeleteAppSecretV2NotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2NotFound  %+v", 404, o.Payload)
}

func (o *DeleteAppSecretV2NotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppSecretV2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppSecretV2InternalServerError creates a DeleteAppSecretV2InternalServerError with default headers values
func NewDeleteAppSecretV2InternalServerError() *DeleteAppSecretV2InternalServerError {
	return &DeleteAppSecretV2InternalServerError{}
}

/*
DeleteAppSecretV2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAppSecretV2InternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this delete app secret v2 internal server error response has a 2xx status code
func (o *DeleteAppSecretV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete app secret v2 internal server error response has a 3xx status code
func (o *DeleteAppSecretV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete app secret v2 internal server error response has a 4xx status code
func (o *DeleteAppSecretV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete app secret v2 internal server error response has a 5xx status code
func (o *DeleteAppSecretV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete app secret v2 internal server error response a status code equal to that given
func (o *DeleteAppSecretV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete app secret v2 internal server error response
func (o *DeleteAppSecretV2InternalServerError) Code() int {
	return 500
}

func (o *DeleteAppSecretV2InternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2InternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAppSecretV2InternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/apps/{app_id}/secrets/{secret_id}][%d] deleteAppSecretV2InternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAppSecretV2InternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *DeleteAppSecretV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
